<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>FastStoneCapture下载破解</title>
      <link href="posts/64047.html"/>
      <url>posts/64047.html</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>一款图像浏览、编辑和抓屏工具，支持包括BMP, JPEG, JPEG 2000, GIF, PNG, PCX, TIFF, WMF, ICO 和TGA在内的所有主流图片格式，其独有的光滑和毛刺处理技术让图片更加清晰，提供缩放、旋转、减切、颜色调整功能。只要点点鼠标就能随心抓取屏幕上的任何东西，拖放支持可以直接从系统、浏览器或其他程序中导入图片。</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/detail/20210617173604.png" alt="FastStoneCapture"></p><h2 id="安装版"><a href="#安装版" class="headerlink" title="安装版"></a>安装版</h2><p>下载<a href="https://pan.ialoe.workers.dev/?file=/FastStoneCapture/FastStoneCapture9.3.0%E5%AE%89%E8%A3%85%E7%89%88.exe">传送门</a></p><p>破解码</p><blockquote><p>USER <code>NAME: TEAM_BRAiGHTLiNG_2007 </code></p><p>CODE: <code>XPNMF-ISDYF-LCSED-BPATU</code></p></blockquote><h2 id="免安装版"><a href="#免安装版" class="headerlink" title="免安装版"></a>免安装版</h2><p>下载<a href="https://pan.ialoe.workers.dev/?file=/FastStoneCapture/FastStone Capture 7.6 单文件版(免安装).exe">传送门</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> FastStoneCapture </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动玩偶信封</title>
      <link href="posts/54609.html"/>
      <url>posts/54609.html</url>
      
        <content type="html"><![CDATA[<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210607123902.png" alt="image-20210607123855018"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 530px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">#computer</span> <span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> none <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 530px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">#mobile</span> <span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> none <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">#article-container img</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#form-wrap</span> <span class="token punctuation">&#123;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 447px<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all 1s ease-in-out .3s<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 0<span class="token punctuation">&#125;</span><span class="token selector">#form-wrap:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 1050px<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> -200px<span class="token punctuation">&#125;</span><span class="token selector">#beforeimg</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 126px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 530px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 317px<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> -100<span class="token punctuation">;</span>    <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">&#125;</span><span class="token selector">#afterimg</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> -2px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 530px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 259px<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 100<span class="token punctuation">;</span>    <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">&#125;</span><span class="token selector">#envelope</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all 1s ease-in-out .3s<span class="token punctuation">;</span>    <span class="token property">padding-top</span><span class="token punctuation">:</span> 200px<span class="token punctuation">&#125;</span><span class="token selector">#maincontent</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 530px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 20px auto 0<span class="token punctuation">&#125;</span><span class="token selector">.headerimg</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">&#125;</span><span class="token selector">.formmain</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 95%<span class="token punctuation">;</span>    <span class="token property">max-width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> auto auto<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 20px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .12<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 20px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .18<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.title3</span> <span class="token punctuation">&#123;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #f6d6af<span class="token punctuation">&#125;</span><span class="token selector">.comments</span> <span class="token punctuation">&#123;</span>    <span class="token property">border-bottom</span><span class="token punctuation">:</span> #ddd 1px solid<span class="token punctuation">;</span>    <span class="token property">border-left</span><span class="token punctuation">:</span> #ddd 1px solid<span class="token punctuation">;</span>    <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 15px 0<span class="token punctuation">;</span>    <span class="token property">padding-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">padding-right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">border-top</span><span class="token punctuation">:</span> #ddd 1px solid<span class="token punctuation">;</span>    <span class="token property">border-right</span><span class="token punctuation">:</span> #ddd 1px solid<span class="token punctuation">;</span>    <span class="token property">padding-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> Arial<span class="token punctuation">,</span> <span class="token string">"Microsoft YaHei"</span><span class="token punctuation">,</span> <span class="token string">"黑体"</span><span class="token punctuation">,</span> <span class="token string">"宋体"</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">&#125;</span><span class="token selector">.bottomcontent</span> <span class="token punctuation">&#123;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 40px<span class="token punctuation">&#125;</span><span class="token selector">.bottomimg</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 5px auto 5px auto<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">&#125;</span><span class="token selector">.bottomhr</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #999<span class="token punctuation">&#125;</span><span class="token selector">[data-theme=dark] .formmain</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #323232<span class="token punctuation">&#125;</span><span class="token selector">[data-theme=dark] .comments</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>90<span class="token punctuation">,</span> 90<span class="token punctuation">,</span> 90<span class="token punctuation">,</span> .8<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>computer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>maincontent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                                    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/Akilarlxh/Valine-Admin@v1.0/source/img/before.png<span class="token punctuation">"</span></span>                                    <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>beforeimg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>envelope<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>formmain<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>headerimg<span class="token punctuation">"</span></span>                                             <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://ae01.alicdn.com/kf/U5bb04af32be544c4b41206d9a42fcacfd.jpg<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">padding</span><span class="token punctuation">:</span> 5px 20px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">></span></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">calss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>来自闲花手札的留言:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comments<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                                有什么想问的？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>                                                有什么想说的？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>                                                有什么想吐槽的？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>                                                哪怕是有什么想吃的，都可以告诉我哦~<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottomcontent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottomimg<span class="token punctuation">"</span></span>                                                     <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottomhr<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>自动书记人偶竭诚为您服务！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>afterimg<span class="token punctuation">"</span></span>                                 <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/Akilarlxh/Valine-Admin@v1.0/source/img/after.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mobile<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>formmain<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>headerimg<span class="token punctuation">"</span></span>                                                   <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://ae01.alicdn.com/kf/U5bb04af32be544c4b41206d9a42fcacfd.jpg<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">padding</span><span class="token punctuation">:</span> 5px 20px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>来自闲花手札的留言:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comments<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    有什么想问的？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>                                    有什么想说的？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>                                    有什么想吐槽的？<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>                                    哪怕是有什么想吃的，都可以告诉我哦~<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottomcontent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>                                            <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png<span class="token punctuation">"</span></span>                                            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottomhr<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottomhr<span class="token punctuation">"</span></span><span class="token attr-name">"</span><span class="token punctuation">></span></span>自动书记人偶竭诚为您服务！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 自动玩偶信封 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动玩偶 </tag>
            
            <tag> 玩偶信封 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven课堂笔记</title>
      <link href="posts/48247.html"/>
      <url>posts/48247.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231219.png"></p><h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>Apache Maven 是一个软件项目管理和依赖管理工具。基于项目对象模型 (POM：Project Object Model) 的概念，Maven 可以从一个中心信息块管理项目的构建、报告和文档。</p><p>无论是小型的开源类库项目，还是大型的企业级应用;无论是传统的瀑布式开发，还是流行的敏捷开发，Maven都能大显身手。</p><blockquote><p>官方网址</p><pre class="line-numbers language-http" data-language="http"><code class="language-http">>http://maven.apache.org/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><h4 id="核心功能【重点】"><a href="#核心功能【重点】" class="headerlink" title="核心功能【重点】"></a>核心功能【重点】</h4><blockquote><ol><li>依赖管理（依赖管理指的就是使用 Maven 来管理项目中使用到的 jar 包，Maven 管理的方式就是“自动下载项目所需要的jar包，统一管理jar包之间的依赖关系)</li><li>项目构建（清理、编译、单元测试、打包、安装、部署、运行）</li><li>约定大于配置，解决不同的ide文件目录不一致的问题</li></ol></blockquote><h3 id="Maven-环境配置"><a href="#Maven-环境配置" class="headerlink" title="Maven 环境配置"></a>Maven 环境配置</h3><h4 id="下载-Maven"><a href="#下载-Maven" class="headerlink" title="下载 Maven"></a>下载 Maven</h4><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">http:</span>//maven.apache.org/download.cgi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605230835.png"></p><h4 id="Maven-库目录"><a href="#Maven-库目录" class="headerlink" title="Maven 库目录"></a>Maven 库目录</h4><blockquote><p>【注意】不要在中文路径下解压</p></blockquote><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td>bin</td><td>包含 mvn 的一些可执行程序</td></tr><tr><td>boot</td><td>包含 plexus-classworlds 类加载器的框架</td></tr><tr><td>config</td><td>包含 settings.xml 在内的配置文件</td></tr><tr><td>lib</td><td>Maven 运行时所需要的 Java 类库</td></tr><tr><td>LICENSE.txt、NOTICE.txt、README.txt</td><td>简要介绍</td></tr></tbody></table><h4 id="配置-Maven-环境变量"><a href="#配置-Maven-环境变量" class="headerlink" title="配置 Maven 环境变量"></a>配置 Maven 环境变量</h4><p>1、此电脑[右键] –&gt; 属性</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605230812.png"></p><p>2、选择高级系统设置</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605230841.png"></p><p>3、选择高级下面的环境变量</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605230846.png"></p><p>4、找到系统变量下的 Path</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605230854.png"></p><p>5、将 Maven 的 bin 目录添加到环境变量中，点击确定</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605230901.png" alt="image-20210106120942322"></p><p>6、一路确定即可</p><h4 id="配置-Maven-仓库"><a href="#配置-Maven-仓库" class="headerlink" title="配置 Maven 仓库"></a>配置 Maven 仓库</h4><p>Maven 使用仓库管理各种 jar 包和插件。</p><p>Maven 仓库分为：本地仓库（local）、远程仓库（remote）两大类</p><h5 id="本地仓库"><a href="#本地仓库" class="headerlink" title="本地仓库"></a>本地仓库</h5><blockquote><p>本地电脑中的仓库。默认位置为：</p><pre class="line-numbers language-none"><code class="language-none">$&#123;user:home&#125;&#x2F;.m2&#x2F;repository<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>【注意】一般需要修改此位置为非C盘</p></blockquote><h5 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h5><p>远程仓库又包括：中央仓库 + 私服 + 其它公共远程仓库 （比如阿里、163等）</p><h6 id="中央仓库"><a href="#中央仓库" class="headerlink" title="中央仓库"></a>中央仓库</h6><p>中央仓库是maven自带的远程仓库，默认地址：<a href="https://repo.maven.apache.org/maven2%EF%BC%8C%E7%94%B1%E4%BA%8E%E9%BB%98%E8%AE%A4%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9C%A8%E5%9B%BD%E5%A4%96%EF%BC%8C%E4%B8%8B%E8%BD%BD%E4%BC%9A%E6%AF%94%E8%BE%83%E6%85%A2%EF%BC%8C%E4%B8%80%E8%88%AC%E9%9C%80%E8%A6%81%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E7%9A%84%E5%85%AC%E5%85%B1%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E4%BD%9C%E4%B8%BA%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93%E9%95%9C%E5%83%8F%E3%80%82%E6%B3%A8%E6%84%8F%E9%85%8D%E7%BD%AE%E4%BA%86%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93%E9%95%9C%E5%83%8F%E5%B0%B1%E4%B8%8D%E5%86%8D%E8%B5%B0%E9%BB%98%E8%AE%A4%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93%E3%80%82%E3%80%82">https://repo.maven.apache.org/maven2，由于默认中央仓库的服务器在国外，下载会比较慢，一般需要配置使用国内的公共远程仓库作为中央仓库镜像。注意配置了中央仓库镜像就不再走默认中央仓库。。</a></p><h6 id="私服"><a href="#私服" class="headerlink" title="私服"></a>私服</h6><p>私服是架设在本机或者局域网中的一种特殊的远程仓库，通过私服可以方便的管理其它所有的外部远程仓库。</p><ul><li>节省自己的外网带宽</li><li>加速maven构建</li><li>部署第三方控件</li><li>提高稳定性</li><li>降低中央仓库的负荷</li></ul><h5 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h5><p>在 maven 的 conf 目录中找到 settings.xml 文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--第一个位置在根节点settings下添加本地仓库位置--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localRepository</span><span class="token punctuation">></span></span>F:/m2/repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localRepository</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--第二个位置，在mirrors节点下添加 中央仓库镜像--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>alimaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>aliyun maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://maven.aliyun.com/nexus/content/groups/public/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">></span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--第三个位置，在 profiles 节点下添加 jdk 版本全局配置，因为默认为1.5--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>jdk-1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdk</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdk</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.compilerVersion</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.compilerVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>检索顺序：先检索本地仓库 –&gt; 再检索远程公共仓库 –&gt; 最后检索中央仓库</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231523.png"></p><h3 id="Maven入门"><a href="#Maven入门" class="headerlink" title="Maven入门"></a>Maven入门</h3><h4 id="Maven-程序目录结构"><a href="#Maven-程序目录结构" class="headerlink" title="Maven 程序目录结构"></a>Maven 程序目录结构</h4><blockquote><p>约定大于配置：能使用约定好的方式，就不要配置。</p></blockquote><h5 id="手动创建目录结构："><a href="#手动创建目录结构：" class="headerlink" title="手动创建目录结构："></a>手动创建目录结构：</h5><pre class="line-numbers language-none"><code class="language-none">maven_project_name--src--main--java--com--fcHello.java--resources--webapp--WEB-INF--web.xml--test--pom.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>目录说明</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>maven_project_name</td><td>maven 项目名</td></tr><tr><td>src</td><td>java 源文件目录</td></tr><tr><td>main</td><td>项目主体目录</td></tr><tr><td>java</td><td>源代码目录</td></tr><tr><td>resources</td><td>资源目录</td></tr><tr><td>webapp</td><td>web 项目目录</td></tr><tr><td>test</td><td>项目测试目录</td></tr><tr><td>pom.xml</td><td>maven项目核心配置文件</td></tr></tbody></table><p>pom.xml 配置文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--组织id：公司名--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--项目名或者模块名--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>testmaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--打包形式 jar包--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--依赖--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--junit单元测试--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="使用命令创建（了解）"><a href="#使用命令创建（了解）" class="headerlink" title="使用命令创建（了解）"></a>使用命令创建（了解）</h5><pre class="line-numbers language-none"><code class="language-none">mvn archetype:generate -DgroupId&#x3D;com.qf.maven -DartifactId&#x3D;maven02 -DinteractiveMode&#x3D;false -DarchetypeCatalog&#x3D;internal<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Maven常见命令"><a href="#Maven常见命令" class="headerlink" title="Maven常见命令"></a>Maven常见命令</h4><p>Maven 的另一个核心功能是项目构建。</p><p>构建包括：清理、编译、测试、打包、安装、部署、运行等。这些过程都可以使用Maven命令来完成。</p><p>每个maven命令都可以通过对应的插件来完成。</p><h5 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h5><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">&#x2F;&#x2F; 清理（删除）编译的文件mvn clean<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>使用插件</p><pre class="line-numbers language-none"><code class="language-none">maven-clean-plugin:2.5:clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><h5 id="compile"><a href="#compile" class="headerlink" title="compile"></a>compile</h5><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">&#x2F;&#x2F; 编译主目录的文件mvn compile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>使用插件</p><pre class="line-numbers language-none"><code class="language-none">&gt;maven-resources-plugin:2.6:resources&gt;maven-compiler-plugin:3.1:compile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote><h5 id="test"><a href="#test" class="headerlink" title="test"></a>test</h5><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">&#x2F;&#x2F; 编译并运行test目录的代码mvn test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>使用插件</p><pre class="line-numbers language-none"><code class="language-none">&gt;maven-resources-plugin:2.6:resources&gt;maven-compiler-plugin:3.1:compile&gt;maven-resources-plugin:2.6:testResources&gt;maven-compiler-plugin:3.1:testCompile&gt;maven-surefire-plugin:2.12.4:test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h5 id="package"><a href="#package" class="headerlink" title="package"></a>package</h5><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">&#x2F;&#x2F; 打包项目,jar包或war包mvn package<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>使用插件</p><pre class="line-numbers language-none"><code class="language-none">&gt;maven-resources-plugin:2.6:resources&gt;maven-compiler-plugin:3.1:compile&gt;maven-resources-plugin:2.6:testResources&gt;maven-compiler-plugin:3.1:testCompile&gt;maven-surefire-plugin:2.12.4:test&gt;maven-jar-plugin:2.4:jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h5 id="install"><a href="#install" class="headerlink" title="install"></a>install</h5><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">&#x2F;&#x2F; 安装到仓库mvn install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>使用插件</p><pre class="line-numbers language-none"><code class="language-none">&gt;maven-resources-plugin:2.6:resources&gt;maven-compiler-plugin:3.1:compile&gt;maven-resources-plugin:2.6:testResources&gt;maven-compiler-plugin:3.1:testCompile&gt;maven-surefire-plugin:2.12.4:test&gt;maven-jar-plugin:2.4:jar&gt;maven-install-plugin:2.4:install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h5 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h5><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">&#x2F;&#x2F; 部署，部署到私服mvn deploy&#x2F;&#x2F; 运行mvn tomcat:run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Maven-构建生命周期"><a href="#Maven-构建生命周期" class="headerlink" title="Maven 构建生命周期"></a>Maven 构建生命周期</h4><pre class="line-numbers language-none"><code class="language-none">1. Clean：项目构建前的清理操作2. Default（Build）：核心生命周期核心过程：编译，测试，运行，打包等等3. Site：项目站点文档创建。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="Maven-POM-文件"><a href="#Maven-POM-文件" class="headerlink" title="Maven POM 文件"></a>Maven POM 文件</h4><blockquote><p>POM( Project Object Model，项目对象模型 ) 是 Maven 工程的基本工作单元。pom.xml是Maven的核心配置文件，包含了项目的基本信息，用于描述项目如何构建，声明项目的 jar 包依赖等等。</p><p>每一个项目都有一个 POM 文件。POM 文件即 pom.xml，应该放在项目的根目录下。一个项目如果分为多个子项目，一般来讲，父项目有一个 POM 文件，每一个子项目都有一个POM文件。在这种结构下，既可以一步构建整个项目，也可以各个子项目分开构建。</p><p>执行任务或目标时，Maven 会在当前目录中查找 POM。它读取 POM，获取所需的配置信息，然后执行目标。</p><p>POM 中可以指定以下配置：</p><ul><li>项目依赖</li><li>插件</li><li>执行目标</li><li>项目构建 profile</li><li>项目版本</li><li>项目开发者列表</li><li>相关邮件列表信息</li></ul></blockquote><p>基本的 pom.xml 配置文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--组织id：公司名--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--项目名或者模块名--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>testmaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--版本号--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--打包形式 jar包--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>【注意】所有 POM 文件都需要 project 元素和三个必需的标签：groupId，artifactId，version。这个必须元素叫做坐标（GAV）</p></blockquote><h4 id="Maven-引入外部依赖"><a href="#Maven-引入外部依赖" class="headerlink" title="Maven 引入外部依赖"></a>Maven 引入外部依赖</h4><blockquote><p>Maven 仓库</p><pre class="line-numbers language-http" data-language="http"><code class="language-http">>https://mvnrepository.com/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><p>引入多个依赖只需在 dependencies 标签下声明对应的 dependency 标签即可</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--依赖--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--junit单元测试--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>【注意】Scope依赖范围：</p><ul><li>compile（编译范围） compile是默认的范围，会被打包。 </li><li>provided（已提供范围） provided依赖只有在当JDK或者一个容器已提供该依赖之后才使用。它们不是传递性的，也不会被打包。</li><li>runtime（运行时范围） runtime依赖在运行和测试系统的时候需要，但在编译的时候不需要。</li><li>test（测试范围）只有在测试编译和测试运行阶段可用。</li><li>system（系统范围）必须显式的提供一个对于本地系统中JAR文件的路径。注意该范围是不推荐使用。</li></ul></blockquote><h3 id="使用开发工具创建Maven项目"><a href="#使用开发工具创建Maven项目" class="headerlink" title="使用开发工具创建Maven项目"></a>使用开发工具创建Maven项目</h3><h4 id="Eclipse配置Maven（了解）"><a href="#Eclipse配置Maven（了解）" class="headerlink" title="Eclipse配置Maven（了解）"></a>Eclipse配置Maven（了解）</h4><ol><li><p>安装插件</p><p>Eclipse使用Maven的前提要安装m2e插件，目前Eclipse已集成，不需要安装。</p></li><li><p>配置Maven</p><p>1、进入首选项</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605230924.png"></p><p>2、添加 Maven 仓库</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605230929.png"></p><p>3、配置 Maven</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605230933.png"></p><p>4、配置 xml 文件</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605230938.png"></p></li><li><p>Eclipse 创建 Maven 工程</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605230943.png"></p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605230951.png"></p></li></ol><h4 id="Idea配置Maven"><a href="#Idea配置Maven" class="headerlink" title="Idea配置Maven"></a>Idea配置Maven</h4><ol><li><p>安装插件</p><p>Idea 自带 Maven 插件，不需要安装</p></li><li><p>配置Maven</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605230956.png"></p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231000.png"></p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231006.png"></p></li><li><p>Idea创建Maven工程</p><p>1、创建项目</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231011.png"></p><p>2、选择 Maven</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231015.png"></p><blockquote><p>【注意】这里不要使用骨架！</p></blockquote><p>3、声明项目名</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231021.png"></p><p>4、选择项目的存放路径</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231027.png"></p></li></ol><h3 id="在-Maven-项目中使用-Web-组件"><a href="#在-Maven-项目中使用-Web-组件" class="headerlink" title="在 Maven 项目中使用 Web 组件"></a>在 Maven 项目中使用 Web 组件</h3><p>1、选中 main</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231032.png"></p><p>2、点击打开文件下的项目架构</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231039.png"></p><p>3、选择模板，添加 Web 组件</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231044.png"></p><p>4、修改部署路径</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231048.png"></p><p>5、注意此路径为 web.xml 的存放路径</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231054.png"></p><p>6、将 web.xml 的路径放在项目下的 src 下的 main 下的 webapp 下的 WEB-INF 下即可</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231116.png"></p><p>7、点击编辑 Web 资源路径</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231119.png"></p><p>8、选择目录</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231124.png"></p><p>9、选择 main 下面的 webapp 目录</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231128.png"></p><p>10、点击 OK</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231132.png"></p><p>11、打开 pom.xml 文件并添加打包方式为 war</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231138.png"></p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>war<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>12、添加 Servlet-api 的 jar 包依赖</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231143.png"></p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--声明此jar包的作用域为编译期--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>【注意】必须声明作用域，否则会报错！</p></blockquote><p>13、添加 Tomcat 插件</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231149.png"></p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--添加插件--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--添加Tomcat插件--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.tomcat.maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>tomcat7-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!--Tomcat相关配置--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>port</span><span class="token punctuation">></span></span>8080<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>port</span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!--编码集--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uriEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>uriEncoding</span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!--访问路径--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span><span class="token punctuation">></span></span>/testMaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>【注意】此方法使用 Maven 自带 Tomcat 插件，也可以使用本地 Tomcat</p></blockquote><p>14、启动 Tomcat 服务器</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231157.png"></p><blockquote><p>【注意】不要反复启动 Tomcat 服务器</p></blockquote><h3 id="Maven-Web-项目结构"><a href="#Maven-Web-项目结构" class="headerlink" title="Maven Web 项目结构"></a>Maven Web 项目结构</h3><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231203.png"></p><h3 id="Maven-操作"><a href="#Maven-操作" class="headerlink" title="Maven 操作"></a>Maven 操作</h3><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210605231208.png"></p><h3 id="pom-xml-配置文件【重点】"><a href="#pom-xml-配置文件【重点】" class="headerlink" title="pom.xml 配置文件【重点】"></a>pom.xml 配置文件【重点】</h3><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven_project<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--因为是web项目，所以打包方式声明为war--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>war<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--添加jar包依赖--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--Servlet-api--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!--声明此jar包的作用域为编译期--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--添加插件--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!--添加Tomcat插件--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.tomcat.maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>tomcat7-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!--Tomcat相关配置--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token comment">&lt;!--端口--></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>port</span><span class="token punctuation">></span></span>8080<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>port</span><span class="token punctuation">></span></span>                    <span class="token comment">&lt;!--编码集--></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uriEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>uriEncoding</span><span class="token punctuation">></span></span>                    <span class="token comment">&lt;!--访问路径--></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span><span class="token punctuation">></span></span>/testMaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!--需要设置打包的文件 特别是非java文件--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>【注意】使用时直接复制粘贴，修改groupId、artifactId、path等参数即可</p></blockquote><h3 id="Maven-相关命令【了解】"><a href="#Maven-相关命令【了解】" class="headerlink" title="Maven 相关命令【了解】"></a>Maven 相关命令【了解】</h3><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>mvn version</td><td>显示当前版本信息</td></tr><tr><td>mvn compile</td><td>编译源代码</td></tr><tr><td>mvn test-compile</td><td>编译测试代码</td></tr><tr><td>mvn test</td><td>运行测试</td></tr><tr><td>mvn site</td><td>生成site</td></tr><tr><td>mvn eclipse:eclipse</td><td>生成eclipse项目</td></tr><tr><td>mvn idea:idea</td><td>生成idea项目</td></tr><tr><td>mvn clean</td><td>清除产生的项目</td></tr><tr><td>mvn package</td><td>打包</td></tr><tr><td>mvn jar:jar</td><td>只打jar包</td></tr><tr><td>mvn source:jar</td><td>源码打包</td></tr><tr><td>mvn tomcat7:run</td><td>在tomcat容器中运行web应用</td></tr><tr><td>mvn jetty:run</td><td>调用Jetty插件的Run目标在Jetty Servlet容器中启动web应用</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯-七星填数</title>
      <link href="posts/57635.html"/>
      <url>posts/57635.html</url>
      
        <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>如图所示。<br>在七角星的14个节点上填入1~14的数字，不重复，不遗漏.要求每条直线上的四个数字之和必须相等。<br>图中已经给出了3个数字。<br>请计算其它位置要填充的数字，答案唯一。<br>填好后，请提交绿色节点的4个数字（从左到右，用空格分开)<br>比如: 12 5 4 8<br>当然，这不是正确的答案</p><p>只提交4个用空格分开的数字，不要填写任何多余的内容。</p><blockquote><p>答案：<code>10 3 9 8</code></p></blockquote><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210601170134.png" alt="七星填数"></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>如图：</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210601170539.png" alt="七星填数"></p><blockquote><p>新建数组用于存放未知数字，红色为下表编号</p><p>通过全排列将1-14未使用的依次放入数组中</p><p>判断是否满足七边之和相等</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// a[0]==6 &amp;&amp;a[8]==14&amp;&amp; a[9]==11</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> num <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">dfs</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> num<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//全排列</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> num<span class="token punctuation">,</span> <span class="token keyword">int</span> p<span class="token punctuation">,</span> <span class="token keyword">int</span> q<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token comment">//满足排列和七边之和相等</span><span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> q <span class="token operator">&amp;&amp;</span> <span class="token function">flag</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>num<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> num<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> num<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> num<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> p<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> q<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">swap</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> p<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">dfs</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">swap</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> p<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 两数交换 a[0]=0,a[1]=1======>>a[0]=1,a[1]=0</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> num<span class="token punctuation">,</span> <span class="token keyword">int</span> p<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">int</span> temp <span class="token operator">=</span> num<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>num<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>num<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 判断是否满足条件（七边之和相等）</span><span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">flag</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> sum1 <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> sum2 <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> sum3 <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> sum4 <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> sum5 <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> sum6 <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> sum <span class="token operator">==</span> sum1 <span class="token operator">&amp;&amp;</span> sum1 <span class="token operator">==</span> sum2 <span class="token operator">&amp;&amp;</span> sum2 <span class="token operator">==</span> sum3 <span class="token operator">&amp;&amp;</span> sum3 <span class="token operator">==</span> sum4 <span class="token operator">&amp;&amp;</span> sum4 <span class="token operator">==</span> sum5 <span class="token operator">&amp;&amp;</span> sum5 <span class="token operator">==</span> sum6<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 返回四数之和</span><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span> c<span class="token punctuation">,</span> <span class="token keyword">int</span> d<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c <span class="token operator">+</span> d<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯 </tag>
            
            <tag> 七星填数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL报错1130</title>
      <link href="posts/13413.html"/>
      <url>posts/13413.html</url>
      
        <content type="html"><![CDATA[<h2 id="错误截图"><a href="#错误截图" class="headerlink" title="错误截图"></a>错误截图</h2><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://imgsa.baidu.com/exp/w=500/sign=7cda09b5a6ec8a13141a57e0c7029157/d62a6059252dd42a03c22cf10c3b5bb5c8eab8a4.jpg" alt="img"></p><h2 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h2><blockquote><p>错误：ERROR 1130: Host ‘192.168.XX.XXX’ is not allowed to connect to thisMySQL serve</p><p>错误1130：主机192.168.XX.XXX”不允许连接到thismysql服务</p><p>原因：被连接的数据不允许使用 192.168.XX.XXX访问，只允许是用 localhost;</p></blockquote><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>在localhost的那台电脑，登入mysql后，更改”mysql” 数据库里的 “user” 表里的 “host”项，从”localhost”改称”%”</p><p>命令详情</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql -u root -puse mysql;select &#39;host&#39; from user where user&#x3D;&#39;root&#39;;update user set host &#x3D; &#39;%&#39; where user &#x3D;&#39;root&#39;;flush privileges;select &#39;host&#39;   from user where user&#x3D;&#39;root&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL(1130错误码) </tag>
            
            <tag> Navicat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统继承-项目管理篇</title>
      <link href="posts/61230.html"/>
      <url>posts/61230.html</url>
      
        <content type="html"><![CDATA[<h2 id="项目管理"><a href="#项目管理" class="headerlink" title="项目管理"></a>项目管理</h2><h3 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h3><ol><li>无论按技术工作先后还是管理工作先后来划分项目阶段，项目的每个阶段都至少包含管理工作和技术工作。</li><li>预算管控者中，职能型组织和弱矩阵型组织为职能经理，平衡矩阵型组织为职能经理和项目经理混合，强矩阵型组织为项目经理</li><li>系统集成供应商，在进行项目内部立项时一般包括的内容有：<ol><li>项目资源估算</li><li>项目资源分配</li><li>准备项目任务书</li><li>任命项目经理</li></ol></li><li>招标人有权自选招标代理机构，委托其办理招标事宜。任何单位和个人不得以任何方式为招标人指定招标代理机构。</li><li>招标人在招标文件中，要求投标人提交投标保证金，投标保证金不得超过招标项目估算价的2%，投标保证金有效期应当与投标有效期一致。</li><li>投标人少于3个的，不得开标，招标人应当重新招标。</li><li>中标后，实施合同内著名的合同价款应为中标人的投资价。</li><li>什么是项目、什么是项目管理</li><li>项目的组织方式</li><li>项目管理过程组</li><li>项目的生命周期</li></ol><hr><h3 id="1-项目的定义"><a href="#1-项目的定义" class="headerlink" title="1. 项目的定义"></a>1. 项目的定义</h3><blockquote><p>为达到特定的目的，使用一定的资源、在确定时间期间内、为特定发起人提供独特的产品、服务或成果而进行的一系列相互关联的活动的集合</p></blockquote><h3 id="2-项目特点"><a href="#2-项目特点" class="headerlink" title="2. 项目特点"></a>2. 项目特点</h3><ol><li>临时性：项目不是一项持续不断的工作，每一个项目都有一个明确的开始时间和结束时间，当项目目标已经实现、由于项目目标明显无法实现或由于项目需求已经不复存在而终止项目时，就意味着项目的结束，但临时性并不意味着项目历时短，有些项目历时数年。</li><li>独特性：没有完全一样的项目，厂商要根据不同的客户提供不同的解决方案，即使有现成的解决方案也要根据客户的特殊要求进行一定的客户化工作。独特性对项目的指导意义是在签定项目合同时要对项目的成果有一个清晰、明确的描述。　　</li><li>渐进明细性：因为项目的产品或服务事先不可见，在项目前期只能粗略地进行项目定义，随着项目的进行才能逐渐完善和精确。</li></ol><blockquote><p>渐进性对项目的指导意义</p><blockquote><ol><li>在项目的推进过程中一定会进行很多修改，产生很多变更，因此，在项目执行过程中要注意对变更的控制，　</li><li>由于项目计划本质上是基于对未来的估计和假设进行的预测，项目推进过程中会遇到各种风险和意外，因此，很多项目可能不会在规定的时间、按规定的预算由规定的人员完成。</li></ol></blockquote></blockquote><h3 id="3-项目目标"><a href="#3-项目目标" class="headerlink" title="3. 项目目标"></a>3. 项目目标</h3><ol><li>成果性=项目目标、约束性目标=管理目标</li><li>SMART原则： specific具体的、measurable可测量的、attainable可达到的、relevant相关性的、Time-bound有明确时限的。</li></ol><h3 id="4-项目目标特性"><a href="#4-项目目标特性" class="headerlink" title="4. 项目目标特性"></a>4. 项目目标特性</h3><blockquote><p>有不同的优先级、具有层次性</p></blockquote><h3 id="5-项目管理需要的专业知识"><a href="#5-项目管理需要的专业知识" class="headerlink" title="5. 项目管理需要的专业知识"></a>5. 项目管理需要的专业知识</h3><ol><li>项目管理知识体系</li><li>项目运用领域知识、标准和规定</li><li>项目环境知识</li><li>通用的管理知识和技能</li><li>软技能或人际关系技能</li><li>经验、知识、工具和技术</li></ol><h3 id="6-项目成功的因素"><a href="#6-项目成功的因素" class="headerlink" title="6. 项目成功的因素"></a>6. 项目成功的因素</h3><blockquote><p>人的因素、事业环境的因素、物的因素（组织过程资产）</p></blockquote><h3 id="7-项目经理"><a href="#7-项目经理" class="headerlink" title="7. 项目经理"></a>7. 项目经理</h3><ol><li>项目经理一般要求<ol><li>足够的知识</li><li>丰富的项目管理经验</li><li>良好的协调和沟通能力</li><li>良好的职业道德</li><li>一定的领导和管理能力</li></ol></li><li>优秀的项目经理<ol><li>真正理解项目经理的角色</li><li>领导并管理项目团队</li><li>组织项目计划</li><li>真正理解“一把手”工程</li><li>注重客户与用户参与</li></ol></li></ol><h3 id="8-项目干系人"><a href="#8-项目干系人" class="headerlink" title="8. 项目干系人"></a>8. 项目干系人</h3><blockquote><p>PMO作用：解决干系人之间的不同意见以满足干系人的不同需求</p></blockquote><ol><li>客户、用户</li><li>项目经理</li><li>执行组织</li><li>项目团队成员</li><li>项目发起人（出资人、出资方）</li><li>职能经理</li><li>影响者</li><li>项目管理办公室PMO</li></ol><h3 id="9-项目成功的事业环境因素"><a href="#9-项目成功的事业环境因素" class="headerlink" title="9. 项目成功的事业环境因素"></a>9. 项目成功的事业环境因素</h3><ol><li>国家或行业标准</li><li>市场状况</li><li>实施单位的组织结构和企业文化</li><li>实施单位的人力资源、财务状况、固定资产等</li><li>项目干系人对风险的承受力</li><li>项目管理信息系统</li></ol><h3 id="10-项目的组织形式"><a href="#10-项目的组织形式" class="headerlink" title="10. 项目的组织形式"></a>10. 项目的组织形式</h3><h4 id="1-职能型组织"><a href="#1-职能型组织" class="headerlink" title="1. 职能型组织"></a>1. 职能型组织</h4><blockquote><p>优点：</p><ol><li>强大的技术支持，便于知识、技能和经验的交流</li><li>清晰的职业生涯晋升路线</li><li>直线沟通、交流简单、责任和权限很清晰</li><li>利于重复性工作为主的过程管理</li></ol><p>缺点：</p><ol><li>职能利益优先于项目，具有狭隘性</li><li>组织横向之间联系薄弱、部门间协调难度大</li><li>项目经理极少或缺少权力、权威</li><li>项目管理发展方向不明、缺少项目基准</li></ol></blockquote><h4 id="2-项目型组织"><a href="#2-项目型组织" class="headerlink" title="2. 项目型组织"></a>2. 项目型组织</h4><blockquote><p>特点：项目经理的权限最大，有很大的独立性，项目成员可集中办公</p><p>优点：</p><ol><li>结构单一，责权分明，利于统一指挥</li><li>目标明确单一</li><li>沟通简洁、方便</li><li>决策快</li></ol><p>缺点</p><ol><li>管理成本过高，项目的工作量不足则资源配置效率低</li><li>项目环境比较封闭，不利于沟通和技术知识共享</li><li>员工缺乏事业上的连续性和保障</li></ol></blockquote><h4 id="3-矩阵型组织"><a href="#3-矩阵型组织" class="headerlink" title="3. 矩阵型组织"></a>3. 矩阵型组织</h4><blockquote><p>特点：共享只能部门资源。沟通对比相对复杂化。有强矩阵、平衡矩阵、弱矩阵区分。</p><p>优点：</p><ol><li>项目经理负责制、有明确的目标</li><li>改善了项目经理对整体资源的控制</li><li>及时响应</li><li>获得只能组织更多的支持</li><li>最大限度地利用公司的稀缺资源</li><li>改善了跨职能部门间的协调合作</li><li>使质量、成本、时间等制约因素得到更好的平衡</li><li>团队成员有归属感，士气高，问题少</li><li>出现冲突较少，且易处理解决</li></ol><p>缺点：</p><ol><li>管理成本增加</li><li>多头领导</li><li>难以监测和控制</li><li>资源分配与项目优先问题产生冲突</li><li>权力难以保持平衡</li></ol></blockquote><h4 id="4-复合型组织"><a href="#4-复合型组织" class="headerlink" title="4. 复合型组织"></a>4. 复合型组织</h4><h3 id="11-组织结构对项目的影响"><a href="#11-组织结构对项目的影响" class="headerlink" title="11. 组织结构对项目的影响"></a>11. 组织结构对项目的影响</h3><ol><li>项目经理的权力由弱到强、可用资源由少到多顺序都为：职能型&lt;矩阵型&lt;项目型</li><li>项目预算控制着：职能经理向项目经理过渡</li></ol><h3 id="12-项目管理办公室PMO定义"><a href="#12-项目管理办公室PMO定义" class="headerlink" title="12. 项目管理办公室PMO定义"></a>12. 项目管理办公室PMO定义</h3><blockquote><p>负责对所辖各项目进行集中协调管理的一个组织部门</p></blockquote><h3 id="13-项目管理办公室PMO的三种类型"><a href="#13-项目管理办公室PMO的三种类型" class="headerlink" title="13. 项目管理办公室PMO的三种类型"></a>13. 项目管理办公室PMO的三种类型</h3><ol><li>支持型</li><li>控制型</li><li>指令型</li></ol><h3 id="14-项目管理办公室PMO的核心职能"><a href="#14-项目管理办公室PMO的核心职能" class="headerlink" title="14. 项目管理办公室PMO的核心职能"></a>14. 项目管理办公室PMO的核心职能</h3><blockquote><p>定义并推进可重用项目的管理流程、集中控制项目进展和资源调配</p></blockquote><h3 id="15-项目的生命周期"><a href="#15-项目的生命周期" class="headerlink" title="15. 项目的生命周期"></a>15. 项目的生命周期</h3><blockquote><p>从项目开始到项目结束的所有项目阶段的总和。产品生命周期包括项目生命周期。</p></blockquote><h4 id="16-项目生命周期过程中"><a href="#16-项目生命周期过程中" class="headerlink" title="16. 项目生命周期过程中"></a>16. 项目生命周期过程中</h4><blockquote><p>项目干系人影响越来越小。投入的成本、人员先增后减、后期变更、缺陷修改费用越来越高。</p></blockquote><h3 id="17-项目阶段的特征"><a href="#17-项目阶段的特征" class="headerlink" title="17. 项目阶段的特征"></a>17. 项目阶段的特征</h3><ol><li>每个项目阶段都以一个或一个以上的交付物的完成为标志</li><li>阶段评审目的：判断当前阶段是否满足标准并批准进入下一阶段，当前阶段中是否有存在的问题和错误。</li><li>阶段评审内容：阶段产生的交付物和执行情况。</li></ol><h3 id="18-项目周期模型"><a href="#18-项目周期模型" class="headerlink" title="18. 项目周期模型"></a>18. 项目周期模型</h3><ol><li>瀑布模型</li><li>原型化模型</li><li>敏捷方法</li><li>v模型</li><li>螺旋模型</li><li>迭代模型</li></ol>]]></content>
      
      
      <categories>
          
          <category> 软考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软考 </tag>
            
            <tag> 系统集成项目管理工程师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加气泡上升特效</title>
      <link href="posts/38530.html"/>
      <url>posts/38530.html</url>
      
        <content type="html"><![CDATA[<h2 id="添加JavaScript"><a href="#添加JavaScript" class="headerlink" title="添加JavaScript"></a>添加JavaScript</h2><p>在需要的地方添加以下JS</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//运行主函数</span><span class="token function">circleMagic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//主函数内容</span><span class="token keyword">function</span> <span class="token function">circleMagic</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> width<span class="token punctuation">;</span>        <span class="token keyword">let</span> height<span class="token punctuation">;</span>        <span class="token keyword">let</span> canvas<span class="token punctuation">;</span>        <span class="token keyword">let</span> ctx<span class="token punctuation">;</span>        <span class="token keyword">let</span> animateHeader <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> circles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> settings <span class="token operator">=</span> options <span class="token operator">||</span> <span class="token punctuation">&#123;</span>            color<span class="token operator">:</span> <span class="token string">'rgba(255,255,255,.5)'</span><span class="token punctuation">,</span>            radius<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>            density<span class="token operator">:</span> <span class="token number">0.3</span><span class="token punctuation">,</span>            clearOffset<span class="token operator">:</span> <span class="token number">0.2</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//  Main</span>        <span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'smarts'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">addListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">initContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            width <span class="token operator">=</span> container<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">;</span>            height <span class="token operator">=</span> container<span class="token punctuation">.</span>offsetHeight <span class="token operator">-</span> <span class="token number">120</span><span class="token punctuation">;</span>            <span class="token comment">//  create canvas element</span>            <span class="token function">initCanvas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'homeTopCanvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">'absolute'</span><span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token string">'0'</span><span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>style<span class="token punctuation">.</span>bottom <span class="token operator">=</span> <span class="token string">'0'</span><span class="token punctuation">;</span>            ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//  create circles</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> width <span class="token operator">*</span> settings<span class="token punctuation">.</span>density<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                circles<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// Init canvas element</span>        <span class="token keyword">function</span> <span class="token function">initCanvas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> canvasElement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            canvasElement<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">'homeTopCanvas'</span><span class="token punctuation">;</span>            canvasElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>pointerEvents <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>            container<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>canvasElement<span class="token punctuation">)</span><span class="token punctuation">;</span>            canvasElement<span class="token punctuation">.</span>parentElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// Event handling</span>        <span class="token keyword">function</span> <span class="token function">addListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'scroll'</span><span class="token punctuation">,</span> scrollCheck<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> resize<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">scrollCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">></span> height<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                animateHeader <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                animateHeader <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            width <span class="token operator">=</span> container<span class="token punctuation">.</span>clientWidth<span class="token punctuation">;</span>            height <span class="token operator">=</span> container<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span>            container<span class="token punctuation">.</span>height <span class="token operator">=</span> height <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>animateHeader<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> i <span class="token keyword">in</span> circles<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    circles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">randomColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> r <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> g <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> b <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> alpha <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">'rgba('</span> <span class="token operator">+</span> r <span class="token operator">+</span> <span class="token string">', '</span> <span class="token operator">+</span> g <span class="token operator">+</span> <span class="token string">', '</span> <span class="token operator">+</span> b <span class="token operator">+</span> <span class="token string">', '</span> <span class="token operator">+</span> alpha <span class="token operator">+</span> <span class="token string">')'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//  Canvas manipulation</span>        <span class="token keyword">function</span> <span class="token function">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>            <span class="token comment">// constructor</span>            <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                that<span class="token punctuation">.</span>pos <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                that<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> width<span class="token punctuation">;</span>                that<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>y <span class="token operator">=</span> height <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">;</span>                that<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0.1</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> settings<span class="token punctuation">.</span>clearOffset<span class="token punctuation">;</span>                that<span class="token punctuation">.</span>scale <span class="token operator">=</span> <span class="token number">0.1</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.3</span><span class="token punctuation">;</span>                that<span class="token punctuation">.</span>speed <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>settings<span class="token punctuation">.</span>color <span class="token operator">===</span> <span class="token string">'random'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    that<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token function">randomColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    that<span class="token punctuation">.</span>color <span class="token operator">=</span> settings<span class="token punctuation">.</span>color<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>that<span class="token punctuation">.</span>alpha <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                that<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>y <span class="token operator">-=</span> that<span class="token punctuation">.</span>speed<span class="token punctuation">;</span>                that<span class="token punctuation">.</span>alpha <span class="token operator">-=</span> <span class="token number">0.0005</span><span class="token punctuation">;</span>                ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>                    that<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>x<span class="token punctuation">,</span>                    that<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>y<span class="token punctuation">,</span>                    that<span class="token punctuation">.</span>scale <span class="token operator">*</span> settings<span class="token punctuation">.</span>radius<span class="token punctuation">,</span>                    <span class="token number">0</span><span class="token punctuation">,</span>                    <span class="token number">2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">,</span>                    <span class="token boolean">false</span>                <span class="token punctuation">)</span><span class="token punctuation">;</span>                ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> that<span class="token punctuation">.</span>color<span class="token punctuation">;</span>                ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                ctx<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="添加特效容器"><a href="#添加特效容器" class="headerlink" title="添加特效容器"></a>添加特效容器</h2><p>在需要的box中设置 <code>id=&quot;smarts&quot;</code></p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/20210527085626.png" alt="容器演示图"></p><h2 id="效果演示代码"><a href="#效果演示代码" class="headerlink" title="效果演示代码"></a>效果演示代码</h2><p>新建文本后缀从<code>txt</code>改为<code>html</code></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span>          <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ie=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">background</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100%</span><span class="token punctuation">"</span></span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">height</span><span class="token punctuation">:</span>500px</span><span class="token punctuation">"</span></span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>smarts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token function">circleMagic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//主函数内容</span>    <span class="token keyword">function</span> <span class="token function">circleMagic</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> width<span class="token punctuation">;</span>        <span class="token keyword">let</span> height<span class="token punctuation">;</span>        <span class="token keyword">let</span> canvas<span class="token punctuation">;</span>        <span class="token keyword">let</span> ctx<span class="token punctuation">;</span>        <span class="token keyword">let</span> animateHeader <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> circles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> settings <span class="token operator">=</span> options <span class="token operator">||</span> <span class="token punctuation">&#123;</span>            color<span class="token operator">:</span> <span class="token string">'rgba(255,255,255,.5)'</span><span class="token punctuation">,</span>            radius<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>            density<span class="token operator">:</span> <span class="token number">0.3</span><span class="token punctuation">,</span>            clearOffset<span class="token operator">:</span> <span class="token number">0.2</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//  Main</span>        <span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'smarts'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">addListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">initContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            width <span class="token operator">=</span> container<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">;</span>            height <span class="token operator">=</span> container<span class="token punctuation">.</span>offsetHeight <span class="token operator">-</span> <span class="token number">120</span><span class="token punctuation">;</span>            <span class="token comment">//  create canvas element</span>            <span class="token function">initCanvas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'homeTopCanvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">'absolute'</span><span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token string">'0'</span><span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>style<span class="token punctuation">.</span>bottom <span class="token operator">=</span> <span class="token string">'0'</span><span class="token punctuation">;</span>            ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//  create circles</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> width <span class="token operator">*</span> settings<span class="token punctuation">.</span>density<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                circles<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// Init canvas element</span>        <span class="token keyword">function</span> <span class="token function">initCanvas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> canvasElement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            canvasElement<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">'homeTopCanvas'</span><span class="token punctuation">;</span>            canvasElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>pointerEvents <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>            container<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>canvasElement<span class="token punctuation">)</span><span class="token punctuation">;</span>            canvasElement<span class="token punctuation">.</span>parentElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// Event handling</span>        <span class="token keyword">function</span> <span class="token function">addListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'scroll'</span><span class="token punctuation">,</span> scrollCheck<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> resize<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">scrollCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">></span> height<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                animateHeader <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                animateHeader <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            width <span class="token operator">=</span> container<span class="token punctuation">.</span>clientWidth<span class="token punctuation">;</span>            height <span class="token operator">=</span> container<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span>            container<span class="token punctuation">.</span>height <span class="token operator">=</span> height <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>animateHeader<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> i <span class="token keyword">in</span> circles<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    circles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">randomColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> r <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> g <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> b <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> alpha <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">'rgba('</span> <span class="token operator">+</span> r <span class="token operator">+</span> <span class="token string">', '</span> <span class="token operator">+</span> g <span class="token operator">+</span> <span class="token string">', '</span> <span class="token operator">+</span> b <span class="token operator">+</span> <span class="token string">', '</span> <span class="token operator">+</span> alpha <span class="token operator">+</span> <span class="token string">')'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//  Canvas manipulation</span>        <span class="token keyword">function</span> <span class="token function">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>            <span class="token comment">// constructor</span>            <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                that<span class="token punctuation">.</span>pos <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                that<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> width<span class="token punctuation">;</span>                that<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>y <span class="token operator">=</span> height <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">;</span>                that<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0.1</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> settings<span class="token punctuation">.</span>clearOffset<span class="token punctuation">;</span>                that<span class="token punctuation">.</span>scale <span class="token operator">=</span> <span class="token number">0.1</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.3</span><span class="token punctuation">;</span>                that<span class="token punctuation">.</span>speed <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>settings<span class="token punctuation">.</span>color <span class="token operator">===</span> <span class="token string">'random'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    that<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token function">randomColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    that<span class="token punctuation">.</span>color <span class="token operator">=</span> settings<span class="token punctuation">.</span>color<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>that<span class="token punctuation">.</span>alpha <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                that<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>y <span class="token operator">-=</span> that<span class="token punctuation">.</span>speed<span class="token punctuation">;</span>                that<span class="token punctuation">.</span>alpha <span class="token operator">-=</span> <span class="token number">0.0005</span><span class="token punctuation">;</span>                ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>                    that<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>x<span class="token punctuation">,</span>                    that<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>y<span class="token punctuation">,</span>                    that<span class="token punctuation">.</span>scale <span class="token operator">*</span> settings<span class="token punctuation">.</span>radius<span class="token punctuation">,</span>                    <span class="token number">0</span><span class="token punctuation">,</span>                    <span class="token number">2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">,</span>                    <span class="token boolean">false</span>                <span class="token punctuation">)</span><span class="token punctuation">;</span>                ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> that<span class="token punctuation">.</span>color<span class="token punctuation">;</span>                ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                ctx<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript特效 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript特效 </tag>
            
            <tag> 气泡上升 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加载动画(吃豆豆)</title>
      <link href="posts/2687.html"/>
      <url>posts/2687.html</url>
      
        <content type="html"><![CDATA[<h1 id="Loading吃豆豆动画"><a href="#Loading吃豆豆动画" class="headerlink" title="Loading吃豆豆动画"></a>Loading吃豆豆动画</h1><h2 id="新建loading-ejs文件"><a href="#新建loading-ejs文件" class="headerlink" title="新建loading.ejs文件"></a>新建loading.ejs文件</h2><p>在<code>_partial</code> 文件夹下新建<code>loading.ejs</code> </p><p>添加以下代码</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">#loading-container</span><span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">min-height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 9999<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token comment">/* loader页面消失采用渐隐的方式*/</span>    <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> opacity 1s ease<span class="token punctuation">;</span>    <span class="token property">-moz-transition</span><span class="token punctuation">:</span> opacity 1s ease<span class="token punctuation">;</span>    <span class="token property">-o-transition</span><span class="token punctuation">:</span> opacity 1s ease<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> opacity 1s ease<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loading-image</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loading-image div:nth-child(2)</span> <span class="token punctuation">&#123;</span>    <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> pacman-balls 1s linear 0s infinite<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> pacman-balls 1s linear 0s infinite<span class="token punctuation">&#125;</span><span class="token selector">.loading-image div:nth-child(3)</span> <span class="token punctuation">&#123;</span>    <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> pacman-balls 1s linear .33s infinite<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> pacman-balls 1s linear .33s infinite<span class="token punctuation">&#125;</span><span class="token selector">.loading-image div:nth-child(4)</span> <span class="token punctuation">&#123;</span>    <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> pacman-balls 1s linear .66s infinite<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> pacman-balls 1s linear .66s infinite<span class="token punctuation">&#125;</span><span class="token selector">.loading-image div:nth-child(5)</span> <span class="token punctuation">&#123;</span>    <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> pacman-balls 1s linear .99s infinite<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> pacman-balls 1s linear .99s infinite<span class="token punctuation">&#125;</span><span class="token selector">.loading-image div:first-of-type</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 25px solid #49b1f5<span class="token punctuation">;</span>    <span class="token property">border-right-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>    <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> rotate_pacman_half_up .5s 0s infinite<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> rotate_pacman_half_up .5s 0s infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loading-image div:nth-child(2)</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 25px solid #49b1f5<span class="token punctuation">;</span>    <span class="token property">border-right-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>    <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> rotate_pacman_half_down .5s 0s infinite<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> rotate_pacman_half_down .5s 0s infinite<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> -50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rotate_pacman_half_up</span> <span class="token punctuation">&#123;</span><span class="token selector">0%</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>270deg<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">50%</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>1turn<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">to</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>270deg<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> rotate_pacman_half_up</span> <span class="token punctuation">&#123;</span><span class="token selector">0%</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>270deg<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">50%</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>1turn<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">to</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>270deg<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rotate_pacman_half_down</span> <span class="token punctuation">&#123;</span><span class="token selector">0%</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">50%</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">to</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> rotate_pacman_half_down</span> <span class="token punctuation">&#123;</span><span class="token selector">0%</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">50%</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">to</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> pacman-balls</span> <span class="token punctuation">&#123;</span><span class="token selector">75%</span> <span class="token punctuation">&#123;</span><span class="token property">opacity</span><span class="token punctuation">:</span> .7<span class="token punctuation">&#125;</span><span class="token selector">to</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-100px<span class="token punctuation">,</span> -6.25px<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> pacman-balls</span> <span class="token punctuation">&#123;</span><span class="token selector">75%</span> <span class="token punctuation">&#123;</span><span class="token property">opacity</span><span class="token punctuation">:</span> .7<span class="token punctuation">&#125;</span><span class="token selector">to</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-100px<span class="token punctuation">,</span> -6.25px<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.loading-image div:nth-child(3),.loading-image div:nth-child(4),.loading-image div:nth-child(5),.loading-image div:nth-child(6)</span><span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #49b1f5<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-6.25px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loading-text</span><span class="token punctuation">&#123;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 20vh<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #2c3e50<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0 10px<span class="token punctuation">;</span>    <span class="token property">text-shadow</span><span class="token punctuation">:</span> 0 2px 10px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0.2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.loading-text</span><span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.fadeout</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">alpha</span><span class="token punctuation">(</span>opacity=0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* logo出现动画 */</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> fadeInDown</span><span class="token punctuation">&#123;</span><span class="token selector">0%</span><span class="token punctuation">&#123;</span><span class="token property">opacity</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token property">-webkit-transform</span><span class="token punctuation">:</span><span class="token function">translate3d</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>-100%<span class="token punctuation">,</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translate3d</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>-100%<span class="token punctuation">,</span>0<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">100%</span><span class="token punctuation">&#123;</span><span class="token property">opacity</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span><span class="token property">-webkit-transform</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span>none<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> fadeInDown</span><span class="token punctuation">&#123;</span><span class="token selector">0%</span><span class="token punctuation">&#123;</span><span class="token property">opacity</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token property">-webkit-transform</span><span class="token punctuation">:</span><span class="token function">translate3d</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>-100%<span class="token punctuation">,</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loading-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loading-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>嘘 ~ 正在从服务器偷取页面 . . . <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loading-image<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> <span class="token function-variable function">loaded</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">const</span> loader <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"loading-container"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                loader<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">"fadeout"</span><span class="token punctuation">;</span>                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    loader<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>loading<span class="token punctuation">.</span>time </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token function">loaded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="引用ejs文件"><a href="#引用ejs文件" class="headerlink" title="引用ejs文件"></a>引用ejs文件</h2><p>在 <code> layout.ejs</code>中引用<code>loading.ejs</code></p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>loading<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>    <span class="token comment">&lt;!--  加载动画，强制加载0.5s  --></span>    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/loading'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h2><p>在主题配置文件（<code>_config.yml</code>）下添加以下配置</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 加载动画</span><span class="token key atrule">loading</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">time</span><span class="token punctuation">:</span> <span class="token number">500</span> <span class="token comment"># 强制开启loading动画的时间 1000=1s,默认为0.5s</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Loading加载动画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装Redis</title>
      <link href="posts/41794.html"/>
      <url>posts/41794.html</url>
      
        <content type="html"><![CDATA[<h2 id="Docker安装Redis"><a href="#Docker安装Redis" class="headerlink" title="Docker安装Redis"></a>Docker安装Redis</h2><p>Docker镜像市场 <a href="https://hub.docker.com/_/redis">传送门</a></p><h3 id="安装Redis镜像"><a href="#安装Redis镜像" class="headerlink" title="安装Redis镜像"></a>安装Redis镜像</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># sudo 以超级管理员权限运行命令# docker pull 镜像名:镜像版本# docker pull 镜像名 即不加:版本号为默认安装最新版本镜像$ sudo docker pull redis<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查询已安装的镜像"><a href="#查询已安装的镜像" class="headerlink" title="查询已安装的镜像"></a>查询已安装的镜像</h3><p>使用命令 <code>sudo docker images</code> 查询已安装的镜像</p><h3 id="创建实例并启动"><a href="#创建实例并启动" class="headerlink" title="创建实例并启动"></a>创建实例并启动</h3><p>运行命令 <code>mkdir -p /mydata/redis/conf</code></p><p>再运行 <code>touch /mydata/redis/conf/redis.conf</code></p><p>运行命令实现挂载</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ sudo docker run -p 6379:6379 --name redis \-v &#x2F;mydata&#x2F;redis&#x2F;data:&#x2F;data&#x2F;log \-v &#x2F;mydata&#x2F;redis&#x2F;conf:&#x2F;etc&#x2F;redis&#x2F;redis.conf \-d redis redis-server &#x2F;etc&#x2F;redis&#x2F;redis.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="设置Docker中Redis开机自启动"><a href="#设置Docker中Redis开机自启动" class="headerlink" title="设置Docker中Redis开机自启动"></a>设置Docker中Redis开机自启动</h3><p>管理员权限运行命令 (su root)</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker update redis --restart&#x3D;always<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="使用Redis客户端"><a href="#使用Redis客户端" class="headerlink" title="使用Redis客户端"></a>使用Redis客户端</h3><p>运行<code>docker ps -a</code> 查询运行中的容器中是否有<code>redis</code>正在运行</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article20210521171736.png" alt="查询docker容器运行中的镜像"></p><p>使用命令<code>docker exec -it redis redis-cli</code> 进行客户端连接</p><h3 id="使用工具RedisDesktopManager远程连接Redis"><a href="#使用工具RedisDesktopManager远程连接Redis" class="headerlink" title="使用工具RedisDesktopManager远程连接Redis"></a>使用工具RedisDesktopManager远程连接Redis</h3><p>工具下载地址 <a href="https://github.com/uglide/RedisDesktopManager/releases/tag/0.9.3">传送门</a></p><p>微云下载连接 <a href="https://share.weiyun.com/i9rfHd7U">传送门</a></p><p>安装后在linux中输入 <code>ip addr</code> 查询id地址进行登录即可</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装MySQL服务</title>
      <link href="posts/40075.html"/>
      <url>posts/40075.html</url>
      
        <content type="html"><![CDATA[<h2 id="Docker安装MySQL"><a href="#Docker安装MySQL" class="headerlink" title="Docker安装MySQL"></a>Docker安装MySQL</h2><h3 id="安装MySQL镜像"><a href="#安装MySQL镜像" class="headerlink" title="安装MySQL镜像"></a>安装MySQL镜像</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># sudo 以超级管理员权限运行命令# docker pull 镜像名:镜像版本# docker pull 镜像名 即不加:版本号为默认安装最新版本镜像$ sudo docker pull mysql:5.7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查询已安装的镜像"><a href="#查询已安装的镜像" class="headerlink" title="查询已安装的镜像"></a>查询已安装的镜像</h3><p>使用命令 <code>sudo docker images</code> 查询已安装的镜像</p><h3 id="创建实例并启动"><a href="#创建实例并启动" class="headerlink" title="创建实例并启动"></a>创建实例并启动</h3><p>运行命令实现挂载</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ docker run -p 3306:3306 --name mysql \-v &#x2F;mydata&#x2F;mysql&#x2F;log:&#x2F;var&#x2F;log&#x2F;mysql \-v &#x2F;mydata&#x2F;mysql&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql \-v &#x2F;mydata&#x2F;mysql&#x2F;conf:&#x2F;etc&#x2F;mysql \-e MYSQL_ROOT_PASSWORD&#x3D;root \-d mysql:5.7##################################### 若未成功可能为权限问题导致，运行 su root 提升至管理员权限# 参数说明# -p 3306:3306:    将容器的3306端口映射到主机的3306端口# -v &#x2F;mydata&#x2F;mysql&#x2F;log:&#x2F;var&#x2F;log&#x2F;mysql    将日志文件夹挂在到主机# -v &#x2F;mydata&#x2F;mysql&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql    将配置文件夹挂在到主机# -v &#x2F;mydata&#x2F;mysql&#x2F;conf:&#x2F;etc&#x2F;mysql    将配置文件夹挂载到主机# -e MYSQL_ROOT_PASSWORD&#x3D;root    初始化root用户的密码# -d mysql：5.7    以后台方式运行###################################<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装后使用命令 <code>docker ps</code> 查询正在运行的服务</p><h3 id="修改MySQL配置"><a href="#修改MySQL配置" class="headerlink" title="修改MySQL配置"></a>修改MySQL配置</h3><p>将拉丁编码修改为utf8编码</p><p>在cmd中输入命令 <code>vi /mydata/mysql/conf/my.cnf</code></p><p>在 <code>my.cnf</code> 中添加</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[client]default-character-set&#x3D;utf8[mysql]default-character-set&#x3D;utf8[mysqld]init_connect&#x3D;&#39;SET collation_connection &#x3D; utf8_unicode_ci&#39;init_connect&#x3D;&#39;SET NAMES utf8&#39;character-set-server&#x3D;utf8collation-server&#x3D;utf8_unicode_ciskip-character-set-client-handshakeskip-name-resolve                <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行命令<code>docker restart mysql</code> 重启mysql服务</p><h3 id="设置Docker中MySQL开机自启动"><a href="#设置Docker中MySQL开机自启动" class="headerlink" title="设置Docker中MySQL开机自启动"></a>设置Docker中MySQL开机自启动</h3><p>管理员权限运行命令</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker update mysql --restart&#x3D;always<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装Docker</title>
      <link href="posts/38496.html"/>
      <url>posts/38496.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux系统Docker安装及软件安装"><a href="#Linux系统Docker安装及软件安装" class="headerlink" title="Linux系统Docker安装及软件安装"></a>Linux系统Docker安装及软件安装</h1><h2 id="Docker简介"><a href="#Docker简介" class="headerlink" title="Docker简介"></a>Docker简介</h2><p>Docker 是一个开源的应用容器引擎，基于 <a href="https://www.runoob.com/go/go-tutorial.html">Go 语言</a> 并遵从 Apache2.0 协议开源。</p><p>Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</p><p>容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。</p><p>Docker 从 17.03 版本之后分为 CE（Community Edition: 社区版） 和 EE（Enterprise Edition: 企业版），我们用社区版就可以了。</p><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p>官方链接 <a href="https://docs.docker.com/engine/install/centos/">传送门</a></p><h3 id="1、卸载旧版本"><a href="#1、卸载旧版本" class="headerlink" title="1、卸载旧版本"></a>1、卸载旧版本</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo yum remove docker \                  docker-client \                  docker-client-latest \                  docker-common \                  docker-latest \                  docker-latest-logrotate \                  docker-logrotate \                  docker-engine<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于我第一次安装，运行后显示如下图</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn//articledocker-rm-rf.png" alt="清空docker原有组件"></p><h3 id="2、安装Docker"><a href="#2、安装Docker" class="headerlink" title="2、安装Docker"></a>2、安装Docker</h3><ol><li><p>安装必要的依赖包设置存储库</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 安装必要依赖包$ sudo yum install -y yum-utils$ sudo yum-config-manager \    --add-repo \    https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><h4 id="安装Docker引擎"><a href="#安装Docker引擎" class="headerlink" title="安装Docker引擎"></a>安装Docker引擎</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ sudo yum install docker-ce docker-ce-cli containerd.io<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动Docker</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ sudo systemctl start docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="Docker简单命令"><a href="#Docker简单命令" class="headerlink" title="Docker简单命令"></a>Docker简单命令</h2><h3 id="查询Docker安装是否成功"><a href="#查询Docker安装是否成功" class="headerlink" title="查询Docker安装是否成功"></a>查询Docker安装是否成功</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 使用命令查询Docker是否安装成功(查询Docker安装版本)$ docker -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn//articleimage-20210513165916127.png" alt="docker-v"></p><h3 id="查看Docker下载的镜像"><a href="#查看Docker下载的镜像" class="headerlink" title="查看Docker下载的镜像"></a>查看Docker下载的镜像</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ sudo docker images<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn//articleimage-20210513165944639.png" alt="docker-image"></p><h3 id="设置Docker开机自启动"><a href="#设置Docker开机自启动" class="headerlink" title="设置Docker开机自启动"></a>设置Docker开机自启动</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ sudo systemctl enable docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn//articleimage-20210513170033264.png" alt="docker"></p><h3 id="Docker镜像加速"><a href="#Docker镜像加速" class="headerlink" title="Docker镜像加速"></a>Docker镜像加速</h3><p>阿里云镜像源 <a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">传送门</a></p><p>登陆后，左侧菜单选中镜像加速器就可以看到你的专属地址了</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ sudo mkdir -p &#x2F;etc&#x2F;docker$ sudo tee &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;-&#39;EOF&#39;&#123;  &quot;registry-mirrors&quot;: [&quot;专属加速地址&quot;]&#125;EOF$ sudo systemctl daemon-reload$ sudo systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装Mysql</title>
      <link href="posts/35752.html"/>
      <url>posts/35752.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a><strong>安装 MySQL</strong></h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">wget http:&#x2F;&#x2F;repo.mysql.com&#x2F;mysql-community-release-el7-5.noarch.rpmrpm -ivh mysql-community-release-el7-5.noarch.rpmyum updateyum install mysql-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>若未找到wget</p><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn//articlearticlearticleimage-20210515155651366.png" alt="未找到wget"></p><p>则需要先安装wget：</p><pre class="line-numbers language-none"><code class="language-none">yum -y install wget<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn//articlearticlearticleimage-20210515155651366.png" alt="执行命令成功"></p><h3 id="权限设置"><a href="#权限设置" class="headerlink" title="权限设置"></a>权限设置</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">chown mysql:mysql -R &#x2F;var&#x2F;lib&#x2F;mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="初始化-MySQL"><a href="#初始化-MySQL" class="headerlink" title="初始化 MySQL"></a>初始化 MySQL</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysqld --initialize<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="启动-MySQL："><a href="#启动-MySQL：" class="headerlink" title="启动 MySQL："></a>启动 MySQL：</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">systemctl start mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="查看-MySQL-运行状态："><a href="#查看-MySQL-运行状态：" class="headerlink" title="查看 MySQL 运行状态："></a>查看 MySQL 运行状态：</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">systemctl status mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="使用-MySQL-ClientMysql客户端Mysql客户端-执行简单的SQL命令"><a href="#使用-MySQL-ClientMysql客户端Mysql客户端-执行简单的SQL命令" class="headerlink" title="使用 MySQL ClientMysql客户端Mysql客户端 执行简单的SQL命令"></a>使用 MySQL ClientMysql客户端Mysql客户端 执行简单的SQL命令</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="创建root用户密码并登录"><a href="#创建root用户密码并登录" class="headerlink" title="创建root用户密码并登录"></a>创建root用户密码并登录</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 设置密码set password for &#39;root&#39;@&#39;localhost&#39;&#x3D;password(&#39;root&#39;);# 推出Mysqlexit# 登录MySQLmysql -u root -p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>远程链接了一下MySQL，出现了以下错误，查了一下，是因为MySQL没有允许远程登陆，所以要授权MySQL远程登陆。</p><p>　　<img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article20210520220929.png" alt="img"></p><p>从任何主机上使用root用户，密码：yourpassword（你的root密码）连接到mysql服务器：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql"># 完成登录操作mysql -u root -p root # 修改访问权限mysql&gt;GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;root&#39; WITH GRANT OPTION;操作完后切记执行以下命令刷新权限 FLUSH PRIVILEGES<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 　这时再通过navicat远程链接MySQL，链接测试。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux一行代码安装JDK</title>
      <link href="posts/32625.html"/>
      <url>posts/32625.html</url>
      
        <content type="html"><![CDATA[<p>直接输入下面这个命令，然后等就完事儿</p><p>yum install -y java-1.8.0-openjdk.x86_64</p><p>测试是否安装成功：java -version</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> JDK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java面试题</title>
      <link href="posts/60410.html"/>
      <url>posts/60410.html</url>
      
        <content type="html"><![CDATA[<h1 id="Java面试题"><a href="#Java面试题" class="headerlink" title="Java面试题"></a>Java面试题</h1><h2 id="面向对象的特征有哪些方面"><a href="#面向对象的特征有哪些方面" class="headerlink" title="面向对象的特征有哪些方面"></a>面向对象的特征有哪些方面</h2><h3 id="抽象"><a href="#抽象" class="headerlink" title="抽象"></a>抽象</h3><p>抽象就是忽略一个主题中与当前目标无关的那些方面，以便更充分地注意与当前目标有关的方面。抽象并不打算了解全部问题，而只是选择其中的一部分，暂时不用部分细节。</p><blockquote><p>抽象包括两个方面</p><ol><li>过程抽象</li><li>数据抽象</li></ol></blockquote><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>继承是一种联结类的层次模型，并且允许和鼓励类的重用，它提供了一种明确表述共性的方法。对象的一个新类可以从现有的类中派生，这个过程称为类继承。新类继承了原始类的特性，新类成为原始类的派生类（子类），而原始类成为新类的积累（父类）。派生类可以从它的基类那里继承方法和实例变量，并且类可以修改或增加新的方法使之更适合特殊需要。</p><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><p>封装是把过程和数据包围起来，对数据的访问只能通过已定义的界面。面向对象计算始于这个基本概念，即现实世界可以被描绘成一系列完全自治、封装的对象，这些对象通过一个受保护的接口访问其它对象。</p><h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><p>多态性是指允许不同类的对象对同一消息作出响应。多态性包括参数化多态行和包含多态性。多态语言具有灵活、抽象、行为共享、代码共享的优势，很好的解决了应用程序函数同名问题。</p><h2 id="String是最基本的数据类型吗？"><a href="#String是最基本的数据类型吗？" class="headerlink" title="String是最基本的数据类型吗？"></a>String是最基本的数据类型吗？</h2><p>基本数据类型包括一下8种</p><blockquote><p>byte、int、char、long、float、double、boolean、short</p></blockquote><p>java.lang.String类是final类型的，因此不可以继承这个类、不能修改这个类。为了提高效率节省空间我们应该用StringBuffer类</p><h2 id="String和StringBuffer的区别"><a href="#String和StringBuffer的区别" class="headerlink" title="String和StringBuffer的区别"></a>String和StringBuffer的区别</h2><p>JAVA平台提供了两个类：String和StringBuffer，它们可以储存和操作字符串，即包含多个字符的字符数据。这个String类提供了数值不可改变的字符串。而这个StringBuffer类提供的字符串进行修改。当你知道字符数据要改变的时候你就可以使用StringBuffer。</p><p>典型地，你可以使用StringBuffer来动态构造字符数据</p><h3 id="String、StringBuffer与StringBuilder比较"><a href="#String、StringBuffer与StringBuilder比较" class="headerlink" title="String、StringBuffer与StringBuilder比较"></a>String、StringBuffer与StringBuilder比较</h3><blockquote><p>三者运行速度不同</p></blockquote><h4 id="String运行速度"><a href="#String运行速度" class="headerlink" title="String运行速度"></a>String运行速度</h4><p>遍历一百万次</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> a <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">long</span> startTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">100</span><span class="token operator">*</span><span class="token number">100</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    a<span class="token operator">+=</span><span class="token string">"aa"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">long</span> endTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"耗时："</span><span class="token operator">+</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>endTime <span class="token operator">-</span> startTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果为 <code>耗时:7614</code></p><h4 id="StringBuffer运行速度"><a href="#StringBuffer运行速度" class="headerlink" title="StringBuffer运行速度"></a>StringBuffer运行速度</h4><p>遍历一亿次</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">StringBuffer</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> aa <span class="token operator">=</span> <span class="token string">"aa"</span><span class="token punctuation">;</span><span class="token keyword">long</span> startTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">100</span><span class="token operator">*</span><span class="token number">100</span><span class="token operator">*</span><span class="token number">100</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//字符串拼接</span>    a<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>aa<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">long</span> endTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"耗时："</span><span class="token operator">+</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>endTime <span class="token operator">-</span> startTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果为 <code>耗时：3128</code> </p><h4 id="StringBuilder运行速度"><a href="#StringBuilder运行速度" class="headerlink" title="StringBuilder运行速度"></a>StringBuilder运行速度</h4><p>遍历一亿次</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">StringBuilder</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> aa <span class="token operator">=</span> <span class="token string">"aa"</span><span class="token punctuation">;</span><span class="token keyword">long</span> startTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">100</span><span class="token operator">*</span><span class="token number">100</span><span class="token operator">*</span><span class="token number">100</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    a<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>aa<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">long</span> endTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"耗时："</span><span class="token operator">+</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>endTime <span class="token operator">-</span> startTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果为 <code>耗时：1240</code> </p><h4 id="比较结果"><a href="#比较结果" class="headerlink" title="比较结果"></a>比较结果</h4><p>速度比较：String &lt; StringBuffer &lt; StringBuilder 且String的处理速度要比StringBuffer、StringBuilder要慢得多</p><blockquote><p>分析为什么String的处理速度要比StringBuffer、StringBuilder慢得多？</p></blockquote><ol><li><p>String是不可变对象</p></li><li><p>StringBuffer和StringBuilder是可变对象</p><blockquote><ul><li>String本身就是一个对象，因为String不可变对象，所以，每次遍历对字符串做拼接操作，都会重新创建一个对象，循环100万次就是创建100万个对象，非常的消耗内存空间，而且创建对象本身就是一个耗时操作，创建100万次对象就相当的耗时了。</li><li>StringBuffer和StringBuilder只需要创建一个StringBuffer或StringBuilder对象，然后用append拼接字符串，就算拼接一亿次，仍然只有一个对象。</li></ul></blockquote></li></ol><blockquote><p>是不是可以抛弃使用String，转而使用StringBuffer和StringBuilder呢？</p></blockquote><p>No!!!</p><ol><li><p>String遍历代码：开始定义一个String常量（创建一个String对象），再开始遍历</p></li><li><p>StringBuffer遍历代码：开始定义一个String常量（创建一个String对象）和一个StringBuffer对象，再开始遍历</p></li><li><p>StringBuiler遍历代码：开始定义一个String常量（创建一个String对象）和一个StringBuiler对象，再开始遍历</p><blockquote><p><code>StringBuffer</code>和<code>StringBuiler</code>比<code>String</code>多了一个创建对象流程，所以，如果数据量比较小的情况建议使用<code>String</code>。</p></blockquote></li></ol><blockquote><p>说说StringBuffer和StringBuilder的区别？</p></blockquote><ol><li>StringBuffer是线程安全的</li><li>StringBuilder是非线程安全的， 这也是速度比StringBuffer快的原因</li></ol><blockquote><p>适用场景？</p></blockquote><ol><li>如果要操作少量的数据用 String</li><li>单线程操作字符串缓冲区 下操作大量数据 StringBuilder</li><li>多线程操作字符串缓冲区 下操作大量数据 StringBuffer</li></ol><h2 id="int和Integer有什么区别"><a href="#int和Integer有什么区别" class="headerlink" title="int和Integer有什么区别"></a>int和Integer有什么区别</h2><p>Java提供两种不同的类型：引用类型和原始类型（内置类型）。int是Java的原始数据类型，Integer是Java为int提供的封装类。Java为每个原始类型提供了封装类</p><table><thead><tr><th>byte</th><th>Byte</th></tr></thead><tbody><tr><td>short</td><td>Short</td></tr><tr><td>float</td><td>Float</td></tr><tr><td>double</td><td>Double</td></tr><tr><td>boolean</td><td>Boolean</td></tr><tr><td>char</td><td>Char</td></tr><tr><td>int</td><td>Integer</td></tr><tr><td>long</td><td>Long</td></tr></tbody></table><blockquote><p>引用类型与原始类型的行为完全不同，并且它们具有不同的语义。引用类型和原始类型具有不同的特征和用法，它们包括：大小和速度问题，这种类型以哪种类型的数据结构存储，当引用类型和原始类型用作某个类的实例数据时所指定的缺省值。对象引用实例变量的缺省值为null，而原始类型实例变量的缺省值与它们的类型有关。</p></blockquote><h2 id="运行时异常与一般异常有何异同"><a href="#运行时异常与一般异常有何异同" class="headerlink" title="运行时异常与一般异常有何异同"></a>运行时异常与一般异常有何异同</h2><p>异常表示程序运行过程中可能出现的非正常状态，运行时异常表示虚拟机通常操作中可能遇到的异常，是一种常见运行错误。Java编译器要求方法必须声明抛出可能发生的非运行时异常，但是并不要求必须声明抛出未捕获的运行时异常。</p><h2 id="amp-和-amp-amp-的区别"><a href="#amp-和-amp-amp-的区别" class="headerlink" title="&amp;和&amp;&amp;的区别"></a>&amp;和&amp;&amp;的区别</h2><p>&amp;和&amp;&amp;都可作为逻辑运算符”与“使用，但是&amp;&amp;是“短路与”，运算时先判断符号前面的表达式的值，如果能够确定整个表达式的值，则不进行符号后面的表达式的运算。</p><blockquote><p>&amp;亦可做为运算符使用。</p></blockquote><h2 id="说出ArrayList，Vector，LinkedList的存储性能和特性"><a href="#说出ArrayList，Vector，LinkedList的存储性能和特性" class="headerlink" title="说出ArrayList，Vector，LinkedList的存储性能和特性"></a>说出ArrayList，Vector，LinkedList的存储性能和特性</h2><p>ArrayList和Vector都是使用数据方式存储数据，此数组元素大于实际存储的数据以便以添加和插入元素，它们都允许直接按序号索引元素，但是插入元素要涉及数组元素移动等内存操作，所以索引数据快而插入数据慢，Vector由于使用了synchronized方法（线程安全），通常性能上较ArrayList差，而LinkedList使用双向链表实现存储，按序号索引数据需要进行前向或后向遍历，但是插入数据时只需要记录本项的前后项即可，所以插入速度较快。</p><h2 id="Collection和Collections的区别"><a href="#Collection和Collections的区别" class="headerlink" title="Collection和Collections的区别"></a>Collection和Collections的区别</h2><p>Collection是集合类的上级接口，继承它的接口主要有Set和List。</p><p>Conllections是针对集合类的一个帮助类，他提供一系列静态方法实现对各种集合的搜索、排序、线程安全化等操作。</p><h2 id="HashMap和Hashtable的区别"><a href="#HashMap和Hashtable的区别" class="headerlink" title="HashMap和Hashtable的区别"></a>HashMap和Hashtable的区别</h2><ol><li>HashMap是Hashtable的轻量级实现（非线程安全的实现），它们都完成了Map接口，主要区别在于HashMap允许空（null）键值（key），由于非线程安全，效率上可能高于Hashtable。</li><li>HashMap允许将null作为一个entry的key或者value，而Hashtable不允许。</li><li>HashMap把Hashtable的contains方法去掉了，改成containsValue和containsKey。因为contains方法容易让人引起误解。</li><li>Hashtable继承自Dictionary类，而HashMap是Java1.2引进的Map interface的一个实现。</li><li>最大的不同是，Hashtable的方法是Synchronize的，而HashMap不是，在多个线程访问Hashtable时，不需要为它的方法实现同步，而HashMap就必须为之提供外同步。</li><li>Hashtable和HashMap采用的hash/rehash算法都大概一样，所以性能不会有很大的差异。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端面试题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA面试题 </tag>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基础语法</title>
      <link href="posts/40652.html"/>
      <url>posts/40652.html</url>
      
        <content type="html"><![CDATA[<p>#Markdown基础语法</p><h2 id="Markdown简介"><a href="#Markdown简介" class="headerlink" title="Markdown简介"></a>Markdown简介</h2><p>Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><h3 id="优点："><a href="#优点：" class="headerlink" title="优点："></a><strong>优点：</strong></h3><p>1、因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。</p><p>2、操作简单。比如:WYSIWYG编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而Markdown只需要在标题内容前加#即可<br>3、支持HTML语法</p><h3 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a><strong>缺点：</strong></h3><p>1、需要记一些语法（当然，是很简单）。<br>2、有些平台不支持Markdown编辑模式。<br>3、若想写HTML语法需要用到’<br>比如:<code>&lt;h1&gt;这是一个标题&lt;/h1&gt;</code>的代码为</p><pre><code>`&lt;h1&gt;这是一个标题&lt;/h1&gt;`</code></pre><h6 id="Hexo是使用Markdown编辑的。"><a href="#Hexo是使用Markdown编辑的。" class="headerlink" title="Hexo是使用Markdown编辑的。"></a>Hexo是使用Markdown编辑的。</h6><h2 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h2><p>在想要设置为标题的文字前面加#来表示</p><p>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p><h6 id="注：标准语法一般在-后跟个空格再写文字。"><a href="#注：标准语法一般在-后跟个空格再写文字。" class="headerlink" title="注：标准语法一般在#后跟个空格再写文字。"></a>注：标准语法一般在#后跟个空格再写文字。</h6><p>示例：</p><pre><code># 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题</code></pre><p>效果：</p><h1>这是一级标题</h1><h2>这是二级标题</h2><h3>这是三级标题</h3><h4>这是四级标题</h4><h5>这是五级标题</h5><h6>这是六级标题</h6><h2 id="二、字体"><a href="#二、字体" class="headerlink" title="二、字体"></a>二、字体</h2><h3 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h3><p>要加粗的文字左右分别用两个*号包起来</p><p>也可<code>&lt;b&gt;加粗内容&lt;/b&gt;</code></p><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><p>要倾斜的文字左右分别用一个*号包起来<br>也可<code>&lt;i&gt;倾斜内容&lt;/i&gt;</code></p><h3 id="斜体加粗"><a href="#斜体加粗" class="headerlink" title="斜体加粗"></a>斜体加粗</h3><p>要倾斜和加粗的文字左右分别用三个*号包起来<br>也可<code>&lt;b&gt;&lt;i&gt;加粗倾斜内容&lt;/i&gt;&lt;/b&gt;</code></p><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>要加删除线的文字左右分别用两个~~号包起来(删除线用HTML语法比较麻烦建议使用Markdown语法)</p><p>示例：</p><pre><code>**这是加粗***这是倾斜****这是斜体加粗***~~这是加删除线~~</code></pre><p>效果：</p><p><strong>这是加粗的文字</strong></p><p><em>这是倾斜的文字</em></p><p><em><strong>这是斜体加粗的文字</strong></em></p><p><del>这是删除线</del></p><h2 id="三、引用"><a href="#三、引用" class="headerlink" title="三、引用"></a>三、引用</h2><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;</p><p>n个…(貌似理论可以一直加下去)</p><p>示例：</p><pre><code>&gt;这是引用的内容&gt;&gt;这是引用的内容&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</code></pre><p>效果：</p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><h2 id="四、分割线"><a href="#四、分割线" class="headerlink" title="四、分割线"></a>四、分割线</h2><p>三个或者三个以上的 - 或者 * 都可以。</p><p>示例：</p><pre><code>-------********</code></pre><p>效果：</p><hr><hr><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h2 id="五、图片"><a href="#五、图片" class="headerlink" title="五、图片"></a>五、图片</h2><p>语法：</p><pre><code>![图片alt](图片地址 &#39;&#39;图片title&#39;&#39;)图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</code></pre><p>使用HTML语法<code>&lt;img src=&quot;图片地址&quot; alt=&quot;&quot; title=&quot;&quot;&gt;&lt;&gt;</code></p><h2 id="六、超链接"><a href="#六、超链接" class="headerlink" title="六、超链接"></a>六、超链接</h2><p>语法：</p><pre><code>[超链接名](超链接地址 &quot;超链接title&quot;)title可加可不加</code></pre><p>使用HTML语法<code>&lt;a href=&quot;超链接地址&quot; title=&quot;&quot;&gt;超链接名&lt;/a&gt;</code><br>示例：</p><pre><code>[Lu&#39;s Blog](https://islu.cn&quot;Lu&#39;s Blog&quot;)</code></pre><p>效果：</p><p>[Lu’s Blog](<a href="https://islu.cn&quot;lu&/#39;s">https://islu.cn&quot;Lu&#39;s</a> Blog”)</p><h2 id="七、列表"><a href="#七、列表" class="headerlink" title="七、列表"></a>七、列表</h2><p><strong>无序列表</strong></p><p>语法：<br>无序列表用 - + * 任何一种都可以</p><pre><code>- 列表内容+ 列表内容* 列表内容注意：- + * 跟内容之间都要有一个空格</code></pre><p>使用HTML语法</p><pre><code>&lt;ul&gt;&lt;li&gt;列表内容&lt;li&gt;&lt;li&gt;列表内容&lt;/li&gt;&lt;/ul&gt;</code></pre><p>效果：</p><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><p><strong>有序列表</strong></p><p>语法：<br>数字加点</p><pre><code>1. 列表内容2. 列表内容3. 列表内容注意：序号跟内容之间要有空格</code></pre><p>使用HTML语法</p><pre><code>&lt;ol&gt;&lt;li&gt;列表内容&lt;li&gt;&lt;li&gt;列表内容&lt;/li&gt;&lt;/ol&gt;</code></pre><p>效果：</p><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><p><strong>列表嵌套</strong><br>上一级和下一级之间敲三个空格即可(一下Tap键也可)</p><ul><li>   一级无序列表内容    +    二级无序列表内容</li></ul><h2 id="八、表格"><a href="#八、表格" class="headerlink" title="八、表格"></a>八、表格</h2><p>语法：</p><pre><code>表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容第二行分割表头和内容。- 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略</code></pre><p>HTML语法过于麻烦 建议使用Markdown<br>示例：<br>    姓名|技能|排行<br>    –|:–:|–:<br>    刘备|蹦迪|大哥<br>    关羽|骑马|二哥<br>    张飞|打拳|三弟<br>效果：</p><table><thead><tr><th>姓名</th><th align="center">技能</th><th align="right">排行</th></tr></thead><tbody><tr><td>刘备</td><td align="center">蹦迪</td><td align="right">大哥</td></tr><tr><td>关羽</td><td align="center">骑马</td><td align="right">二哥</td></tr><tr><td>张飞</td><td align="center">打拳</td><td align="right">三弟</td></tr></tbody></table><h2 id="九、代码"><a href="#九、代码" class="headerlink" title="九、代码"></a>九、代码</h2><p>语法：</p><p>单行代码：代码之间分别用一个反引号包起来</p><pre><code>`代码内容`</code></pre><p>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p><pre><code><pre class="line-numbers language-none"><code class="language-none">代码块内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></code></pre><h6 id="注多行代码也可回车-tap"><a href="#注多行代码也可回车-tap" class="headerlink" title="注多行代码也可回车+tap"></a>注多行代码也可回车+tap</h6><p><strong>单行代码</strong><br>示例：</p><pre><code>`这是单行代码`</code></pre><p>效果<br><code>这是单行代码</code></p><p><strong>多行代码</strong></p><p>示例：</p><pre><code><pre class="line-numbers language-none"><code class="language-none">这是多行代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></code></pre><p>效果</p><pre class="line-numbers language-none"><code class="language-none">这是多行代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十、流程图"><a href="#十、流程图" class="headerlink" title="十、流程图"></a>十、流程图</h2><pre><code>flowst=&gt;start: 开始op=&gt;operation: My Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op```</code></pre><h6 id="建议使用画图工具-百度脑图-画完后上传图片比较简单"><a href="#建议使用画图工具-百度脑图-画完后上传图片比较简单" class="headerlink" title="建议使用画图工具(百度脑图)画完后上传图片比较简单"></a>建议使用画图工具(<a href="https://naotu.baidu.com/">百度脑图</a>)画完后上传图片比较简单</h6><p>！<a href="https://cdn.jsdelivr.net/gh/isome/ialoe-article@master/markdown%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E6%B5%81%E7%A8%8B%E5%9B%BE.png%22%E6%B5%81%E7%A8%8B%E5%9B%BE%22">流程图</a></p><h2 id="写作工具"><a href="#写作工具" class="headerlink" title="写作工具"></a>写作工具</h2><h3 id="①MarkdownPad"><a href="#①MarkdownPad" class="headerlink" title="①MarkdownPad"></a>①MarkdownPad</h3><p>MarkdownPad被很多人称赞为windows下最好用的Markdown编辑器之一，不过仅支持windows。它有免费版和收费版（MarkdownPad Pro），一般情况下免费版就够用了，想用pro版的可以自行网上下载，强大的国人crack无处不在的~ ~。</p><p>MarkdownPad支持键盘快捷键和工具栏操作，即可添加标记也可移除，支持即时HTML预览、支持自定义配色方案、字体、大小和布局、支持音乐视频，可以导出HTML和PDF。</p><p>MarkdownPad是独立的软件。</p><p>更多介绍及下载：<a href="http://markdownpad.com/">http://markdownpad.com/</a></p><h3 id="②Typora-亲测"><a href="#②Typora-亲测" class="headerlink" title="②Typora(亲测)"></a>②Typora(亲测)</h3><p>Typora也是非常用名，非常好用的markdown编辑器，它的设计理念很不一样，是真正的即时预览型编辑器，不同于左右两个窗口的编辑器。Typora的设计理念就是极致简洁，它将「写字」和「预览」这两件事情合并了。</p><p>如果要修改已经写好的markdown标记可以点击切换到“源代码模式”。</p><p>Typora 同样支持 Windows、OS X 和 Linux多个操作系统，支持数学编辑，可与 Word 直接格式转换，可以进行多种文档格式转换。Typora 流畅度和反应速度很快，特别适合那些手速快的人。</p><p>Typora是独立的软件。</p><p>更多介绍及下载：<a href="https://www.typora.io/">https://www.typora.io/</a></p><h3 id="③Hbuilder-X"><a href="#③Hbuilder-X" class="headerlink" title="③Hbuilder X"></a>③Hbuilder X</h3><p>先hexo s启动本地服务器预览<br>可以通过Hbuilder X内置浏览器观察文章内容<br>实现边写变预览便于修改</p><h3 id="④更多"><a href="#④更多" class="headerlink" title="④更多"></a>④更多</h3><p>markdown编辑器产品非常多，以上只是本人接触过的一些，相信还有很多很好的markdown存在,橘生淮南则为橘，橘生淮北则为枳，找到适合自己的才是最好的。</p><h6 id="注：如果看完还是有不明白或者要补充的地方可以留言或私聊在窗口右下角私聊我"><a href="#注：如果看完还是有不明白或者要补充的地方可以留言或私聊在窗口右下角私聊我" class="headerlink" title="注：如果看完还是有不明白或者要补充的地方可以留言或私聊在窗口右下角私聊我"></a>注：如果看完还是有不明白或者要补充的地方可以留言或私聊在窗口右下角私聊我</h6>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matery主题友链实现随机排列</title>
      <link href="posts/54953.html"/>
      <url>posts/54953.html</url>
      
        <content type="html"><![CDATA[<h1 id="友链随机排列"><a href="#友链随机排列" class="headerlink" title="友链随机排列"></a>友链随机排列</h1><h2 id="未添加友链朋友圈"><a href="#未添加友链朋友圈" class="headerlink" title="未添加友链朋友圈"></a>未添加友链朋友圈</h2><h3 id="友链信息抓取"><a href="#友链信息抓取" class="headerlink" title="友链信息抓取"></a>友链信息抓取</h3><p>将<code>/source/_data/friends.json</code> 复制至<code>/source/friends</code>目录下</p><blockquote><p>以后友链信息在/friends/friends.json中更新</p></blockquote><h3 id="更改friends-ejs"><a href="#更改friends-ejs" class="headerlink" title="更改friends.ejs"></a>更改friends.ejs</h3><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/bg-cover'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">.card .card-content p</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 44.8px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 22.4px<span class="token punctuation">&#125;</span><span class="token selector">#friends-link</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> auto <span class="token important">!important</span><span class="token punctuation">&#125;</span><span class="token selector">.friends-container</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> -100px<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.friend-div</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 240px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.friends-container .tag-title</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #3C4858<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.75rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-ship img</span> <span class="token punctuation">&#123;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 一下是按钮样式 */</span><span class="token selector">.frind-ship</span> <span class="token punctuation">&#123;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-ship .title</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-ship .title div</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">padding-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-ship .title img</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-ship .title h1</span> <span class="token punctuation">&#123;</span>    <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">border-bottom</span><span class="token punctuation">:</span> 2px solid #fff<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> -15px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.friend-button</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> -27px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.friend-button a</span> <span class="token punctuation">&#123;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.friend-all .tag-post</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.button-caution</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #FF4351<span class="token punctuation">;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> #FF4351<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.button</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Helvetica Neue Light"</span><span class="token punctuation">,</span> <span class="token string">"Helvetica Neue"</span><span class="token punctuation">,</span> Helvetica<span class="token punctuation">,</span> Arial<span class="token punctuation">,</span> <span class="token string">"Lucida Grande"</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0 40px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">appearance</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-webkit-box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>    <span class="token property">-moz-box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>    <span class="token property">-webkit-transition-property</span><span class="token punctuation">:</span> all<span class="token punctuation">;</span>    <span class="token property">transition-property</span><span class="token punctuation">:</span> all<span class="token punctuation">;</span>    <span class="token property">-webkit-transition-duration</span><span class="token punctuation">:</span> .3s<span class="token punctuation">;</span>    <span class="token property">transition-duration</span><span class="token punctuation">:</span> .3s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.title</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0rem <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.card</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 3rem 0 1rem 0 <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.button-glow.button-caution</span> <span class="token punctuation">&#123;</span>    <span class="token property">-webkit-animation-name</span><span class="token punctuation">:</span> glowing-caution<span class="token punctuation">;</span>    <span class="token property">animation-name</span><span class="token punctuation">:</span> glowing-caution<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> glowing-caution</span> <span class="token punctuation">&#123;</span>    <span class="token selector">from</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">50%</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 20px <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 20px <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">to</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> glowing-caution</span> <span class="token punctuation">&#123;</span>    <span class="token selector">from</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">50%</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 20px <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 20px <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">to</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.button-caution:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #ff7680<span class="token punctuation">;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> #ff7680<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card1</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #4facfe 0%<span class="token punctuation">,</span> #00f2fe 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card2</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>135deg<span class="token punctuation">,</span> #667eea 0%<span class="token punctuation">,</span> #764ba2 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card3</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #b8cbb8 0%<span class="token punctuation">,</span> #b8cbb8 0%<span class="token punctuation">,</span> #b465da 0%<span class="token punctuation">,</span> #cf6cc9 33%<span class="token punctuation">,</span> #ee609c 66%<span class="token punctuation">,</span> #ee609c 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card4</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #6a11cb 0%<span class="token punctuation">,</span> #2575fc 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card5</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top<span class="token punctuation">,</span> #c471f5 0%<span class="token punctuation">,</span> #fa71cd 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card6</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top<span class="token punctuation">,</span> #48c6ef 0%<span class="token punctuation">,</span> #6f86d6 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card7</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top<span class="token punctuation">,</span> #0ba360 0%<span class="token punctuation">,</span> #3cba92 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card8</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top<span class="token punctuation">,</span> #0c3483 0%<span class="token punctuation">,</span> #a2b6df 100%<span class="token punctuation">,</span> #6b8cce 100%<span class="token punctuation">,</span> #a2b6df 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card9</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #ff758c 0%<span class="token punctuation">,</span> #ff7eb3 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card10</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top<span class="token punctuation">,</span> #f77062 0%<span class="token punctuation">,</span> #fe5196 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">article .card</span> <span class="token punctuation">&#123;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> visible <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container friends-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tag-title center-align<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-address-book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'friends'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>friends-link<span class="token punctuation">"</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row tags-posts friend-all<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>content <span class="token operator">&amp;&amp;</span> page<span class="token punctuation">.</span>content<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> page<span class="token punctuation">.</span>content </span><span class="token delimiter punctuation">%></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>gitalk <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>gitalk<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/gitalk'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>gitment<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/gitment'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>disqus<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/disqus'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>livere <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>livere<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/livere'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>valine <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/valine'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>twikoo <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>twikoo<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/twikoo'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">function</span> <span class="token function">randArr</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        arr <span class="token operator">=</span> arr <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">initTemplate</span><span class="token punctuation">(</span><span class="token parameter">List</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        List <span class="token operator">=</span> List <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> total <span class="token operator">=</span> List<span class="token punctuation">.</span>length        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'friends size '</span> <span class="token operator">+</span> total<span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">friend<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> tmp <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class="col s12 m6 l4 friend-div" data-aos="zoom-in-up">                                                    &lt;div class="card frind-card</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">10</span> <span class="token punctuation">)</span> <span class="token operator">+</span><span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">  ">                                                        &lt;div class="frind-ship">                                                            &lt;div class="title">                                                                &lt;img src="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>friend<span class="token punctuation">.</span>avatar<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" alt="img">                                                                &lt;div>                                                                    &lt;h1 class="friend-name">                                                                        </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>friend<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">                                                                    &lt;/h1>                                                                    &lt;p style="position: relative;top: -35px;">                                                                        </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>friend<span class="token punctuation">.</span>introduction<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">                                                                    &lt;/p>                                                                &lt;/div>                                                            &lt;/div>                                                            &lt;div class="friend-button">                                                                &lt;a href="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>friend<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> " target="_blank" class="button button-glow button-rounded button-caution">                                                                    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>friend<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">                                                                &lt;/a>                                                            &lt;/div>                                                        &lt;/div>                                                    &lt;/div>                                                &lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".friend-all"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> temp <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>            $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                type<span class="token operator">:</span> <span class="token string">"get"</span><span class="token punctuation">,</span><span class="token comment">//请求方式</span>                url<span class="token operator">:</span> <span class="token string">"/friends/friends.json"</span><span class="token punctuation">,</span><span class="token comment">//请求的url</span>                dataType<span class="token operator">:</span> <span class="token string">"json"</span><span class="token punctuation">,</span><span class="token comment">//后台数据返回类</span>                <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//响应成功执行的</span>                    <span class="token keyword">var</span> friendss <span class="token operator">=</span> res<span class="token punctuation">;</span>                    <span class="token keyword">var</span> friends <span class="token operator">=</span> <span class="token function">randArr</span><span class="token punctuation">(</span>friendss<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">initTemplate</span><span class="token punctuation">(</span>friends<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#friends-link'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">masonry</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            itemSelector<span class="token operator">:</span> <span class="token string">'.friend-div'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="已添加友链朋友圈"><a href="#已添加友链朋友圈" class="headerlink" title="已添加友链朋友圈"></a>已添加友链朋友圈</h2><h3 id="更改友链url"><a href="#更改友链url" class="headerlink" title="更改友链url"></a>更改友链url</h3><p>将主题目录下的<code>_config.yml</code> 中的友链<code>url</code> 从<code>/friends</code> 改为 <code>/links</code></p><h3 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h3><p>在<code>/source</code> 目录下新建文件夹<code>links</code></p><p>在<code>/links</code> 目录下新建<code>index.md</code></p><p>内容如下</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token font-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 友情帐<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2021-03-05 11:02:58</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"links"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"links"</span></span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="友链信息抓取-1"><a href="#友链信息抓取-1" class="headerlink" title="友链信息抓取"></a>友链信息抓取</h3><p>将<code>/source/_data/friends.json</code> 复制至<code>/source/links</code>目录下</p><blockquote><p>以后友链信息在/friends/friends.json中更新</p><p>朋友圈友链抓取信息在/_data/friends.json中更新</p><p>朋友圈友链信息抓取页面还是friends，只是将friends页面进行隐藏，对外展示links页面</p></blockquote><h3 id="新建links-ejs"><a href="#新建links-ejs" class="headerlink" title="新建links.ejs"></a>新建links.ejs</h3><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">.card .card-content p</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 44.8px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 22.4px<span class="token punctuation">&#125;</span><span class="token selector">#friends-link</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> auto <span class="token important">!important</span><span class="token punctuation">&#125;</span><span class="token selector">.friends-container</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> -100px<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.friend-div</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 240px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.friends-container .tag-title</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #3C4858<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.75rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-ship img</span> <span class="token punctuation">&#123;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 一下是按钮样式 */</span><span class="token selector">.frind-ship</span> <span class="token punctuation">&#123;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-ship .title</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-ship .title div</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">padding-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-ship .title img</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-ship .title h1</span> <span class="token punctuation">&#123;</span>    <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">border-bottom</span><span class="token punctuation">:</span> 2px solid #fff<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> -15px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.friend-button</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> -27px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.friend-button a</span> <span class="token punctuation">&#123;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.friend-all .tag-post</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.button-caution</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #FF4351<span class="token punctuation">;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> #FF4351<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.button</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Helvetica Neue Light"</span><span class="token punctuation">,</span> <span class="token string">"Helvetica Neue"</span><span class="token punctuation">,</span> Helvetica<span class="token punctuation">,</span> Arial<span class="token punctuation">,</span> <span class="token string">"Lucida Grande"</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0 40px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">appearance</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-webkit-box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>    <span class="token property">-moz-box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>    <span class="token property">-webkit-transition-property</span><span class="token punctuation">:</span> all<span class="token punctuation">;</span>    <span class="token property">transition-property</span><span class="token punctuation">:</span> all<span class="token punctuation">;</span>    <span class="token property">-webkit-transition-duration</span><span class="token punctuation">:</span> .3s<span class="token punctuation">;</span>    <span class="token property">transition-duration</span><span class="token punctuation">:</span> .3s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.title</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0rem <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.card</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 3rem 0 1rem 0 <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.button-glow.button-caution</span> <span class="token punctuation">&#123;</span>    <span class="token property">-webkit-animation-name</span><span class="token punctuation">:</span> glowing-caution<span class="token punctuation">;</span>    <span class="token property">animation-name</span><span class="token punctuation">:</span> glowing-caution<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> glowing-caution</span> <span class="token punctuation">&#123;</span>    <span class="token selector">from</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">50%</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 20px <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 20px <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">to</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> glowing-caution</span> <span class="token punctuation">&#123;</span>    <span class="token selector">from</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">50%</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 20px <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 20px <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">to</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.button-caution:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #ff7680<span class="token punctuation">;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> #ff7680<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card1</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #4facfe 0%<span class="token punctuation">,</span> #00f2fe 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card2</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>135deg<span class="token punctuation">,</span> #667eea 0%<span class="token punctuation">,</span> #764ba2 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card3</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #b8cbb8 0%<span class="token punctuation">,</span> #b8cbb8 0%<span class="token punctuation">,</span> #b465da 0%<span class="token punctuation">,</span> #cf6cc9 33%<span class="token punctuation">,</span> #ee609c 66%<span class="token punctuation">,</span> #ee609c 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card4</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #6a11cb 0%<span class="token punctuation">,</span> #2575fc 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card5</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top<span class="token punctuation">,</span> #c471f5 0%<span class="token punctuation">,</span> #fa71cd 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card6</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top<span class="token punctuation">,</span> #48c6ef 0%<span class="token punctuation">,</span> #6f86d6 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card7</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top<span class="token punctuation">,</span> #0ba360 0%<span class="token punctuation">,</span> #3cba92 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card8</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top<span class="token punctuation">,</span> #0c3483 0%<span class="token punctuation">,</span> #a2b6df 100%<span class="token punctuation">,</span> #6b8cce 100%<span class="token punctuation">,</span> #a2b6df 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card9</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #ff758c 0%<span class="token punctuation">,</span> #ff7eb3 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.frind-card10</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top<span class="token punctuation">,</span> #f77062 0%<span class="token punctuation">,</span> #fe5196 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">article .card</span> <span class="token punctuation">&#123;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> visible <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/bg-cover'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">min-height</span><span class="token punctuation">:</span> 131px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container friends-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>moments_container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tag-title center-align<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-address-book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'friends'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>friends-link<span class="token punctuation">"</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row tags-posts friend-all<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">function</span> <span class="token function">randArr</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            arr <span class="token operator">=</span> arr <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> arr<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">initTemplate</span><span class="token punctuation">(</span><span class="token parameter">List</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            List <span class="token operator">=</span> List <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> total <span class="token operator">=</span> List<span class="token punctuation">.</span>length            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'friends size '</span> <span class="token operator">+</span> total<span class="token punctuation">)</span><span class="token punctuation">;</span>            List<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">friend<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> tmp <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class="col s12 m6 l4 friend-div" data-aos="zoom-in-up">                                                    &lt;div class="card frind-card</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">10</span> <span class="token punctuation">)</span> <span class="token operator">+</span><span class="token number">1</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">  ">                                                        &lt;div class="frind-ship">                                                            &lt;div class="title">                                                                &lt;img src="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>friend<span class="token punctuation">.</span>avatar<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">" alt="img">                                                                &lt;div>                                                                    &lt;h1 class="friend-name">                                                                        </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>friend<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">                                                                    &lt;/h1>                                                                    &lt;p style="position: relative;top: -35px;">                                                                        </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>friend<span class="token punctuation">.</span>introduction<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">                                                                    &lt;/p>                                                                &lt;/div>                                                            &lt;/div>                                                            &lt;div class="friend-button">                                                                &lt;a href="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>friend<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> " target="_blank" class="button button-glow button-rounded button-caution">                                                                    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>friend<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">                                                                &lt;/a>                                                            &lt;/div>                                                        &lt;/div>                                                    &lt;/div>                                                &lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".friend-all"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">function</span> <span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> temp <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>                $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                    type<span class="token operator">:</span> <span class="token string">"get"</span><span class="token punctuation">,</span><span class="token comment">//请求方式</span>                    url<span class="token operator">:</span> <span class="token string">"/links/friends.json"</span><span class="token punctuation">,</span><span class="token comment">//请求的url</span>                    dataType<span class="token operator">:</span> <span class="token string">"json"</span><span class="token punctuation">,</span><span class="token comment">//后台数据返回类</span>                    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//响应成功执行的</span>                        <span class="token keyword">var</span> friendss <span class="token operator">=</span> res<span class="token punctuation">;</span>                        <span class="token keyword">var</span> friends <span class="token operator">=</span> <span class="token function">randArr</span><span class="token punctuation">(</span>friendss<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token function">initTemplate</span><span class="token punctuation">(</span>friends<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#friends-link'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">masonry</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                itemSelector<span class="token operator">:</span> <span class="token string">'.friend-div'</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token string">'/js/moments.js'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Hexo友链实现随机排列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git入门</title>
      <link href="posts/60322.html"/>
      <url>posts/60322.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://files.islu.cn/detail/load.gif" data-original="https://git-scm.com/images/logo@2x.png" alt="Git"></p><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><blockquote><p>Git是一个开源的<strong>分布式</strong>版本控制系统，用于敏捷高效地处理从很小到非常大的项目版本管理。支持克隆/下载。</p><p>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p><p>Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><a href="http://git-scm.com/download/mac">下载 git OSX 版</a></p><p><a href="http://msysgit.github.io/">下载 git Windows 版</a></p><p><a href="http://git-scm.com/download/linux">下载 git Linux 版</a></p><p>安装验证</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> -version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><blockquote><p>你的本地仓库由 git 维护的三棵“树”组成。</p><p>第一个是你的 <code>工作目录</code>，它持有实际文件；</p><blockquote><p>工作区：沙箱环境 git不会管理 随便更改操作</p></blockquote><p>第二个是 <code>暂存区（Index）</code>，它像个缓存区域，临时保存你的改动；</p><blockquote><p>暂存区：记录文件的操作</p></blockquote><p>最后是 <code>HEAD</code>，它指向你最后一次提交的结果。</p><blockquote><p>版本库：最终的代码实现提交到这里 .git目录就是版本库</p></blockquote></blockquote><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/article/trees.png" alt="img"></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>Git操作配置的命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span>  config <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li><p>–system ：系统中对所有用户都普遍适用的配置。使用git config –system 命令会修改/etc/gitconfig文件。</p></li><li><p>–global ：用户目录下的配置文件只适用于该用户。使用git config –global 读写的是~/.gitconfig </p></li><li><p>文件不写参数，表示堆当前项目的git目录进行配置，使用git config 可以直接针对当前项目配置，即工作目录下的.git/config文件</p></li></ol><p>优先级别以就近原则为准。</p><pre class="line-numbers language-none"><code class="language-none">.git&#x2F;config&#96; &gt; &#96;~&#x2F;.gitconfig&#96; &gt; &#96;&#x2F;etc&#x2F;gitconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h4><p>安装完成后初始化配置用户名和邮件地址：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"ialoe"</span><span class="token function">git</span> config --global user.email <span class="token string">"ialoe@qq.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>查看已有配置：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span>  config --list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="文件大小写问题"><a href="#文件大小写问题" class="headerlink" title="文件大小写问题"></a>文件大小写问题</h4><p><strong>现象：</strong>文件或文件夹大小写导致找不到文件</p><p>git默认是大小写不敏感的。 如果你大写的文件上次，有可能自己就变小写了。然后访问有可能找不到文件。</p><p>查询自己的配置：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --get core.ignorecase<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置开启大小写敏感：</p><p>(1)全局开启大小写敏感</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global core.ignorecase <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(2)单个项目开启大小写敏感</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config core.ignorecase <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h3><h4 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h4><p>创建新文件夹，打开，然后执行<br><code>git init</code><br>以创建新的 Git 仓库。</p><h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><p>初始化之后，有一个<code>.git</code>隐藏文件，里面的目录结构大概如下：</p><table><thead><tr><th>文件夹、文件</th><th>作用</th></tr></thead><tbody><tr><td>hooks/</td><td>目录包含服务端或客户端钩子脚本</td></tr><tr><td>info/</td><td>包含一个全局性排除文件</td></tr><tr><td>logs/</td><td>保存日志信息</td></tr><tr><td>objects/</td><td>目录存储所有数据内容，<code>重要</code></td></tr><tr><td>refs/</td><td>目录存储指向数据提交对象的指针，分支，<code>重要</code></td></tr><tr><td>config</td><td>文件包含项目特有的配置选项，<code>重要</code></td></tr><tr><td>description</td><td>用来显示对仓库的描述信息</td></tr><tr><td>HEAD</td><td>文件指示目前被检出的分支，<code>重要</code></td></tr><tr><td>index</td><td>文件保存暂缓区信息，<code>重要</code></td></tr></tbody></table><h4 id="检出仓库"><a href="#检出仓库" class="headerlink" title="检出仓库"></a>检出仓库</h4><p>执行如下命令以创建一个本地仓库的克隆版本：<br><code>git clone /path/to/repository</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 将E盘下的Repository克隆到D盘</span><span class="token function">git</span> clone E:/SourceRepository D:/DestinationRepository<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果是远端服务器上的仓库，你的命令会是这个样子：<br><code>git clone username@host:/path/to/repository</code> </p><h5 id="已配置账户"><a href="#已配置账户" class="headerlink" title="已配置账户"></a>已配置账户</h5><p><code>git clone git@host:/path/to/repository</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 以我的GitHub的BlogCode仓库为例</span><span class="token function">git</span> clone git@github.com:ialoe/BlogCode.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="未配置账户"><a href="#未配置账户" class="headerlink" title="未配置账户"></a>未配置账户</h5><p> <code>git  clone   用户名@github.com:ialoe/BlogCode.git</code>  </p><p>然后按回车键执行 <code>git clone</code> 命令， Git 会提示你输入密码。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 以我的GitHub的BlogCode仓库为例</span><span class="token function">git</span>  clone   ialoe @ https://github.com/ialoe/BlogCode.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="指定分支"><a href="#指定分支" class="headerlink" title="指定分支"></a>指定分支</h5><p>我们可以通过-b <name>来指定要克隆的分支名</p><p><code> git clone -b &lt;name&gt; git@host:/path/to/repository</code> </p><h4 id="添加提交"><a href="#添加提交" class="headerlink" title="添加提交"></a>添加提交</h4><p>你可以提出更改（把它们添加到暂存区），使用如下命令：<br><code>git add &lt;filename&gt;</code> 或者 <code>git add *</code></p><p>这是 git 基本工作流程的第一步；使用如下命令以实际提交改动：<br><code>git commit -m &quot;代码提交信息&quot;</code><br>现在，你的改动已经提交到了 <strong>HEAD</strong>，但是还没到你的远端仓库。</p><h4 id="推送改动"><a href="#推送改动" class="headerlink" title="推送改动"></a>推送改动</h4><p>你的改动现在已经在本地仓库的 <strong>HEAD</strong> 中了。执行如下命令以将这些改动提交到远端仓库：<br><code>git push origin master</code> or <code>git push</code><br>可以把 <em>master</em> 换成你想要推送的任何分支。</p><p>如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：<br><code>git remote add origin &lt;server&gt;</code><br>如此你就能够将你的改动推送到所添加的服务器上去了。</p><p>若需强制推送 <code>git push -f</code> 《不建议》</p><h3 id="Git-基础命令"><a href="#Git-基础命令" class="headerlink" title="Git 基础命令"></a>Git 基础命令</h3><h4 id="git-init"><a href="#git-init" class="headerlink" title="git init"></a>git init</h4><p><strong>初始化工作空间</strong></p><p>初始化工作目录命令格式：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成 <code>.git</code> 目录，所有git需要的数据和资源都存在在这个目录。</p><h4 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h4><p>跟踪已修改文件到暂存区：</p><p>跟踪一个已修改文件到暂存区的命令格式：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> ./<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>git add 命令将修改的文件生成git对象，加入暂存区。</p><p>过程：将将修改的文件生成成git对象，放入版本库，再将Git对象加入到暂存区，只是没有生成树对象。在这个过程中，生成Git对象是增量式的。</p><p>相当于执行了N次（N个文件）：</p><pre class="line-numbers language-none"><code class="language-none">git hash-object -w git update-index<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a>git status</h4><p>跟踪文件状态：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> status <span class="token punctuation">[</span>指定的文件<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>status ：</p><ul><li><code>untracked</code>：未跟踪，红色</li><li><code>tracked</code> ：已跟踪。<ul><li><code>unmodified</code>：未修改，已提交，一般不列出显示。</li></ul></li><li><code>modified</code>：已修改，红色<ul><li><code>staged</code> ： 已暂存，绿色</li></ul></li></ul><p>跟踪新文件：</p><p><code>git add</code> 命令执行之后使用 <code>git status</code>查看，出现<code>changes to be committed</code> 表示已经暂存。</p><p>暂存已修改文件：</p><p>已经暂存的文件进行再次修改，使用 <code>git status</code>查看，此时会出现</p><p><code>changes to be committed</code> 表示该文件之前暂存区有一份，表示已暂存；同时也会出现</p><p><code>changes not staged for commit</code> 表示改文件又有了新的修改。此时已修改文件的状态为<code>modified</code>；修改之后的git对象还没有生成。如果<code>git add</code> 重新暂存，在暂存区则会进行覆盖操作，并重新生成git对象的hash。</p><h4 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a>git diff</h4><p>查看已暂存和未暂存的更新：</p><p><code>git status</code> 仅仅列出修改过的文件。</p><ul><li>判断当前做的哪些更新还没有做暂存：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">diff</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>判断哪些更新已经暂存准备好了下次提交</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">diff</span> --cached<span class="token comment"># 1.6 以上</span><span class="token function">git</span> <span class="token function">diff</span> --staged<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>示例：查看哪些暂存还没提交的数据，这是之前操作的数据。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">diff</span> --cached<span class="token function">diff</span> --git a/bak/xctest.txt b/bak/xctest.txtnew <span class="token function">file</span> mode <span class="token number">100644</span>index 0000000<span class="token punctuation">..</span>83baae6--- /dev/null+++ b/bak/xctest.txt@@ -0,0 +1 @@+version <span class="token number">1</span><span class="token function">diff</span> --git a/new.txt b/new.txtnew <span class="token function">file</span> mode <span class="token number">100644</span>index 0000000<span class="token punctuation">..</span>eae6142--- /dev/null+++ b/new.txt@@ -0,0 +1 @@+new v1<span class="token function">diff</span> --git a/xctest.txt b/xctest.txtnew <span class="token function">file</span> mode <span class="token number">100644</span>index 0000000<span class="token punctuation">..</span>0b6ca5d--- /dev/null+++ b/xctest.txt@@ -0,0 +1,2 @@+version <span class="token number">1</span>+xiaocai v2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h4><p>提交文件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>没有参数会进入一个注释文件可以写大段注释。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit -m <span class="token string">" messgae info"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>-m</code> 一般写短小文字较少的注释。注释建议，带上关键信息，如完成进度，fix bug</p><p>2条命令都是提交项目版本到本地库，生成树对象和提交对象。</p><p>相当于执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> write-tree<span class="token function">git</span> commit-tree<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>跳过使用暂存区域：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit -a -m <span class="token string">"xiaocai test"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过<code>-a</code> 参数，git可以自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过<code>git add</code>步骤。</p><p>注意：==使用 -a 的前提是文件状态要已经被跟踪。==</p><h4 id="git-rm"><a href="#git-rm" class="headerlink" title="git rm"></a>git rm</h4><p>移除文件：</p><p>从Git 中移除文件，就必须要从已跟踪文件清单中注册删除，其实就是从暂存区注册删除，然后提交。可以使用以下命令完成：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">rm</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>该命令将把文件从暂存区注册删除，并且同时从工作目录删除对应的文件，这样文件就不会出现在未跟踪文件清单中。</p><p>需要注意的是，删除之后进行<code>git add</code> 和 <code>git commit</code>操作，对应的Git 对象永远不会删除，暂存区删除之后，版本库里进行的是新增操作，新增的是一个没有内容的git对象和一个树对象。如果要找回，可以找到对应的提交对象hash，回退即可。</p><p>如果我们先手工删除了文件，可以执行<code>git rm</code> 即可，相当于执行了<code>git add ./</code> 和 <code>git commit</code> 也可以手工执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> ./<span class="token function">git</span> commit` <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>==<code>git rm</code> 其实就是删除工作目录中对应的文件，再将修改添加到暂存区。==</p><h4 id="git-mv"><a href="#git-mv" class="headerlink" title="git mv"></a>git mv</h4><p>文件改名：</p><p>git文件修改文件名称命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 重命名操作</span><span class="token function">git</span> <span class="token function">mv</span> oldfile.suffix1  newfile.suffix2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>使用，新建一个文件然后提交：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 新建xiaocai.txt</span><span class="token builtin class-name">echo</span> <span class="token string">"xiaocai de wen jian"</span> <span class="token operator">></span> xiaocai.txt<span class="token comment">#git add</span><span class="token function">git</span> commit -a -m <span class="token string">"new a file test"</span><span class="token comment"># 再执行重命名操作</span><span class="token function">git</span> <span class="token function">mv</span> xiaocai.txt  xc.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>git rm</code> 在旧的版本中类似相当于执行了三条命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mv</span> xiaocai.txt  xc.txt<span class="token function">git</span> <span class="token function">rm</span>  xiaocai.txt<span class="token function">git</span> <span class="token function">add</span>  xiaocai.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>我的git版本比较新，新的版本 status 显示的是 renamed，暂时没注意过程，后续清楚了再补上。**==<code>TODO</code>==**</p><p>查看状态，此时是renamed状态，属于修改操作，</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> statusOn branch masterChanges to be committed:  <span class="token punctuation">(</span>use <span class="token string">"git reset HEAD &lt;file>..."</span> to unstage<span class="token punctuation">)</span>        renamed:    xiaocai.txt -<span class="token operator">></span> xc.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><code>git mv file1 file2</code></strong> 其实就是将工作目录中的文件进行重命名，再将修改添加到暂存区。</p><h4 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h4><p>查看历史记录：</p><p>在提交很多更新之后，想回顾查看提交历史，或者回退历史版本时，使用该命令。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>没有参数会按提交时间列出所有更新，最近在上面，倒序排列。</p><p>示例：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> logcommit c32a601099e6ca73b910829856bc4b1ba88c014e <span class="token punctuation">(</span>HEAD -<span class="token operator">></span> master<span class="token punctuation">)</span>Author: small-rose <span class="token operator">&lt;</span>small-rose@qq.com<span class="token operator">></span>Date:   Mon Nov <span class="token number">16</span> <span class="token number">19</span>:57:12 <span class="token number">2020</span> +0800    <span class="token function">rename</span> xiaocai.txt to xc.txtcommit d57678e00b1dea5ce92817f5ca495c2dc852496cAuthor: small-rose <span class="token operator">&lt;</span>small-rose@qq.com<span class="token operator">></span>Date:   Mon Nov <span class="token number">16</span> <span class="token number">19</span>:54:07 <span class="token number">2020</span> +0800    new a <span class="token function">file</span> <span class="token builtin class-name">test</span>commit 4e84326e84545905f106975a4ce32eb520b4bc98Author: small-rose <span class="token operator">&lt;</span>small-rose@qq.com<span class="token operator">></span>Date:   Mon Nov <span class="token number">16</span> <span class="token number">19</span>:46:44 <span class="token number">2020</span> +0800    first commit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>按下箭头翻页， 按 <code>q</code> 退出。如果要回退，利用提交对象的hash即可。</p><p>不方便看还可以进行格式化显示：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log --pretty<span class="token operator">=</span>oneline<span class="token function">git</span> log --oneline<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>效果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> log --pretty<span class="token operator">=</span>onelinec32a601099e6ca73b910829856bc4b1ba88c014e <span class="token punctuation">(</span>HEAD -<span class="token operator">></span> master<span class="token punctuation">)</span> <span class="token function">rename</span> xiaocai.txt to xc.txtd57678e00b1dea5ce92817f5ca495c2dc852496c new a <span class="token function">file</span> <span class="token builtin class-name">test</span>4e84326e84545905f106975a4ce32eb520b4bc98 first commit$ <span class="token function">git</span> log --onelinec32a601 <span class="token punctuation">(</span>HEAD -<span class="token operator">></span> master<span class="token punctuation">)</span> <span class="token function">rename</span> xiaocai.txt to xc.txtd57678e new a <span class="token function">file</span> <span class="token builtin class-name">test</span>4e84326 first commit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a><span id="breach">分支</span></h3><blockquote><p>Git 分支模型高效轻量。Git 亮点技能。</p><p>分支就是一个提交对象前面的指针，每次提交完成，指针就在提交对象的前面指向最新提交</p><p>分支是用来将特性开发绝缘开来的。</p><p>在你创建仓库的时候，<code>master</code> 是“默认的”分支。在其他分支上进行开发，完成后再将它们合并到主分支上。</p></blockquote><blockquote><p>GitHub已将默认分支master更改为main</p></blockquote><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://www.runoob.com/manual/git-guide/img/branches.png" alt="img"></p><h4 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h4><p>基础命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>没有参数时，显示分支列表。</p><p>后面带参数时，表示创建分支命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch  dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行之后，查看日志</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log --oneline<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建新的分支并切换到该分支上（一步到位式）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout -b  dev_test<span class="token comment"># 执行结果</span>Switched to a new branch <span class="token string">'dev_test'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> log --oneline --decorate --graph --all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>切换成功后Git的路径会有变化</p><p>执行之后，查看日志</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log --oneline<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在新的<code>dev</code> 分支进行操作开发</p><p>在文件夹处右键==》Git Bash Here</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> ./<span class="token function">git</span> commit -m <span class="token string">"add dev code "</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>执行后查看日志</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log --oneline37c967e <span class="token punctuation">(</span>HEAD -<span class="token operator">></span> dev<span class="token punctuation">)</span> <span class="token function">add</span> dev code<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>注意事项</p><ol><li>每次切换分支前，当前分支一定是干净的（所有文件都是已提交状态）。所以在切换分支前使用git status 命令验证状态。</li><li>问题发生于在切换分支时，如果当前分支上有未暂存的修改（一般是第一次）或者有未提交的暂存（一般是第一次），分支可以切换成功，但是会对其他分支造成污染。</li></ol></blockquote><h4 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h4><p>删除之前一定要先切换分支</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>切换成功后，显示master分支</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log --oneline<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>删除分支命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch -d name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="其他分支相关"><a href="#其他分支相关" class="headerlink" title="其他分支相关"></a>其他分支相关</h4><h5 id="查看每个分支最后一次提交"><a href="#查看每个分支最后一次提交" class="headerlink" title="查看每个分支最后一次提交"></a>查看每个分支最后一次提交</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="新建一个分支并且使分支指向对应的提交对象"><a href="#新建一个分支并且使分支指向对应的提交对象" class="headerlink" title="新建一个分支并且使分支指向对应的提交对象"></a>新建一个分支并且使分支指向对应的提交对象</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch  name commitHash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>示例</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 当前是master分支</span><span class="token function">git</span> log --onelinec32a601 <span class="token punctuation">(</span>HEAD -<span class="token operator">></span> master<span class="token punctuation">)</span> <span class="token function">rename</span> islu.txt to xc.txtd57678e new a <span class="token function">file</span> <span class="token builtin class-name">test</span>4e84326 first commit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在创建一个分支想回第一次提交的时候看看代码怎么写的</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch  first 4e84326<span class="token comment"># 新的分支出现了</span><span class="token function">git</span> log --onelinec32a601 <span class="token punctuation">(</span>HEAD -<span class="token operator">></span> master<span class="token punctuation">)</span> <span class="token function">rename</span> xiaocai.txt to xc.txtd57678e new a <span class="token function">file</span> <span class="token builtin class-name">test</span>4e84326 <span class="token punctuation">(</span>first<span class="token punctuation">)</span> first commit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时新的first分支语句出现了，可以切换过去看看：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 切换分支</span><span class="token function">git</span> checkout firstSwitched to branch <span class="token string">'first'</span><span class="token comment"># 现在进入了 first分支</span><span class="token function">git</span> log --oneline4e84326 <span class="token punctuation">(</span>HEAD -<span class="token operator">></span> first<span class="token punctuation">)</span> first commit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h5 id="查看哪些分支已经合并到当前分支"><a href="#查看哪些分支已经合并到当前分支" class="headerlink" title="查看哪些分支已经合并到当前分支"></a>查看哪些分支已经合并到当前分支</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch  -merged<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在这个列表中分支名字前面没有<code>*</code>号的分支通常可以使用<code>git branch -d</code> 删除掉。</p><h5 id="查看所有包含未合并工作的分支"><a href="#查看所有包含未合并工作的分支" class="headerlink" title="查看所有包含未合并工作的分支"></a>查看所有包含未合并工作的分支</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch --no-merged<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>尝试使用<code>git branch -d</code> 删除在这个列表中的分支时会失败。</p><p>如果真的确定要删除分支，可以使用<code>git branch -D</code> 进行强制删除。</p><p><strong>分支的本质是一个提交对象，HEAD 是一个指针，它默认指向master，切换分支时，其实就是让HEAD指向不同的分支。每次有新的提交时，HEAD都会带着当前指向的分支一起往前移动。</strong></p><h4 id="撤销重置"><a href="#撤销重置" class="headerlink" title="撤销重置"></a>撤销重置</h4><p><strong>撤销命令</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit -amend<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>该命令将暂存区的文件提起，如果上次提交以来你还未做任何修改，在你提交后马上执行此命令，那么快照会保持不变，而你所修改的只是提交信息。</p><p>如果提交后发现忘记了暂存某些需要的修改，可以像下面这样操作：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit -m <span class="token string">'some desc'</span><span class="token function">git</span> <span class="token function">add</span> forgeotten_file<span class="token function">git</span> commit -amend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>最终只会有一个提交，第二次提交将代替第一次提交的结果。</p><p><strong>重置命令</strong></p><pre class="line-numbers language-none"><code class="language-none">git reset HEAD  文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="配置别名"><a href="#配置别名" class="headerlink" title="配置别名"></a>配置别名</h4><p>Git 没有自动推断命令功能，有些命令比较长，不想每次输入完整的命令，可以通过<code>git config</code>文件来轻松为每个命令设置一个别名。</p><pre class="line-numbers language-none"><code class="language-none">git config --global alias.co  checkoutgit config --global alias.br  branchgit config --global alias.cm  commitgit config --global alias.st  status<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果需要执行<code>git commit</code> 只需要输入 <code>git cm</code> 即可。</p><p>对于复杂命令，比如查看完整的分支图的命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log --oneline --decorate --graph --all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行结果：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log --oneline --decorate --graph --all* 37c967e <span class="token punctuation">(</span>dev<span class="token punctuation">)</span> <span class="token function">add</span> dev code* c32a601 <span class="token punctuation">(</span>master<span class="token punctuation">)</span> <span class="token function">rename</span> islu.txt to i.txt* d57678e new a <span class="token function">file</span> <span class="token builtin class-name">test</span>* 4e84326 <span class="token punctuation">(</span>HEAD -<span class="token operator">></span> first<span class="token punctuation">)</span> first commit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将该命令配置别名时需要带上双引号：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global alias.islu  <span class="token string">"log --oneline --decorate --graph --all"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Git管理仓库-以Github为例"><a href="#Git管理仓库-以Github为例" class="headerlink" title="Git管理仓库(以Github为例)"></a>Git管理仓库(以Github为例)</h3><h4 id="创建新的仓库然后提交"><a href="#创建新的仓库然后提交" class="headerlink" title="创建新的仓库然后提交"></a>创建新的仓库然后提交</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"# 仓库名"</span> <span class="token operator">>></span> README.md<span class="token function">git</span> init<span class="token function">git</span> <span class="token function">add</span> README.md<span class="token function">git</span> commit -m <span class="token string">"first commit"</span><span class="token function">git</span> branch -M main<span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/用户名/仓库名.git<span class="token function">git</span> push -u origin main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="提交一个已经存在的仓库"><a href="#提交一个已经存在的仓库" class="headerlink" title="提交一个已经存在的仓库"></a>提交一个已经存在的仓库</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/用户名/仓库名.git<span class="token function">git</span> branch -M main<span class="token function">git</span> push -u origin main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="Git的免密使用"><a href="#Git的免密使用" class="headerlink" title="Git的免密使用"></a>Git的免密使用</h4><h5 id="客户端生成密钥"><a href="#客户端生成密钥" class="headerlink" title="客户端生成密钥"></a>客户端生成密钥</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"这里换上你的邮箱"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后会出现询问，大概意思如下：</p><pre class="line-numbers language-none"><code class="language-none">1. 确认秘钥的保存路径（如果不需要改路径则直接回车）；2. 如果上一步置顶的保存路径下已经有秘钥文件，则需要确认是否覆盖（如果之前的秘钥不再需要则直接回车覆盖，如需要则手动拷贝到其他目录后再覆盖）；3. 创建密码（如果不需要密码则直接回车）；4. 确认密码；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>要免密登录请输密码的时候回车即可。根据提示找到密钥所在文件：</p><pre class="line-numbers language-none"><code class="language-none">id_rsa  #私钥id_rsa.pub  #公钥<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>Github配置SSH公钥登录git账户，Setting，SSH and GPG keys, New ssh key把id_rsa.pub的内容粘贴到key的文本域，点击Add SSH key完成。后续的客户端git操作就不要密码了。</p><p>然后回到 Git 的命令行界面，测试一下是否与 Github 连接成功。输入下面的命令行：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">ssh</span> -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>点击回车，然后会出现一个询问内容，输入 <code>yes</code>，回车，会出现一段内容，<code>Hi ! You&#39;ve successfully authenticated, but GitHub doesnot provide shell access.</code>。 说明连接成功。此处这个 `` 应该是你 Github 的用户名。</p></blockquote><h5 id="服务器配置SSH免密"><a href="#服务器配置SSH免密" class="headerlink" title="服务器配置SSH免密"></a>服务器配置SSH免密</h5><p>注意：这里的Git服务器可以是云服务器或者自己的私服务器。本次操作环境是<code>Centos 7</code>。</p><h6 id="1-客户端生成密钥"><a href="#1-客户端生成密钥" class="headerlink" title="1. 客户端生成密钥"></a>1. 客户端生成密钥</h6><blockquote><p>注意：同上，如果已经配置过<code>Github</code>的ssh免密上面已经有了可以不用重复生成，可以直接跳到第二步。</p></blockquote><h6 id="2-服务端导入客户端公钥"><a href="#2-服务端导入客户端公钥" class="headerlink" title="2. 服务端导入客户端公钥"></a>2. 服务端导入客户端公钥</h6><p>在/home/git下已经创建.ssh目录，然后创建authorized_keys文件，并将客户端生成的公钥导入进去。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/git/<span class="token function">mkdir</span> .ssh<span class="token function">chmod</span> <span class="token number">755</span> .ssh<span class="token function">touch</span> .ssh/authorized_keys<span class="token function">chmod</span> <span class="token number">644</span> .ssh/authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将 <code>id_rsa.pub</code> 文件的内容写入<code>authorized_keys</code></p><h6 id="3-服务端SSH开启RSA认证"><a href="#3-服务端SSH开启RSA认证" class="headerlink" title="3. 服务端SSH开启RSA认证"></a>3. 服务端<code>SSH</code>开启<code>RSA</code>认证</h6><p>如果没有安装SSH服务，请先安装SSH服务。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/ssh/sshd_config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中三个地方的设置要确认如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">RSAAuthentication <span class="token function">yes</span>PubkeyAuthentication <span class="token function">yes</span>AuthorizedKeysFile .ssh/authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>git用户不允许登录shell</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">git:x:502:502::/home/git:/bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>改为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">git:x:502:502::/home/git:/usr/local/git/bin/git-shell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Git基础命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vagrant快速创建Linux</title>
      <link href="posts/18967.html"/>
      <url>posts/18967.html</url>
      
        <content type="html"><![CDATA[<h1 id="利用Vagrant-快速搭建linux虚拟机"><a href="#利用Vagrant-快速搭建linux虚拟机" class="headerlink" title="利用Vagrant 快速搭建linux虚拟机"></a>利用Vagrant 快速搭建linux虚拟机</h1><h2 id="下载并安装-VM-VirtualBox"><a href="#下载并安装-VM-VirtualBox" class="headerlink" title="下载并安装 VM VirtualBox"></a>下载并安装 VM VirtualBox</h2><p>官方下载地址 <a href="https://www.virtualbox.org/wiki/Downloads">传送门</a></p><p>微云下载 <a href="https://share.weiyun.com/oNxWsvB1">传送门</a></p><p>安装过程同普通软件安装一样，选择安装路径即可</p><h2 id="下载并安装-Vagrant"><a href="#下载并安装-Vagrant" class="headerlink" title="下载并安装 Vagrant"></a>下载并安装 Vagrant</h2><p>官方下载地址 <a href="https://www.vagrantup.com/downloads">传送门</a> （翻墙者推荐使用）</p><p>微云下载 <a href="https://share.weiyun.com/bsY62EZ3">传送门</a> （推荐使用）</p><p>安装过程同普通软件安装一样，选择安装路径即可</p><h2 id="使用Vagrant"><a href="#使用Vagrant" class="headerlink" title="使用Vagrant"></a>使用Vagrant</h2><h3 id="检验Vagrant是否安装成功"><a href="#检验Vagrant是否安装成功" class="headerlink" title="检验Vagrant是否安装成功"></a>检验Vagrant是否安装成功</h3><p>打开命令行输入命令<code>vagrant</code></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">vagrant # 出现大段命令提示即为成功<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="初始化操作系统以centos-7为例以centos-7为例"><a href="#初始化操作系统以centos-7为例以centos-7为例" class="headerlink" title="初始化操作系统以centos/7为例以centos/7为例"></a>初始化操作系统以centos/7为例以centos/7为例</h3><p>更多操作系统镜像仓库 </p><p>在此以centos/7为例</p><p>命令行中输入命令 <code>vagrant init 镜像名</code></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># centos&#x2F;7为cmd命令行相对路径下的boxvagrant init centos&#x2F;7 #初始化centos&#x2F;7镜像操作系统# 若下载过慢可使用中科大镜像vagrant init centos7 https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;centos-cloud&#x2F;centos&#x2F;7&#x2F;vagrant&#x2F;x86_64&#x2F;images&#x2F;CentOS-7.box<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>初始化成功后会在cmd运行目录中出现文件 <code>Vagrantfile</code></p><h3 id="启动虚拟机"><a href="#启动虚拟机" class="headerlink" title="启动虚拟机"></a>启动虚拟机</h3><p>cmd中输入命令 <code>vagrant up</code> 启动虚拟机</p><p>运行至 <code>Rsyncing folder: /cygdrive/c/Users/L =&gt; /vagrant</code> 这行命令时使用 <code>Ctrl+C</code> 结束运行</p><h3 id="运行并使用虚拟机"><a href="#运行并使用虚拟机" class="headerlink" title="运行并使用虚拟机"></a>运行并使用虚拟机</h3><p>若<strong>VirtualBox</strong> 打开并运行虚拟机即可使用 <code>vagrant ssh</code> 命令进行操作</p><h2 id="开机后快速启动并使用虚拟机"><a href="#开机后快速启动并使用虚拟机" class="headerlink" title="开机后快速启动并使用虚拟机"></a>开机后快速启动并使用虚拟机</h2><p><strong>VirtualBox</strong> 未打开可在cmd中使用命令 <code>vagrant up</code> 启动虚拟机后再使用命令 <code>vagrant ssh</code> 登陆后对虚拟机进行操作</p>]]></content>
      
      
      <categories>
          
          <category> Vagrant </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Vagrant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDBC-防SQL注入</title>
      <link href="posts/57350.html"/>
      <url>posts/57350.html</url>
      
        <content type="html"><![CDATA[<h1 id="JDBC-防SQL注入"><a href="#JDBC-防SQL注入" class="headerlink" title="JDBC-防SQL注入"></a>JDBC-防SQL注入</h1><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><blockquote><p>SQL 注入是指web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的 SQL  语句，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息，甚至篡改数据库</p></blockquote><h3 id="正确账户密码案例代码"><a href="#正确账户密码案例代码" class="headerlink" title="正确账户密码案例代码"></a>正确账户密码案例代码</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 使用正确的用户名和密码登录成功</span><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"select * from account where username = '张三' and password = '123456';"</span><span class="token punctuation">;</span>    <span class="token class-name">ResultSet</span> resultSet <span class="token operator">=</span> <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登录失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="错误账户密码案例代码"><a href="#错误账户密码案例代码" class="headerlink" title="错误账户密码案例代码"></a>错误账户密码案例代码</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 通过SQL注入使用异常的密码登录成功</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSqlInject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"select * from account where username = '张三' and (password = 'iglrne' or 1 = 1);"</span><span class="token punctuation">;</span>        <span class="token class-name">ResultSet</span> resultSet <span class="token operator">=</span> <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登录失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="重点总结"><a href="#重点总结" class="headerlink" title="重点总结"></a>重点总结</h3><blockquote><p>【注意】Statement 存在 SQL 注入问题，而 PreparedStatement 可以有效的避免 SQL 注入！</p><p>以后只能使用 PreparedStatement ，因为操作性更强，并且安全性更高</p></blockquote><h2 id="通过-PreparedStatement-操作-SQL-语句"><a href="#通过-PreparedStatement-操作-SQL-语句" class="headerlink" title="通过 PreparedStatement 操作 SQL 语句"></a>通过 PreparedStatement 操作 SQL 语句</h2><p>PreparedStatement 实例包含已编译的 SQL 语句。这就是使语句“准备好”。包含于 PreparedStatement 对象中的 SQL 语句可具有一个或多个  IN 参数。IN参数的值在 SQL 语句创建时未被指定。相反的，该语句为每个 IN 参数保留一个问号（“？”）作为<a href="https://baike.baidu.com/item/%E5%8D%A0%E4%BD%8D%E7%AC%A6">占位符</a>。每个问号的值必须在该语句执行之前，通过适当的setXXX 方法来提供。</p><p>由于 PreparedStatement 对象已<a href="https://baike.baidu.com/item/%E9%A2%84%E7%BC%96%E8%AF%91">预编译</a>过，所以其执行速度要快于 Statement 对象。因此，多次执行的 SQL 语句经常创建为 PreparedStatement 对象，以提高效率。</p><p>作为 Statement 的子类，PreparedStatement 继承了 Statement 的所有功能。另外它还添加了一整套方法，用于设置发送给数据库以取代 IN 参数<a href="https://baike.baidu.com/item/%E5%8D%A0%E4%BD%8D%E7%AC%A6">占位符</a>的值。同时，三种方法 execute、 executeQuery 和 executeUpdate 已被更改以使之不再需要参数。这些方法的 Statement 形式（接受 SQL 语句参数的形式）不应该用于 PreparedStatement 对象。</p><blockquote><p>【注意】应该始终以PreparedStatement代替Statement，也就是说，在任何时候都不要使用Statement。</p></blockquote><h3 id="PreparedStatement-查询操作"><a href="#PreparedStatement-查询操作" class="headerlink" title="PreparedStatement 查询操作"></a>PreparedStatement 查询操作</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testPreparedStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 获取数据库连接</span>        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 提取资源</span>        <span class="token class-name">PreparedStatement</span> preparedStatement <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">ResultSet</span> resultSet <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">// 准备SQL语句，? 是占位符</span>        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"select * from account where username = ? and password = ?;"</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 获取预处理搬运工对象，并对SQL语句进行预处理</span>            preparedStatement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 设置参数</span>            preparedStatement<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            preparedStatement<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 执行SQL语句</span>            resultSet <span class="token operator">=</span> preparedStatement<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 判断是否还有数据</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"登录失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 关闭资源</span>            <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">,</span> preparedStatement<span class="token punctuation">,</span> connection<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="PreparedStatement-增加操作"><a href="#PreparedStatement-增加操作" class="headerlink" title="PreparedStatement 增加操作"></a>PreparedStatement 增加操作</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsert</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token comment">// 准备SQL语句</span>       <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"insert into student(name, age, gender, info) values(?, ?, ?, ?)"</span><span class="token punctuation">;</span>       <span class="token comment">// 获取连接</span>       <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">PreparedStatement</span> preparedStatement <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>       <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>           <span class="token comment">// 获取预处理对象</span>           preparedStatement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 设置参数</span>           preparedStatement<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"赵四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           preparedStatement<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           preparedStatement<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           preparedStatement<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">"你愁啥"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 执行SQL语句</span>           <span class="token keyword">int</span> affectedRows <span class="token operator">=</span> preparedStatement<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"受影响的行数："</span> <span class="token operator">+</span> affectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>           <span class="token comment">// 关闭资源</span>           <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>preparedStatement<span class="token punctuation">,</span> connection<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="PreparedStatement-修改操作"><a href="#PreparedStatement-修改操作" class="headerlink" title="PreparedStatement 修改操作"></a>PreparedStatement 修改操作</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token comment">// 准备SQL语句</span>       <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"update student set age = ? where id = ?"</span><span class="token punctuation">;</span>       <span class="token comment">// 获取连接</span>       <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">PreparedStatement</span> preparedStatement <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>       <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>           <span class="token comment">// 获取预处理对象</span>           preparedStatement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 设置参数</span>           preparedStatement<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           preparedStatement<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 执行SQL语句</span>           <span class="token keyword">int</span> affectedRows <span class="token operator">=</span> preparedStatement<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"受影响的行数："</span> <span class="token operator">+</span> affectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>           <span class="token comment">// 关闭资源</span>           <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>preparedStatement<span class="token punctuation">,</span> connection<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="PreparedStatement-删除操作"><a href="#PreparedStatement-删除操作" class="headerlink" title="PreparedStatement 删除操作"></a>PreparedStatement 删除操作</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 准备SQL语句</span>        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"delete from student where id = ?"</span><span class="token punctuation">;</span>        <span class="token comment">// 获取连接</span>        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">PreparedStatement</span> preparedStatement <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 获取预处理对象</span>            preparedStatement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 设置参数</span>            preparedStatement<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 执行SQL语句</span>            <span class="token keyword">int</span> affectedRows <span class="token operator">=</span> preparedStatement<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"受影响的行数："</span> <span class="token operator">+</span> affectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 关闭资源</span>            <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>preparedStatement<span class="token punctuation">,</span> connection<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JDBC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JDBC </tag>
            
            <tag> JDBC-防SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDBC</title>
      <link href="posts/23591.html"/>
      <url>posts/23591.html</url>
      
        <content type="html"><![CDATA[<h1 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h1><h2 id="通过-JDBC-连接-MySQL-数据库"><a href="#通过-JDBC-连接-MySQL-数据库" class="headerlink" title="通过 JDBC 连接 MySQL 数据库"></a>通过 JDBC 连接 MySQL 数据库</h2><h4 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h4><pre class="line-numbers language-none"><code class="language-none">1、jar包：连接驱动包 【mysql-connector-java-5.1.47.jar】2、url：确定连接的数据库所在网络地址和对应操作哪一个数据库，由协议名+子协议名+数据源名构成，即        jdbc:mysql:&#x2F;&#x2F;主机地址:端口号&#x2F;数据库名        【例】jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;islu3、user：用户名 【root】4、password：密码 【root】<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><pre class="line-numbers language-none"><code class="language-none">1、加载驱动2、准备必要的连接参数3、获取数据库连接4、关闭资源！！！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="案例代码【测试连接】"><a href="#案例代码【测试连接】" class="headerlink" title="案例代码【测试连接】"></a>案例代码【测试连接】</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> JDBC<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DriverManager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SQLException</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo1</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 1、加载驱动     * 2、准备必要的连接参数     * 3、获取数据库连接     * 4、关闭资源！！！     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">//加载驱动</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//准备必要的连接参数</span>            <span class="token comment">//声明连接数据库所需要的参数，包括但不限于IP地址、端口号、连接到哪个数据库以及相关参数、用户名、密码</span>            <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"jdbc:mysql://localhost:3306/islu?useSSL=true&amp;characterEncoding=utf8"</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> user <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span>            connection <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> <span class="token operator">|</span> <span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/medias/reward/loading.gif" alt="image-20201214214349216"></p><blockquote><p>【注意】连接数据库可以配置一些相关的参数，数据库名与参数之间用 <a href="file:///C:/Users/islu/Desktop/ialoe.github.io-master/posts/46.html">?</a> 进行分隔，参数之间通过 <a href="file:///C:/Users/islu/Desktop/ialoe.github.io-master/posts/46.html">&amp;</a> 分隔，常用参数及格式如下</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>characterEncoding=utf8</td><td>设置字符集为UTF8</td></tr><tr><td>serverTimezone=Asia/Shanghai</td><td>设置时区<a href="file:///C:/Users/islu/Desktop/ialoe.github.io-master/posts/46.html">（JDBC8.0以上必备）</a></td></tr><tr><td>useSSL=true</td><td>使用SSL<a href="file:///C:/Users/islu/Desktop/ialoe.github.io-master/posts/46.html">（JDBC8.0以上要改为false）</a></td></tr></tbody></table><pre class="line-numbers language-java" data-language="java"><code class="language-java">jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>FC2020<span class="token operator">?</span>useSSL<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>characterEncoding<span class="token operator">=</span>utf8<span class="token operator">&amp;</span>serverTimezone<span class="token operator">=</span><span class="token class-name">Asia</span><span class="token operator">/</span><span class="token class-name">Shanghai</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><h2 id="数据库驱动加载过程"><a href="#数据库驱动加载过程" class="headerlink" title="数据库驱动加载过程"></a>数据库驱动加载过程</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Driver</span> <span class="token keyword">extends</span> <span class="token class-name">NonRegisteringDriver</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>Driver</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/*     * Register ourselves with the DriverManager     * 在.class文件加载到内存时运行，并且有且只执行一次     * 代码初始化过程！！！     */</span>     <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// DriverManager驱动管理器注册了当前com.mysql.jdbc.Driver</span>            <span class="token comment">// 相对于当前Java程序拥有了连接MySQL数据库的必要的驱动条件</span>            <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>DriverManager</span><span class="token punctuation">.</span><span class="token function">registerDriver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Driver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> <span class="token class-name">E</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"Can't register driver!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Construct a new driver and register it with DriverManager     *      * @throws SQLException     *             if a database error occurs.     */</span>    <span class="token keyword">public</span> <span class="token class-name">Driver</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// Required for Class.forName().newInstance()</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>【注意】后续会用到静态代码块去完成一些初始化的操作</p></blockquote><h3 id="JDBC-核心API"><a href="#JDBC-核心API" class="headerlink" title="JDBC 核心API"></a>JDBC 核心API</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 驱动管理类</span><span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>DriverManager</span><span class="token comment">/* * 这里是根据数据库连接URL，对应的user用户名和password密码，获取数据库连接对象 */</span><span class="token keyword">static</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token class-name">String</span> url<span class="token punctuation">,</span> <span class="token class-name">String</span> user<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 数据库连接接口</span><span class="token keyword">interface</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>Connection</span> <span class="token comment">/* * 获取数据库SQL语句搬运工对象，从Java程序搬运SQL语句到数据库中，同时Statement也是一个资源对象。 */</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>Statement</span> <span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* * 获取数据库SQL语句【预处理】搬运工对象，Java程序的SQL语句，在创建PreparedStatement对象时，将SQL语句交给数据库预处理操作，可以解决一定的【SQL语句注入问题】，同时提高一定的效率，PreparedStatement也是一个资源对象 */</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>PreparedStatement</span> <span class="token function">prepareStatement</span><span class="token punctuation">(</span><span class="token class-name">String</span> sql<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 数据库SQL语句搬运工对象接口</span><span class="token keyword">interface</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>Statement</span> <span class="token comment">/* * 执行数据库修改数据，insert,update,delete...，返回值类型是int类型，是当前SQL语句搬运到数据库执行之后，数据库运行对于当前操作受到影响的行数 * 2 rows affected in 5 ms */</span><span class="token keyword">int</span> <span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token class-name">String</span> sql<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* * 执行数据库查询语句，select操作，执行的结果是一个java.sql.ResultSet，结果集对象，当前操作返回值never null */</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>ResultSet</span> <span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token class-name">String</span> sql<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 数据库SQL语句【预处理】搬运工对象接口</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>PreparedStatement</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>Statement</span><span class="token comment">/* * 执行数据库修改操作，insert，update，delete...处理的SQL语句是在创建PreparedStatement对象过程预处理的SQL语句，并且返回值是int类型，为当前操作对于数据表中收到影响的行数 */</span><span class="token keyword">int</span> <span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* * 执行数据库查询语句，select操作，的SQL语句是在创建PreparedStatement对象过程预处理的SQL语句，执行的结果是一个java.sql.ResultSet，结果集对象，当前操作返回值never null */</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>ResultSet</span> <span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* * PreparedStatement预处理的SQL语句是可以带有参数的，这里是对于SQL语句参数进行赋值操作，这里有指定的操作下标，和对应的数据，数据类型繁多 */</span><span class="token function">setXXX</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">XXX</span> value<span class="token punctuation">)</span><span class="token comment">// 数据库结果集接口</span><span class="token keyword">interface</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>ResultSet</span> <span class="token comment">/* * 根据查询结果中，字段所处的位置下标获取对应数据，XXX是指定类型(int、String用的最多) */</span><span class="token class-name">XXX</span> <span class="token function">getXXX</span><span class="token punctuation">(</span><span class="token keyword">int</span> columnIndex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* * 根据查询结果中，字段所处的字段名获取对应数据，XXX是指定类型(int、String用的最多) * 例int getInt(String columnLabel) */</span><span class="token class-name">XXX</span> <span class="token function">getXXX</span><span class="token punctuation">(</span><span class="token class-name">String</span> columnLabel<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* * 判断当前查询结果集中是否还有数据可以继续遍历，如果没有。或则当前结果集中是无数据情况 Empty Set，直接返回fasle */</span><span class="token keyword">boolean</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Statement-操作-SQL-语句"><a href="#Statement-操作-SQL-语句" class="headerlink" title="Statement 操作 SQL 语句"></a>Statement 操作 SQL 语句</h3><h4 id="增删改操作步骤【重点】"><a href="#增删改操作步骤【重点】" class="headerlink" title="增删改操作步骤【重点】"></a>增删改操作步骤【重点】</h4><pre class="line-numbers language-none"><code class="language-none">1、加载驱动2、准备连接数据库所需要的参数3、获取数据库连接4、获取Statement搬运工对象5、准备SQL语句6、执行SQL语句获取受影响的行数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Statement-插入-SQL-数据操作"><a href="#Statement-插入-SQL-数据操作" class="headerlink" title="Statement 插入 SQL 数据操作"></a>Statement 插入 SQL 数据操作</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> JDBC<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DriverManager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SQLException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Statement</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo2</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 1、加载驱动     * 2、准备连接数据库所需要的参数     * 3、获取数据库连接     * 4、获取Statement搬运工对象     * 5、准备SQL语句     * 6、执行SQL语句获取受影响的行数     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">Statement</span> statement <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">//加载驱动</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//准备连接所需参数</span>            <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"jdbc:mysql://localhost:3306/islu?useSSL=true&amp;characterEncoding=utf8"</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> user <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span>            <span class="token comment">//获取数据库连接</span>            connection <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取Statement对象</span>            statement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//准备SQL语句</span>            <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"insert into user(uname,upassword) values('islu','islu.cn');"</span><span class="token punctuation">;</span>            <span class="token comment">//执行SQL语句</span>            <span class="token keyword">int</span> affectedRows <span class="token operator">=</span> statement<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"受影响的行数"</span> <span class="token operator">+</span> affectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> <span class="token operator">|</span> <span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>statement <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    statement<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>connection <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/medias/reward/loading.gif" alt="image-20201214215511951"></p><h4 id="Statement-修改-SQL-数据操作"><a href="#Statement-修改-SQL-数据操作" class="headerlink" title="Statement 修改 SQL 数据操作"></a>Statement 修改 SQL 数据操作</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> JDBC<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DriverManager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SQLException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Statement</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo3</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 1、加载驱动     * 2、准备连接数据库所需要的参数     * 3、获取数据库连接     * 4、获取Statement搬运工对象     * 5、准备SQL语句     * 6、执行SQL语句获取受影响的行数     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Connection</span> connection<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">Statement</span> statement<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">//加载驱动</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//获取连接数据库所需要的参数</span>            <span class="token class-name">String</span> url<span class="token operator">=</span><span class="token string">"jdbc:mysql://localhost:3306/islu?useSSL=true&amp;characterEncoding=utf8"</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> user<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> password<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">;</span>            <span class="token comment">//获取数据库连接</span>            connection <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//获取Statement搬运工对象</span>            statement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//准备SQL语句</span>            <span class="token class-name">String</span> sql<span class="token operator">=</span><span class="token string">"update user set uname = '彭于晏' where uid = 1;"</span><span class="token punctuation">;</span>            <span class="token comment">//执行SQL语句</span>            <span class="token keyword">int</span> affectedRows <span class="token operator">=</span> statement<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>affectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span><span class="token operator">|</span> <span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>connection<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>statement<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    statement<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/medias/reward/loading.gif" alt="image-20201214220441018"></p><h4 id="Statement-删除-SQL-数据操作"><a href="#Statement-删除-SQL-数据操作" class="headerlink" title="Statement 删除 SQL 数据操作"></a>Statement 删除 SQL 数据操作</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo4</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">Statement</span> statement <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 加载驱动</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 声明连接数据库所需要的参数，包括但不限于IP地址、端口号、连接到哪个数据库、用户名、密码</span>            <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"jdbc:mysql://localhost:3306/FC2020?useSSL=true&amp;characterEncoding=utf8"</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> user <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span>            <span class="token comment">// 通过参数获取数据库连接</span>            connection <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取Statement对象</span>            statement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 准备SQL语句</span>            <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"delete from student where id = 1;"</span><span class="token punctuation">;</span>            <span class="token comment">// 执行SQL语句获取受影响的行数</span>            <span class="token keyword">int</span> affectedRows <span class="token operator">=</span> statement<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"受影响的行数："</span> <span class="token operator">+</span> affectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> <span class="token operator">|</span> <span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 关闭资源</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>statement <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    statement<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>connection <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/medias/reward/loading.gif" alt="image-20201214220638255"></p><h4 id="查询操作步骤【重点】"><a href="#查询操作步骤【重点】" class="headerlink" title="查询操作步骤【重点】"></a>查询操作步骤【重点】</h4><pre class="line-numbers language-none"><code class="language-none">1、加载驱动2、准备连接数据库所需要的参数3、获取数据库连接4、获取Statement搬运工对象5、准备SQL语句6、执行SQL语句获取结果集对象7、判断结果集对象中是否有数据8、如果结果集对象中存在数据，获取每个数据库字段对应类型的数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Statement-查询-SQL-数据操作"><a href="#Statement-查询-SQL-数据操作" class="headerlink" title="Statement 查询 SQL 数据操作"></a>Statement 查询 SQL 数据操作</h4><p>准备实体类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">bean</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> uid<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> uname<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> upassword<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token keyword">int</span> uid<span class="token punctuation">,</span> <span class="token class-name">String</span> uname<span class="token punctuation">,</span> <span class="token class-name">String</span> upassword<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>uid <span class="token operator">=</span> uid<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>uname <span class="token operator">=</span> uname<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>upassword <span class="token operator">=</span> upassword<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getUid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> uid<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUid</span><span class="token punctuation">(</span><span class="token keyword">int</span> uid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>uid <span class="token operator">=</span> uid<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> uname<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUname</span><span class="token punctuation">(</span><span class="token class-name">String</span> uname<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>uname <span class="token operator">=</span> uname<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUpassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> upassword<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUpassword</span><span class="token punctuation">(</span><span class="token class-name">String</span> upassword<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>upassword <span class="token operator">=</span> upassword<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"User&#123;"</span> <span class="token operator">+</span>                <span class="token string">"uid="</span> <span class="token operator">+</span> uid <span class="token operator">+</span>                <span class="token string">", uname='"</span> <span class="token operator">+</span> uname <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", upassword='"</span> <span class="token operator">+</span> upassword <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">'&#125;'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>【注意】根据阿里巴巴开发手册，实体类成员变量要用包装类！！！</p></blockquote><h5 id="查询单行"><a href="#查询单行" class="headerlink" title="查询单行"></a>查询单行</h5><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> JDBC<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">bean<span class="token punctuation">.</span></span><span class="token class-name">User</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo5</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 声明资源</span>        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">Statement</span> statement <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">ResultSet</span> resultSet <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 加载驱动</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 准备参数</span>            <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"jdbc:mysql://localhost:3306/islu?useSSL=true&amp;characterEncoding=UTF8"</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> user <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span>            <span class="token comment">// 获取连接</span>            connection <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取搬运工对象</span>            statement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 准备SQL语句</span>            <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"select * from user where uid = 1;"</span><span class="token punctuation">;</span>            <span class="token comment">// 执行SQL语句并获取结果集</span>            resultSet <span class="token operator">=</span> statement<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">User</span> userinfo <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token comment">// 判断结果集中是否还有下一行数据</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 从结果集中获取对应类型的数据</span>                <span class="token keyword">int</span> uid <span class="token operator">=</span> resultSet<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> uname <span class="token operator">=</span> resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> upassword <span class="token operator">=</span> resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 通过获取到的数据创建实体类对象</span>                userinfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span>uid<span class="token punctuation">,</span> uname<span class="token punctuation">,</span> upassword<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">// 展示</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>userinfo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> <span class="token operator">|</span> <span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 关闭资源</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>resultSet <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    resultSet<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>statement <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    statement<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>connection <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/medias/reward/loading.gif" alt="image-20201214221545720"></p><h5 id="查询多行"><a href="#查询多行" class="headerlink" title="查询多行"></a>查询多行</h5><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> JDBC<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">bean<span class="token punctuation">.</span></span><span class="token class-name">User</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo6</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 声明资源</span>        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">Statement</span> statement <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">ResultSet</span> resultSet <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 加载驱动</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 准备参数</span>            <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"jdbc:mysql://localhost:3306/islu?useSSL=true&amp;characterEncoding=UTF8"</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> user <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">"luhuijun"</span><span class="token punctuation">;</span>            <span class="token comment">// 获取连接</span>            connection <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取搬运工对象</span>            statement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 准备SQL语句</span>            <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"select * from user;"</span><span class="token punctuation">;</span>            <span class="token comment">// 执行SQL语句并获取结果集</span>            resultSet <span class="token operator">=</span> statement<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">User</span> userinfo <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> list<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 判断结果集中是否还有下一行数据</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>resultSet<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 从结果集中获取对应类型的数据</span>                <span class="token keyword">int</span> uid <span class="token operator">=</span> resultSet<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> uname <span class="token operator">=</span> resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> upassword <span class="token operator">=</span> resultSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 通过获取到的数据创建实体类对象</span>                userinfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span>uid<span class="token punctuation">,</span> uname<span class="token punctuation">,</span> upassword<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//添加到list集合中</span>                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>userinfo<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">// 展示</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> <span class="token operator">|</span> <span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 关闭资源</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>resultSet <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    resultSet<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>statement <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    statement<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>connection <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/medias/reward/loading.gif" alt="image-20201214222210632"></p><h3 id="常见数据库连接"><a href="#常见数据库连接" class="headerlink" title="常见数据库连接"></a>常见数据库连接</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">-------------------------------oracle------------------驱动：oracle.jdbc.driver.OracleDriverURL：jdbc:oracle:thin:@machine_name:port:dbname注：machine_name：数据库所在的机器的名称；      port：端口号，默认是1521-------------------------------mysql-------------------驱动：com.mysql.jdbc.DriverURL：jdbc:mysql://machine_name:port/dbname注：machine_name：数据库所在的机器的名称；      port：端口号，默认3306    ------------------------------SQL Server---------------驱动：com.microsoft.jdbc.sqlserver.SQLServerDriverURL：jdbc:microsoft:sqlserver://<span class="token operator">&lt;</span>:port<span class="token operator">></span><span class="token punctuation">;</span><span class="token assign-left variable">DatabaseName</span><span class="token operator">=</span>注：machine_name：数据库所在的机器的名称；      port：端口号，默认是1433------------------------------DB2----------------------驱动：com.ibm.db2.jdbc.app.DB2DriverURL：jdbc:db2://<span class="token operator">&lt;</span>:port<span class="token operator">></span>/dbname注：machine_name：数据库所在的机器的名称；      port：端口号，默认是5000-------------------------------------------------------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JDBC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JDBC </tag>
            
            <tag> JDBC数据库驱动加载过程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java集合</title>
      <link href="posts/21079.html"/>
      <url>posts/21079.html</url>
      
        <content type="html"><![CDATA[<h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>有序的 Collection ，可以根据索引操作元素，数据可重复</p><blockquote><p>ArrayList</p><p>可变长数组</p><p>LinkedList</p><p>双向链表</p><p>Vector</p><p>线程安全的可变长数组</p></blockquote><h3 id="增加方法"><a href="#增加方法" class="headerlink" title="增加方法"></a>增加方法</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span>接口继承<span class="token class-name">Collection</span>接口 add方法，使用操作和<span class="token class-name">Collection</span>一致，并且这里采用的添加方式是【尾插法】<span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">E</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口【特有方法】，在指定位置，添加指定元素<span class="token keyword">boolean</span> <span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token punctuation">></span></span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口继承<span class="token class-name">Collection</span>接口 addAll方法，使用操作和<span class="token class-name">Collection</span>一致，并且这里采用的添加方式是【尾插法】<span class="token keyword">boolean</span> <span class="token function">addAll</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token punctuation">></span></span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口【特有方法】，在指定下标位置，添加另一个集合中所有内容<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> arrayList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        arrayList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        arrayList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        arrayList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Android"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        arrayList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"Java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arrayList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> al <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"ArrayList是线程不安全的可变长数组"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"LinkedList是双向链表：增删快，查询慢"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>arrayList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>al<span class="token punctuation">)</span><span class="token punctuation">;</span>        arrayList<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> al<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arrayList<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="删除方法"><a href="#删除方法" class="headerlink" title="删除方法"></a>删除方法</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">E</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口【特有方法】，获取指定下标位置的元素并删除<span class="token keyword">boolean</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口继承<span class="token class-name">Collection</span>接口方法。删除集合中的指定元素<span class="token keyword">boolean</span> <span class="token function">removeAll</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口继承<span class="token class-name">Collection</span>接口方法。删除当前集合中和参数集合重复元素<span class="token keyword">boolean</span> <span class="token function">retainAll</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口继承<span class="token class-name">Collection</span>接口方法。保留当前集合中和参数集合重复元素<span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口继承<span class="token class-name">Collection</span>接口方法。清空整个集合中的所有元素<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestRemove</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> al <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"删除指定下标位置为0的元素： "</span> <span class="token operator">+</span> al<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"al : "</span> <span class="token operator">+</span> al<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> al1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"al.removeAll(al1) : "</span> <span class="token operator">+</span> al<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span>al1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"al : "</span> <span class="token operator">+</span> al<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> al2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"al1.reatinAll(al2) : "</span> <span class="token operator">+</span> al1<span class="token punctuation">.</span><span class="token function">retainAll</span><span class="token punctuation">(</span>al2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"al1 ： "</span> <span class="token operator">+</span> al1<span class="token punctuation">)</span><span class="token punctuation">;</span>        al2<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"al2.clear() ： "</span> <span class="token operator">+</span> al2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改方法"><a href="#修改方法" class="headerlink" title="修改方法"></a>修改方法</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">E</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">E</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口【特有方法】，使用指定元素替代指定下标的元素，返回值是被替换的元素<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestModify</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">></span></span> al <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'B'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'C'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'M'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>al<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [M, B, C]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="查询方法"><a href="#查询方法" class="headerlink" title="查询方法"></a>查询方法</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口继承<span class="token class-name">Collection</span>接口方法。获取集合中有效元素个数<span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口继承<span class="token class-name">Collection</span>接口方法。判断当前集合是否为空<span class="token keyword">boolean</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口继承<span class="token class-name">Collection</span>接口方法。判断指定元素是否包含在当前集合中<span class="token keyword">boolean</span> <span class="token function">containsAll</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口继承<span class="token class-name">Collection</span>接口方法。判断参数集合是不是当前集合在子集合<span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口继承<span class="token class-name">Collection</span>接口方法。获取当前集合中所有元素<span class="token class-name">Object</span>数组<span class="token class-name">E</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口【特有方法】。获取指定下标对应的元素<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">></span></span> <span class="token function">subList</span><span class="token punctuation">(</span><span class="token keyword">int</span> fromIndex<span class="token punctuation">,</span> <span class="token keyword">int</span> toIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口【特有方法】。获取当前集合指定子集合，从fromIndex开始，到toIndex结束。fromIndex <span class="token operator">&lt;=</span> 范围 <span class="token operator">&lt;</span> toIndex <span class="token punctuation">[</span><span class="token punctuation">)</span><span class="token keyword">int</span> <span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口【特有方法】。获取指定元素在集合中第一次出现位置<span class="token keyword">int</span> <span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span>接口【特有方法】。获取指定元素在集合中最后一次出现的位置<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestGet</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> al <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Android"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> al2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        al2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>al<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>al<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>al<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"Java"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>al<span class="token punctuation">.</span><span class="token function">containsAll</span><span class="token punctuation">(</span>al2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> al<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Object</span> str <span class="token operator">:</span> array<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>al<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"World"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>al<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>al<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Hello</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>al<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [World, Java]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="LinkedList"><a href="#LinkedList" class="headerlink" title="LinkedList"></a>LinkedList</h3><h4 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h4><blockquote><p>底层数据结构是一个双向链表，查询慢，增删快</p></blockquote><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><p>LinkedList使用的方法都是从List接口实现而来的方法，需要了解的是LinkedList特有方法：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">addFirst</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>    在当前链表开始位置加元素<span class="token keyword">void</span> <span class="token function">addLast</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>    在当前链表末尾添加元素<span class="token class-name">E</span> <span class="token function">getFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    获取第一个<span class="token class-name">Node</span>节点元素数据<span class="token class-name">E</span> <span class="token function">getLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    获取末尾<span class="token class-name">Node</span>节点元素数据<span class="token class-name">E</span> <span class="token function">removeFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    删除头节点<span class="token class-name">E</span> <span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    删除末尾节点<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> linkedList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        linkedList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        linkedList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Balance"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        linkedList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Wizard"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        linkedList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Blanche"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        linkedList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Eve"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        linkedList<span class="token punctuation">.</span><span class="token function">addFirst</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        linkedList<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span><span class="token string">"World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">getFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// Buffer</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">getLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// Eve</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// [Hello, Buffer, Balance, Wizard, Blanche, Eve, World]</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"移除头元素"</span> <span class="token operator">+</span> linkedList<span class="token punctuation">.</span><span class="token function">removeFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 移除头元素Hello</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"移除尾元素"</span> <span class="token operator">+</span> linkedList<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 移除尾元素World</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// [Buffer, Balance, Wizard, Blanche, Eve]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h3><h4 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">List</span> 接口的大小可变数组的实现。实现了所有可选列表操作，并允许包括 <span class="token keyword">null</span> 在内的所有元素。除了实现 <span class="token class-name">List</span> 接口外，此类还提供一些方法来操作内部用来存储列表的数组的大小。（此类大致上等同于 <span class="token class-name">Vector</span> 类，除了此类是不同步的。）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="特有方法"><a href="#特有方法" class="headerlink" title="特有方法"></a>特有方法</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">ensureCapacity</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>    如有必要，增加此 <span class="token class-name">ArrayList</span> 实例的容量，以确保它至少能够容纳最小容量参数所指定的元素数。<span class="token function">trimToSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    将此 <span class="token class-name">ArrayList</span> 实例的容量调整为列表的当前大小。节省空间<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="效率"><a href="#效率" class="headerlink" title="效率"></a>效率</h4><blockquote><p>增删慢，查询快</p></blockquote><pre class="line-numbers language-none"><code class="language-none">增删慢    增加慢        1、数组当前容量无法满足添加操作，需要进行grow扩容方法执行，在扩容方法中，存在数组创建，数组数据拷贝。非常浪费时间，而且浪费内存。        2、数组在添加数据的过程中，存在在指定位置添加元素，从指定位置开始，之后的元素整体向后移动。    删除慢        1、删除数据之后，从删除位置开始，之后的元素整体向前移动，移动过程非常浪费时间        2、删除操作会导致数据空间的浪费，内存的浪费    查询快        ArrayList 底层是一个数组结构，在查询操作的过程中，是按照数组+下标的方式来操作对应的元素，数组+下标方式可以直接获取对应的空间首地址，CPU访问效率极高。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Collection-接口"><a href="#Collection-接口" class="headerlink" title="Collection 接口"></a>Collection 接口</h2><blockquote><p>Collection  层次结构中的根接口。Collection 表示一组对象，这些对象也称为 collection 的元素。一些 collection  允许有重复的元素，而另一些则不允许。一些 collection 是有序的，而另一些则是无序的。JDK 不提供此接口的任何<em>直接</em> 实现：它提供更具体的子接口（如 <code>Set</code> 和 <code>List</code>）实现。此接口通常用来传递 collection，并在需要最大普遍性的地方操作这些 collection。</p></blockquote><h3 id="增加方法-1"><a href="#增加方法-1" class="headerlink" title="增加方法"></a>增加方法</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>    添加当前集合约束的指定数据类型到当前集合中<span class="token keyword">boolean</span> <span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token punctuation">></span></span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>    添加另一个集合到当前集合中，要求添加集合中保存的元素必须是当前集合中保存元素本身或者其子类对象 【泛型的上限】    <span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span>    <span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span>    <span class="token keyword">class</span> <span class="token class-name">Tiger</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> collection1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> collection2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collection1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// [Java, Hello]</span>        collection1<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>collection2<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collection1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// [Java, Hello, Java, Hello, World]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="删除方法-1"><a href="#删除方法-1" class="headerlink" title="删除方法"></a>删除方法</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">boolean</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>    删除集合中的指定元素，删除成功返回<span class="token boolean">true</span><span class="token punctuation">,</span>未找到指定元素，无法删除返回    <span class="token boolean">false</span>，并且在多个元素的情况下，删除找到的第一个元素。<span class="token keyword">boolean</span> <span class="token function">removeAll</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>    在当前集合中删除两个集合的交集<span class="token keyword">boolean</span> <span class="token function">retainAll</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>    在当前集合中保留两个集合的交集<span class="token keyword">void</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    清空整个集合中的所有元素<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestRemove</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> collection1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> collection2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection1<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collection1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// [Java]</span>        collection2<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span>collection1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collection2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// [Hello, World]</span>        collection1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection1<span class="token punctuation">.</span><span class="token function">containsAll</span><span class="token punctuation">(</span>collection2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collection1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// [Java, Hello]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查询方法-1"><a href="#查询方法-1" class="headerlink" title="查询方法"></a>查询方法</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    有效元素个数<span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    判断当前集合是否为空，是否存在有效元素<span class="token keyword">boolean</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>    判断指定元素是否在当前集合中存在<span class="token keyword">boolean</span> <span class="token function">containsAll</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>    判断传入的参数集合是不是当前集合的子集合<span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    返回集合中所有保存元素的<span class="token class-name">Object</span>类型数组<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestGet</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> collection1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> collection2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        collection2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collection1<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 2</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collection1<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// fasle</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collection1<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"Java"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//true</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collection2<span class="token punctuation">.</span><span class="token function">containsAll</span><span class="token punctuation">(</span>collection1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// true</span>        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> collection1<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h3><p>是用来获取集合中元素的另一种方式（遍历），依赖于集合存在</p><h4 id="获取迭代器的方法"><a href="#获取迭代器的方法" class="headerlink" title="获取迭代器的方法"></a>获取迭代器的方法</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">></span></span> <span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    获取迭代器对象，泛型对应的具体数据类型和集合中约束的泛型具体数据类型一致。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">boolean</span> <span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    判断当前集合中是否可以继续得到元素，<span class="token punctuation">(</span>是否可以继续遍历<span class="token punctuation">)</span><span class="token class-name">E</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token number">1.</span> 获取迭代器当前指向的元素    <span class="token number">2.</span> 将迭代器指向下一个元素<span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    删除通过next方法获取到元素        【注意】        <span class="token number">1</span>、remove方法只能删除next方法获取到元素        <span class="token number">2</span>、remove方法只能在next方法之后执行，且不能跨过一个next执行        <span class="token number">3</span>、没有next不能使用remove<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"雪花纯生"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"修道院啤酒"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"1664"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"泰山精酿"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        c<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"时光精酿"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/*         * 根据当前集合，获取对应的迭代器对象         *          * 得到的迭代器对象会依据，当前集合中的所有元素进行一个规划操作。         * 迭代器对于整个集合中的元素都是存在预期。         */</span>        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> iterator <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/*         * 迭代器遍历，利用迭代器的特征进行遍历操作         */</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 获取每一个迭代器指向元素，并且展示</span>            <span class="token class-name">String</span> string <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">/*             * 通过集合对象本身删除1664，对于迭代器而言，一脸懵逼，原本的规划             * 没有了！！！并且集合没有告知迭代器数据发生了改变，迭代器继续按照             * 原本的规划路径操作，保存！！！             *              * 对于集合在内存中占用的空间而言             *     1. 集合对应的引用数据类型变量可以操作对应空间             *     2. 迭代器可以操作对应的空间             *              * 对于集合和迭代器而言，【集合在内存中占用的空间】共享资源，在操作             * 共享资源过程中，我们要多多考虑共享资源的冲突问题。             * 后面课程中会讲到【多线程】             */</span>            c<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"1664"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/*         Exception in thread "main" java.util.ConcurrentModificationException                at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:909)                at java.util.ArrayList$Itr.next(ArrayList.java:859)                at com.qfedu.b_iterator.Demo3.main(Demo3.java:30)         */</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><blockquote><p>Map 接口允许以键集、值集或键-值映射关系集的形式查看某个映射的内容。映射顺序 定义为迭代器在映射的 collection 视图上返回其元素的顺序。某些映射实现可明确保证其顺序，如 TreeMap 类；另一些映射实现则不保证顺序，如 HashMap 类。</p><p>【重点】将键映射到值的对象。一个映射不能包含重复的键；每个键最多只能映射到一个值。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">interface</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">></span></span> <span class="token operator">--</span><span class="token operator">|</span> <span class="token keyword">class</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">></span></span>     重点！！！底层是哈希表<span class="token operator">--</span><span class="token operator">|</span> <span class="token keyword">class</span> <span class="token class-name">TreeMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">></span></span>    底层是红黑树<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="增加方法-2"><a href="#增加方法-2" class="headerlink" title="增加方法"></a>增加方法</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>    添加符合<span class="token class-name">Map</span>要求的键值对存入到双边队列中<span class="token keyword">void</span> <span class="token function">putAll</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span>    添加另一个<span class="token class-name">Map</span>到当前<span class="token class-name">Map</span>中，要求<span class="token class-name">K</span>是当前<span class="token class-name">Map</span>本身对应的<span class="token class-name">K</span>，或者其子类，<span class="token class-name">V</span>是当前<span class="token class-name">Map</span>本身对应的<span class="token class-name">V</span>，或者其子类<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="删除方法-2"><a href="#删除方法-2" class="headerlink" title="删除方法"></a>删除方法</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">V</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>     删除对应<span class="token class-name">Key</span>键值对<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="修改方法-1"><a href="#修改方法-1" class="headerlink" title="修改方法"></a>修改方法</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>    使用value修改已存在的key对应的值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="查询方法-2"><a href="#查询方法-2" class="headerlink" title="查询方法"></a>查询方法</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Map</span>双边队列个数<span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    判断当前<span class="token class-name">Map</span>双边队列中是否为空<span class="token keyword">boolean</span> <span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>    判断指定<span class="token class-name">Key</span>是否存在<span class="token keyword">boolean</span> <span class="token function">containsValue</span><span class="token punctuation">(</span><span class="token class-name">Object</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>    判断指定<span class="token class-name">Value</span>是否存在<span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">></span></span> <span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    返回<span class="token class-name">Map</span>双边队列中所有<span class="token class-name">Key</span>对应的<span class="token class-name">Set</span>集合<span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">></span></span> <span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    返回<span class="token class-name">Map</span>双边队列中所有value对应<span class="token class-name">Collection</span>集合<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Map-中的-Entry"><a href="#Map-中的-Entry" class="headerlink" title="Map 中的 Entry"></a>Map 中的 Entry</h3><blockquote><p>Map双边队列中把 Key 和 Value 进行一个封装操作，完全按照一个数据类型来处理。是 Map 中的一个成员接口，用于获取对应的键和值（参考Collection中的迭代器）</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">interface</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><p>案例代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">></span><span class="token punctuation">></span></span> <span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    返回值类型是<span class="token class-name">Entry</span>键值对形式数据的<span class="token class-name">Set</span>集合<span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">></span><span class="token punctuation">></span></span>    <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">></span></span> <span class="token class-name">Map</span>接口的内部接口<span class="token class-name">Entry</span>，使用的泛型 <span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span>对应<span class="token class-name">Map</span>创建过程中约束的<span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span>    因为返回值是<span class="token class-name">Set</span>集合，集合带有泛型 <span class="token class-name">Set</span><span class="token operator">&lt;</span><span class="token class-name">Map</span>接口中的内部接口<span class="token class-name">Entry</span><span class="token operator">></span><span class="token class-name">Entry</span> 对应的方法    <span class="token class-name">K</span> <span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        返回与此项对应的键    <span class="token class-name">V</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        返回与此项对应的值。    <span class="token class-name">V</span> <span class="token function">setValue</span><span class="token punctuation">(</span><span class="token class-name">V</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>        用指定的值替换与此项对应的值，返回与此项对应的旧值 <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestEntry</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Balance"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Amy"</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span><span class="token punctuation">></span></span> entrySet <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> entry <span class="token operator">:</span> entrySet<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" setVaule: "</span> <span class="token operator">+</span> entry<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" : "</span> <span class="token operator">+</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="HashMap"><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h3><blockquote><p>基于哈希表的 Map 接口的实现。此实现提供所有可选的映射操作，并允许使用 null 值和 null 键。（除了非同步和允许使用 null 之外，HashMap 类与 Hashtable 大致相同。）此类不保证映射的顺序</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><p>案例代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestHashMap</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Balance"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Amy"</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> hashMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Candy"</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"David"</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashMap<span class="token punctuation">.</span><span class="token function">putAll</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">)</span><span class="token punctuation">;</span>        hashMap<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"Balance"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">)</span><span class="token punctuation">;</span>        hashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hashMap<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"map.size() :"</span> <span class="token operator">+</span> map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"map.isEmpty() : "</span> <span class="token operator">+</span> map<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"have Buffer : "</span> <span class="token operator">+</span> map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"have Buffer's age : "</span> <span class="token operator">+</span> hashMap<span class="token punctuation">.</span><span class="token function">containsValue</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> keySet <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>keySet<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> values <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>【注意】HashMap 添加自定义数据类型元素时需要重写其 equals 和 hashCode 方法</p></blockquote><p>学生类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">char</span> sex<span class="token punctuation">;</span>    <span class="token comment">// Constructor setter getter toString equals hashCode</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestMap2</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> hashMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Balance"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span><span class="token punctuation">></span></span> entrySet <span class="token operator">=</span> hashMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> entry <span class="token operator">:</span> entrySet<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>entry<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Student</span> <span class="token punctuation">[</span>name<span class="token operator">=</span><span class="token class-name">Balance</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">,</span> sex<span class="token operator">=</span>男<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">2</span><span class="token class-name">Student</span> <span class="token punctuation">[</span>name<span class="token operator">=</span><span class="token class-name">Buffer</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">,</span> sex<span class="token operator">=</span>女<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">4</span><span class="token class-name">Student</span> <span class="token punctuation">[</span>name<span class="token operator">=</span><span class="token class-name">Buffer</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">22</span><span class="token punctuation">,</span> sex<span class="token operator">=</span>男<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">3</span><span class="token class-name">Student</span> <span class="token punctuation">[</span>name<span class="token operator">=</span><span class="token class-name">Buffer</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">,</span> sex<span class="token operator">=</span>男<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="TreeMap"><a href="#TreeMap" class="headerlink" title="TreeMap"></a>TreeMap</h3><blockquote><p>基于红黑树（Red-Black tree）的 NavigableMap 实现。该映射根据其键的自然顺序进行排序，或者根据创建映射时提供的 Comparator 进行排序，具体取决于使用的构造方法。</p></blockquote><p>学生类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">char</span> sex<span class="token punctuation">;</span>    <span class="token comment">// Constructor and setter、getter</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Comparator 接口实现类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyCompare</span> <span class="token keyword">implements</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 返回两个学生的年龄差     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">Student</span> o1<span class="token punctuation">,</span> <span class="token class-name">Student</span> o2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> o1<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> o2<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestTreeMap</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TreeMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> treeMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyCompare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        treeMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        treeMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        treeMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>treeMap<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>treeMap<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><h3 id="概述-3"><a href="#概述-3" class="headerlink" title="概述"></a>概述</h3><blockquote><p>一个不包含重复元素的 Collection。存储元素的顺序无序。（注意区分添加顺序和存储顺序）</p></blockquote><h3 id="HashSet"><a href="#HashSet" class="headerlink" title="HashSet"></a>HashSet</h3><h4 id="概述-4"><a href="#概述-4" class="headerlink" title="概述"></a>概述</h4><blockquote><p>底层数据结构是哈希表，依赖 equals 方法和 hashCode 方法实现不可重复</p></blockquote><p>学生类：需要重写 equals</p><p> 和 hashCode</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token comment">// Construator setter/getter toString</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">final</span> <span class="token keyword">int</span> prime <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        result <span class="token operator">=</span> prime <span class="token operator">*</span> result <span class="token operator">+</span> age<span class="token punctuation">;</span>        result <span class="token operator">=</span> prime <span class="token operator">*</span> result <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>name <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> name<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> obj<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> obj<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token class-name">Student</span> other <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">)</span> obj<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>age <span class="token operator">!=</span> other<span class="token punctuation">.</span>age<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>other<span class="token punctuation">.</span>name <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">></span></span> hashSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Smoot"</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Wizard"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hashSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Balance"</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Student</span> student <span class="token operator">:</span> hashSet<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Student</span> <span class="token punctuation">[</span>name<span class="token operator">=</span><span class="token class-name">Smoot</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token class-name">Student</span> <span class="token punctuation">[</span>name<span class="token operator">=</span><span class="token class-name">Wizard</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token class-name">Student</span> <span class="token punctuation">[</span>name<span class="token operator">=</span><span class="token class-name">Balance</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token class-name">Student</span> <span class="token punctuation">[</span>name<span class="token operator">=</span><span class="token class-name">Buffer</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token class-name">Student</span> <span class="token punctuation">[</span>name<span class="token operator">=</span><span class="token class-name">Buffer</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>hashSet底层哈希表结构存储元素时，会首先得到当前元素的哈希值，需要执行调用对应的hashCode方法，hash方法中存在一个【移位运算】，一种特殊运算方式，用于根据当前对象的hashCode结果，计算该元素在底层哈希表中的存储位置。</p><p>【重点】如果元素hashCode值结果一致，那么它们保存对应的位置应该是一致的，会存入同一个空间，但是会进行equals比较，对象相同，【无法添加，对象不同，可以添加，但是需要避免】</p></blockquote><h3 id="TreeSet"><a href="#TreeSet" class="headerlink" title="TreeSet"></a>TreeSet</h3><h4 id="概述-5"><a href="#概述-5" class="headerlink" title="概述"></a>概述</h4><blockquote><p>基于 TreeMap 的 NavigableSet 实现，底层数据结构是平衡二叉树。使用元素的自然顺序对元素进行排序（Comparable），或者根据创建 set 时提供的 Comparator 进行排序，具体取决于使用的构造方法。</p></blockquote><p>Person 类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">code<span class="token punctuation">.</span>treeset</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token comment">// Constructor setter/getter toString</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Comparator 接口实现类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyCompare</span> <span class="token keyword">implements</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 通过年龄判断是否为同一个 Person</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">Person</span> o1<span class="token punctuation">,</span> <span class="token class-name">Person</span> o2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> o1<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> o2<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestPerson</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 创建 TreeSet 集合时传入一个 Comparator 接口的实现类</span>        <span class="token class-name">TreeSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">></span></span> treeSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyCompare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        treeSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"Smoot"</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        treeSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        treeSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"Wizard"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        treeSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"Balance"</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>treeSet<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// [Person [name=Balance, age=21], Person [name=Smoot, age=22], Person [name=Buffer, age=23]]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java接口</title>
      <link href="posts/50457.html"/>
      <url>posts/50457.html</url>
      
        <content type="html"><![CDATA[<h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>接口是一系列方法的声明，是一些方法特征的集合，<strong>一个接口只有方法的特征没有方法的实现，因此这些方法可以在不同的地方被不同的类实现，而这些实现可以具有不同的行为（功能）</strong>。</p><h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><p>interface ：用来声明接口的关键字</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">声明格式：    <span class="token keyword">interface</span> 接口名 <span class="token punctuation">&#123;</span>        静态常量<span class="token punctuation">;</span>        抽象方法<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>实现格式：    <span class="token keyword">class</span> 类名 <span class="token keyword">implements</span> 接口名 <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token number">1</span>、接口中的成员变量只能是静态常量，定义时必须初始化。默认修饰符：<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span><span class="token number">2</span>、接口中没有构造方法，因为接口不能实例化对象<span class="token number">3</span>、接口中的成员方法只能是抽象方法，没有方法体。默认修饰符：<span class="token keyword">public</span> <span class="token keyword">abstract</span><span class="token number">4</span>、接口的实现类必须重写接口中方法，或者是一个抽象类<span class="token punctuation">(</span>可以重写也可以不重写接口中的方法<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="接口的声明和实现"><a href="#接口的声明和实现" class="headerlink" title="接口的声明和实现"></a>接口的声明和实现</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">interface</span> play<span class="token punctuation">&#123;</span>    <span class="token comment">// 常量，缺省修饰符：public static final</span>    <span class="token keyword">int</span> time <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token comment">// 抽象方法，缺省修饰符：public abstract</span>    <span class="token keyword">void</span> <span class="token function">geme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestInterface3</span> <span class="token keyword">implements</span> play<span class="token punctuation">&#123;</span>    <span class="token comment">// 重写接口中的方法</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">geme</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"玩游戏"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>【注意】接口的实现类必须重写接口中的方法</p><h3 id="抽象类实现接口"><a href="#抽象类实现接口" class="headerlink" title="抽象类实现接口"></a>抽象类实现接口</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">interface</span> servlet <span class="token punctuation">&#123;</span>    <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">BaseServlet</span> <span class="token keyword">implements</span> servlet <span class="token punctuation">&#123;</span>    <span class="token comment">// 重写init()方法</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"初始化"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">MyServlet</span> <span class="token keyword">extends</span> <span class="token class-name">BaseServlet</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"服务方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">new</span> <span class="token class-name">MyServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">MyServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>【注意】抽象类实现接口，可以选择性重写也可以不重写接口中的方法</p><h3 id="类的接口多实现"><a href="#类的接口多实现" class="headerlink" title="类的接口多实现"></a>类的接口多实现</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">interface</span> <span class="token class-name">Play</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">void</span> <span class="token function">geme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">interface</span> <span class="token class-name">Eat</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">void</span> <span class="token function">noodles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestInterface3</span> <span class="token keyword">implements</span> <span class="token class-name">Play</span><span class="token punctuation">,</span> <span class="token class-name">Eat</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 重写Play类中的方法</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">geme</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"玩游戏"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 重写Eat类中的方法</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">noodles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"吃面条"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>【注意】接口的实现类必须重写所有接口中的方法</p><h3 id="接口的继承"><a href="#接口的继承" class="headerlink" title="接口的继承"></a>接口的继承</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">interface</span> <span class="token class-name">Eat</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">void</span> <span class="token function">noodles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">interface</span> <span class="token class-name">Play</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">void</span> <span class="token function">happy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 单继承</span><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token keyword">extends</span> <span class="token class-name">Play</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">// 多继承</span><span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token keyword">extends</span> <span class="token class-name">Play</span><span class="token punctuation">,</span> <span class="token class-name">Eat</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">// 实体类实现Animal接口，重写所有方法</span><span class="token keyword">class</span> <span class="token class-name">Biology</span> <span class="token keyword">implements</span> <span class="token class-name">Animal</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">happy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"玩得开心"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">noodles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"面条好吃"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Biology</span> biology <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Biology</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        biology<span class="token punctuation">.</span><span class="token function">happy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 玩得开心</span>        biology<span class="token punctuation">.</span><span class="token function">noodles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 面条好吃</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>【注意】接口之间可以单继承，也可以多继承</p><h3 id="jdk1-8新特性：default接口"><a href="#jdk1-8新特性：default接口" class="headerlink" title="jdk1.8新特性：default接口"></a>jdk1.8新特性：default接口</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">interface</span> <span class="token class-name">Function</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">testDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"default修饰的接口可以有方法体"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// default 修饰的接口可以不被重写</span><span class="token keyword">class</span> <span class="token class-name">Base</span> <span class="token keyword">implements</span> <span class="token class-name">Function</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Base类重写Function接口中的方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// default 修饰的接口也可以重写</span><span class="token keyword">class</span> <span class="token class-name">Boost</span> <span class="token keyword">implements</span> <span class="token class-name">Function</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Boost类重写Function接口中的方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Boost类重写Function接口中的default方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestInterface2</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Base</span> base <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Base</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Boost</span> boost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Boost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        base<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Base类重写Function接口中的方法</span>        base<span class="token punctuation">.</span><span class="token function">testDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// default修饰的接口可以有方法体</span>        boost<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Boost类重写Function接口中的方法</span>        boost<span class="token punctuation">.</span><span class="token function">testDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Boost类重写Function接口中的default方法</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>【注意】default修饰的接口可以不被重写</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、接口是对类的扩展，通过接口可以让类拥有更多更强的功能2、接口中只有全局常量和抽象方法，所以不能实例化3、接口的实现类必须重写所有方法，或者是个抽象类4、接口可以多实现5、接口可以单继承，也可以多继承<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java接口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java泛型</title>
      <link href="posts/42613.html"/>
      <url>posts/42613.html</url>
      
        <content type="html"><![CDATA[<h2 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>Java泛型是JavaSE1.5中引入的一个新特性，其本质是参数化类型，也就是说所操作的数据类型被指定为一个参数（type  parameter）这种参数类型在定义的时候是宽泛的，而在使用的时候是确定的。可以用在类、接口和方法的创建中，分别称为泛型类、泛型接口、泛型方法。</p><h3 id="泛型的优点"><a href="#泛型的优点" class="headerlink" title="泛型的优点"></a>泛型的优点</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、提高了程序的安全性(类型安全)2、提高了程序的可扩展性、可重用性3、将运行期遇到的问题转移到了编译期4、省去了类型强转的麻烦(Object类对象)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="泛型格式"><a href="#泛型格式" class="headerlink" title="泛型格式"></a>泛型格式</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">泛型标识符：<span class="token operator">&lt;</span>自定义无意义英文大写单字母占位符<span class="token operator">></span>    常用格式：                <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token class-name">Type</span>         <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">></span></span> <span class="token class-name">Element</span>        <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">></span></span> <span class="token class-name">Key</span>        <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">></span></span> <span class="token class-name">Value</span>泛型类：把泛型定义在类上    格式<span class="token operator">:</span><span class="token keyword">class</span> 类名<span class="token operator">&lt;</span>泛型类型<span class="token number">1</span><span class="token punctuation">,</span>…<span class="token operator">></span>        【注意】泛型类型必须是引用类型泛型方法：把泛型定义在方法上    格式<span class="token operator">:</span><span class="token keyword">public</span> <span class="token operator">&lt;</span>泛型类型<span class="token operator">></span> 返回类型 方法名<span class="token punctuation">(</span>泛型类型 <span class="token punctuation">.</span><span class="token punctuation">)</span>泛型接口：把泛型定义在接口上    格式<span class="token operator">:</span><span class="token keyword">public</span>  <span class="token keyword">interface</span> 接口名<span class="token operator">&lt;</span>泛型类型<span class="token number">1</span>…<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="泛型方法"><a href="#泛型方法" class="headerlink" title="泛型方法"></a>泛型方法</h3><p>案例代码1</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GenericityMethodDemo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">"Java"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 泛型方法     * 格式：     *         泛型限定符 返回值类型 方法名(泛型类型 参数名) &#123;&#125;     *      * @param &lt;T> 泛型限定符     * @param t 任意类型的参数     * @return 返回任意类型参数     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token class-name">T</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> t<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例代码2</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GenericityMethodDemo2</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> intArr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> stringArr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"4"</span><span class="token punctuation">,</span> <span class="token string">"5"</span><span class="token punctuation">,</span> <span class="token string">"6"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">// 自定义学生类，其中包含name和age两个成员变量</span>        <span class="token class-name">Student</span><span class="token punctuation">[</span><span class="token punctuation">]</span> students <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"王五"</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token function">printArray</span><span class="token punctuation">(</span>intArr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printArray</span><span class="token punctuation">(</span>stringArr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printArray</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 遍历任意类型的数组     *      * @param &lt;T> 泛型限定符     * @param t 任意类型的数组     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token keyword">void</span> <span class="token function">printArray</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> t<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> t<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>【注意】</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、要求形式参数列表中必须有一个参数是当前自定义泛型，因为需要通过参数来约束当前方法运行过程中泛型对应的具体数据类型是哪一个2、返回值类型可以使用自定义泛型，而且是被形式参数列表中传入的泛型对应具体的数据类型控制3、方法体内也可以使用自定义泛型，同时也是被参数当中泛型对应具体数据类型约束监控<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="泛型类"><a href="#泛型类" class="headerlink" title="泛型类"></a>泛型类</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GenericityClassDemo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Number</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> num1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Number</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> num2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token string">"100"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num1<span class="token punctuation">.</span><span class="token function">getT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num2<span class="token punctuation">.</span><span class="token function">getT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 泛型类，把泛型定义到类上，整个类内都可以使用。是对泛型方法的封装 * @param &lt;T> 泛型标识符 */</span><span class="token keyword">class</span> <span class="token class-name">Number</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">T</span> t<span class="token punctuation">;</span>    <span class="token comment">// Constrator、setters、getters</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>【注意】</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、类内可以直接使用对应的类名声明泛型2、类内使用的泛型具体数据类型是在创建当前类对象时约束3、在创建当前类对象时没有约束泛型对应的具体数据类型，那么所有使用到泛型的位置都是Object类型，有悖于泛型使用原则4、如果类声明过了泛型，那么类中所有使用此泛型的方法都同时被声明，即无法使用其他类型5、泛型类中定义的静态方法不能直接使用类声明的泛型，因为泛型需要在创建对象时声明，而静态方法在类加载时就加载完成，此时泛型还没有声明。如果静态方法想要使用泛型，只能自己声明自己使用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>泛型接口</p><p>案例代码1</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">interface</span> USB <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Mouse</span> <span class="token keyword">implements</span> USB <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Keyboard</span> <span class="token keyword">implements</span> USB <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">interface</span> PC<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 接口中的常量不能使用泛型</span>    <span class="token class-name">T</span> <span class="token function">use</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* *  实现类实现接口时不指定泛型类型, *  需要在创建对象时明确 */</span><span class="token keyword">class</span> <span class="token class-name">MyPC</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token keyword">implements</span> PC<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">use</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> t<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/* * 实现类实现接口时，接口中泛型的类型已经明确， * 实现的方法也是明确的 */</span><span class="token keyword">class</span> <span class="token class-name">YourPC</span> <span class="token keyword">implements</span> PC<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Mouse</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Mouse</span> <span class="token function">use</span><span class="token punctuation">(</span><span class="token class-name">Mouse</span> t<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> t<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GenericityInterfaceDemo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 创建对象时明确泛型的类型</span>        <span class="token class-name">MyPC</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Keyboard</span><span class="token punctuation">></span></span> myPC <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyPC</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Keyboard</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Keyboard</span> keyboard <span class="token operator">=</span> myPC<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Keyboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>keyboard<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 声明类时已经明确泛型的类型，所以这里的类型已经是明确的</span>        <span class="token class-name">YourPC</span> yourPC <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">YourPC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Mouse</span> mouse <span class="token operator">=</span> yourPC<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Mouse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mouse<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例代码2</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 自定义一个比较器接口 * @param &lt;T> 泛型 */</span><span class="token keyword">interface</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 这是一个比较方法，实现类应该实现这个方法以达到比较的目的     *      * @param t 传入被比较的对象     * @return 负整数、零或正整数，根据此对象是小于、等于还是大于指定对象。     */</span>    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * 自定义父类，实现比较器接口 */</span><span class="token keyword">class</span> <span class="token class-name">Father</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Father</span><span class="token punctuation">></span></span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token comment">// Constrator、setters、getters</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">Father</span> f<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">-</span> f<span class="token punctuation">.</span>age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GenericityInterfaceDemo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Father</span> father1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Father</span><span class="token punctuation">(</span><span class="token string">"小明父亲"</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Father</span> father2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Father</span><span class="token punctuation">(</span><span class="token string">"小红父亲"</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>father1<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>father2<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"小红父亲年长："</span> <span class="token operator">+</span> father2<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"小明父亲年长："</span> <span class="token operator">+</span> father1<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>【注意】</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、接口中的成员变量不能使用泛型，因为static、final2、泛型接口的实现类可以指定泛型的类型，也可以不指定，如果在实现类中明确了数据类型，创建对象时就不需要再进行明确<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="泛型通配符"><a href="#泛型通配符" class="headerlink" title="泛型通配符"></a>泛型通配符</h3><blockquote><p>在泛型中，？ 表示未知类型，被称为通配符。通配符可以在各种情况下使用：可以作为形式参数、成员变量、局部变量的类型，也可以作为返回值类型。但是，通配符不能用于泛型方法调用、泛型类实例创建对象或者父类的类型实际参数</p></blockquote><p>表示全部类型，类似Object。区别于T，T只是占位符，而 ？是数据类型</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>【使用场景】</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、当一个方法可以用Object类提供的功能来实现时，泛型通配符是使用的2、若代码使用了泛型类中的方法，而这些方法又是不依赖于参数化类型的，可以使用泛型通配符<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Grade</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">T</span> t<span class="token punctuation">;</span>    <span class="token comment">// Constructor、setter and getter、toString</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"show"</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">School</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 这里使用泛型通配符，表示可以传入任意类型</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showGrade</span><span class="token punctuation">(</span><span class="token class-name">Grade</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> grade<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        grade<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GenericityWildCardDemo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">School</span> school <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">School</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        school<span class="token punctuation">.</span><span class="token function">showGrade</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Grade</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        school<span class="token punctuation">.</span><span class="token function">showGrade</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Grade</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Teacher</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Teacher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="泛型上限"><a href="#泛型上限" class="headerlink" title="泛型上限"></a>泛型上限</h4><p>表示以T为父类的所有子类（包括父类）</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">T</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="泛型下限"><a href="#泛型下限" class="headerlink" title="泛型下限"></a>泛型下限</h4><p>表示以E为子类的所有父类（包括子类）</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">E</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">School</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showGrade</span><span class="token punctuation">(</span><span class="token class-name">Grade</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> grade<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        grade<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 泛型上限，Person类本身及其子类都可以使用</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showExtends</span><span class="token punctuation">(</span><span class="token class-name">Grade</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span><span class="token punctuation">></span></span> grade<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 泛型下限，Person类本身及其父类都可以使用</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showSuper</span><span class="token punctuation">(</span><span class="token class-name">Grade</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">Person</span><span class="token punctuation">></span></span> grade<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GenericityWildCardDemo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">School</span> school <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">School</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        school<span class="token punctuation">.</span><span class="token function">showGrade</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Grade</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        school<span class="token punctuation">.</span><span class="token function">showGrade</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Grade</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Teacher</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Teacher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 泛型上限，可以声明子类的类型</span>        school<span class="token punctuation">.</span><span class="token function">showExtends</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Grade</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 泛型下限，可以声明父类的类型</span>        school<span class="token punctuation">.</span><span class="token function">showSuper</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Grade</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="泛型推断"><a href="#泛型推断" class="headerlink" title="泛型推断"></a>泛型推断</h3><blockquote><p>JDK1.7新特性，可以省略实例化对象时尖括号内的类型</p></blockquote><p>案例代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GenericityInferDemo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 泛型推断</span>        <span class="token class-name">Grade</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">></span></span> grade <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Grade</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 得到对应的类型</span>        <span class="token class-name">Student</span> student <span class="token operator">=</span> grade<span class="token punctuation">.</span><span class="token function">getT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>1、泛型就是泛化的类型，本质是参数化类型，是jdk1.5引入的新特性，用在类、接口和方法上，即泛型类，泛型接口和泛型方法</p><p>2、为了解决利用继承Object来实现通用性导致的强制类型转换和可能发生的类型转换异常的问题。</p><p>3、泛型的好处是确保了编译时期的类型安全，和避免了强制类型转换的麻烦</p><p>4、缺陷是因为泛型使用了类型擦除机制，jvm运行之前会将泛型信息擦除掉，这样做是为了兼容jdk1.5之前的代码，但是也会导致通过反射可以跳过泛型的问题，因为运行期间并没有泛型的限制</p><p>5、泛型通配符？代表任意类型，泛型上限&lt;? extends T&gt;，泛型下限&lt;? super T&gt;</p><p>6、jdk1.7新特性泛型推断，声明变量时定义过泛型得话，在实例化对象时可以省略类型，但是还要加&lt;&gt;，否则还是原类型</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java泛型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java代码块</title>
      <link href="posts/18904.html"/>
      <url>posts/18904.html</url>
      
        <content type="html"><![CDATA[<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>在 Java 中，使用{}括起来的代码被称为代码块，根据其位置和声明的不同，可以分为局部代码块，构造代码块，静态代码块，同步代码块(多线程)</p><h3 id="构造代码块"><a href="#构造代码块" class="headerlink" title="构造代码块"></a>构造代码块</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">格式：    <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、用于给对象初始化，多个构造方法中相同的代码存放到一起，每次调用构造方法都会执行，并且在构造方法前执行2、只有创建对象时调用，类不能调用3、构造代码块可以有多个，建议只写一个class Person &#123;    &#123;        System.out.println(&quot;Person构造代码块执行&quot;);    &#125;    public Person() &#123;        System.out.println(&quot;Person构造方法执行&quot;);    &#125;&#125;public class TestPerson &#123;    public static void main(String[] args) &#123;        System.out.println(&quot;main方法&quot;);        new Person();        new Person();    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="静态代码块"><a href="#静态代码块" class="headerlink" title="静态代码块"></a>静态代码块</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">格式：    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、用于给类进行初始化，在加载的时候就执行，并且只执行一次2、优先级高于主函数3、静态代码块可以有多个，顺序执行，建议只写一个class Person &#123;    static &#123;        System.out.println(&quot;Person静态代码块执行&quot;);    &#125;    public Person() &#123;        System.out.println(&quot;Person构造方法执行&quot;);    &#125;&#125;public class TestPerson &#123;    static &#123;        System.out.println(&quot;静态代码块1执行&quot;);    &#125;    public static void main(String[] args) &#123;        System.out.println(&quot;main方法&quot;);        new Person();        new Person();    &#125;    static &#123;        System.out.println(&quot;静态代码块2执行&quot;);    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">静态代码块1执行静态代码块2执行main方法Person静态代码块执行Person构造方法执行Person构造方法执行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="代码块相关执行顺序"><a href="#代码块相关执行顺序" class="headerlink" title="代码块相关执行顺序"></a>代码块相关执行顺序</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Father</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">Father</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"父类构造方法执行~~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"父类构造代码块执行~~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"父类静态代码块执行~~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"父类静态成员方法执行~~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Son</span> <span class="token keyword">extends</span> <span class="token class-name">Father</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"子类构造方法执行~~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"子类构造代码块执行~~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"子类静态代码块执行~~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"子类静态成员方法执行~~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"main方法执行~~~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">父类静态代码块执行~~~子类静态代码块执行~~~main方法执行~~~父类构造代码块执行~~~父类构造方法执行~~~子类构造代码块执行~~~子类构造方法执行~~~<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h3><p>执行顺序</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token class-name">Test</span> test1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token class-name">Test</span> test2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"静态代码块"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"构造代码块"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"main方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">构造代码块构造方法构造代码块构造方法静态代码块main方法构造代码块构造方法<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>1、构造代码块用于给对象初始化，每次创建对象都会调用构造代码块，并且执行顺序在构造方法之前</p><p>2、静态代码块用于给类初始化，当类被加载的时候就会调用静态代码块（只执行一次），执行顺序在main方法之前</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java代码块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java常用API</title>
      <link href="posts/32274.html"/>
      <url>posts/32274.html</url>
      
        <content type="html"><![CDATA[<h2 id="API概述"><a href="#API概述" class="headerlink" title="API概述"></a>API概述</h2><blockquote><p>API(Application Programming Interface) 应用程序编程接口</p></blockquote><p>编写一个机器人程序去控制机器人踢足球，程序就需要向机器人发出向前跑、向后跑、射门、抢球等各种命令，没有编过程序的人很难想象这样的程序如何编写。但是对于有经验的开发人员来说，知道机器人厂商一定会提供一些用于控制机器人的Java类，这些类中定义好了操作机器人各种动作的方法。其实，这些Java类就是机器人厂商提供给应用程序编程的接口，大家把这些类称为Xxx Robot API。本章涉及的Java API指的就是JDK中提供的各种功能的Java类。</p><h2 id="学习汉语和学习编程的异同点"><a href="#学习汉语和学习编程的异同点" class="headerlink" title="学习汉语和学习编程的异同点"></a>学习汉语和学习编程的异同点</h2><p>相同点</p><ul><li>基本语法</li><li>大量成语</li><li>写文章的手法和技巧</li></ul><p>不同点</p><ul><li>学习汉语 必须先学后用</li><li>学习编程 可以现用现学</li></ul><h2 id="Object-类"><a href="#Object-类" class="headerlink" title="Object 类"></a>Object 类</h2><p>Object类是类层次结构的根类，所有类都直接或者间接的继承自该类</p><h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>【注意】Object 只有一个无参构造方法</p><h3 id="toString-NaN"><a href="#toString-NaN" class="headerlink" title="toString()"></a>toString()</h3><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><p>用来返回对象的字符串表示形式</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>返回值为：包名.类名@当前对象在内存空间中的首地址</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'@'</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="重写toString"><a href="#重写toString" class="headerlink" title="重写toString()"></a>重写toString()</h4><p>由于默认情况下的数据对我们来说没有意义，一般会重写该方法用以展示对象的字段信息</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token comment">// 重写 toString 方法</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"Student [name="</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestStudent</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Student <span class="token punctuation">[</span>name<span class="token operator">=</span>Buffer, <span class="token assign-left variable">age</span><span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><blockquote><p>toString方法用来展示一些对象的基本信息：完整的包名.类名@堆内存地址，通常我们用快捷键来重写这个方法来获取我们需要的数据信息</p></blockquote><h3 id="equals"><a href="#equals" class="headerlink" title="equals()"></a>equals()</h3><h4 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h4><p>用来比较两个对象的地址是否相同</p><pre class="line-numbers language-none"><code class="language-none">public boolean equals(Object obj) &#123;        return (this &#x3D;&#x3D; obj);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果调用此方法的对象与 obj 的地址相同(即为同一个对象)，返回true，否则返回false</p><h4 id="重写equals-思路"><a href="#重写equals-思路" class="headerlink" title="重写equals()思路"></a>重写equals()思路</h4><p>一般需要重写 equals() 方法用以判断两个对象的字段是否相同</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token number">1</span>、判断两个对象的地址是否相同<span class="token number">2</span>、判断两个对象的类型是否一致<span class="token number">3</span>、判断两个对象所存储的数据是否相同<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="重写equals"><a href="#重写equals" class="headerlink" title="重写equals()"></a>重写equals()</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token comment">// 重写 equals 方法</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 判断是否是同一个对象(地址相同)，如果是返回 true</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 判断数据类型是否一致，如果不一致返回 false</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">Student</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 强制类型转换为当前类对象</span>        <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">)</span> obj<span class="token punctuation">;</span>        <span class="token comment">// 所有字段全部满足时返回 true ，否则返回false</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">==</span> student<span class="token punctuation">.</span>age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestStudent</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Student</span> student1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Student</span> student2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Banlance"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Student</span> student3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>student2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>student3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token boolean">false</span><span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>【注意】基本数据类型不能使用 equals() 方法</p><h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><blockquote><p>1、equals方法用来判断两个对象是否相同，默认比较的是两个对象的内存首地址。我们可以通过重写equals方法实现对两个对象的比较</p><p>2、注意equals方法的调用者，不同的调用者调用方法是不一样的</p></blockquote><h3 id="hashCode"><a href="#hashCode" class="headerlink" title="hashCode()"></a>hashCode()</h3><h4 id="作用-2"><a href="#作用-2" class="headerlink" title="作用"></a>作用</h4><p>返回对象的哈希码值，<strong>具有唯一指向性</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="重写hashCode"><a href="#重写hashCode" class="headerlink" title="重写hashCode()"></a>重写hashCode()</h4><p>hashCode方法要求必须和 equals() 方法的结果是对应的，如果两个对象的 equals 的结果为 true ，那这两个对象的 hashCode 的值一定相同，所以<strong>只要重写了 equals 方法，就必须重写 hashCode 方法</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token comment">// 重写 equals 方法</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">Student</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">)</span> obj<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">==</span> student<span class="token punctuation">.</span>age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 重写 hashCode 方法</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 调用 Objects 工具类的 hash 方法，根据传入的参数生成一个指定的 hashCode 值</span>        <span class="token keyword">return</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestStudent</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Student</span> student1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Student</span> student2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Banlance"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Student</span> student3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Buffer"</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>student2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>student3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student1<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student2<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student3<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token boolean">false</span><span class="token boolean">true</span><span class="token number">1892650872</span><span class="token number">247063595</span><span class="token number">1892650872</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>student1 和 student3 的 equals 方法返回值是 true ，所以他们的 hashCode 值相同</p><h4 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h4><blockquote><p>1、hashCode()用来获取当前对象的哈希值，表示对象的唯一标识。如果重写equals()则必须重写hashCode()方法</p><p>2、equals相同hashCode一定相同，hashCode相同equals不一定相同</p></blockquote><h3 id="getClass"><a href="#getClass" class="headerlink" title="getClass()"></a>getClass()</h3><p>获取当前对象的 Class 对象（字节码对象），直接打印会显示包含完整的包名,类名的信息</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GetClassDemo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Cat</span> cat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cat<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="finalize"><a href="#finalize" class="headerlink" title="finalize()"></a>finalize()</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当垃圾回收器确定不存在对该对象的更多引用时，由对象的垃圾回收器调用此方法。</p><h3 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h3><blockquote><p>Object类是所有类的基类，提供了一个无参的构造方法和一些公共方法</p><p>通过重写toString方法来获取对象中的数据</p><p>通过重写equals方法和hashCode方法来判断两个对象是否相同，这两个方法必须同时重写</p><p>getClass用来获取Class对象</p><p>finalize方法用于垃圾回收，不可控</p></blockquote><h2 id="System-类"><a href="#System-类" class="headerlink" title="System 类"></a>System 类</h2><p><code>System</code> 类包含一些有用的类字段和方法。它不能被实例化。</p><p>在 <code>System</code> 类提供的设施中，有标准输入、标准输出和错误输出流；对外部定义的属性和环境变量的访问；加载文件和库的方法；还有快速复制数组的一部分的实用方法。</p><h3 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 标准输入流，常用于键盘录入</span><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">InputStream</span> in <span class="token operator">=</span> <span class="token keyword">null</span><span class="token comment">// 标准输出流，常用于打印信息</span><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">PrintStream</span> out <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token comment">// 标准错误输出流，常用于打印错误信息</span><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">PrintStream</span> err <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SystemFieldDemo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 通过Scanner测试标准输入</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> next <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 通过System.out.print测试标准输出流</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>        sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 通过System.err.print测试标准输出流</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"打印错误报告"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="构造方法-1"><a href="#构造方法-1" class="headerlink" title="构造方法"></a>构造方法</h3><p>构造方法私有化，无法创建对象</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** Don't let anyone instantiate this class */</span><span class="token keyword">private</span> <span class="token class-name">System</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="arraycopy"><a href="#arraycopy" class="headerlink" title="arraycopy()"></a>arraycopy()</h3><p>这个方法表示复制数组，从指定源数组中复制一个数组，复制从指定的位置开始，到目标数组的指定位置结束。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">arraycopy</span><span class="token punctuation">(</span><span class="token class-name">Object</span> src<span class="token punctuation">,</span>  <span class="token keyword">int</span>  srcPos<span class="token punctuation">,</span>                                        <span class="token class-name">Object</span> dest<span class="token punctuation">,</span> <span class="token keyword">int</span> destPos<span class="token punctuation">,</span>                                        <span class="token keyword">int</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>参数解释</p><blockquote><p>src - 源数组。<br>srcPos - 源数组中的起始位置。<br>dest - 目标数组。<br>destPos - 目标数据中的起始位置。<br>length - 要复制的数组元素的数量。</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArraycopyDemo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 创建一个长度为5的int类型数组arr</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// 为数组arr赋值</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 遍历数组arr</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建一个新的长度为5的int类型数组newArr</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newArr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// 调用System的arraycopy方法，分别传入对应的参数</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> newArr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 遍历newArr数组</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> newArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>newArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="currentTimeMillis"><a href="#currentTimeMillis" class="headerlink" title="currentTimeMillis()"></a>currentTimeMillis()</h3><p>返回以毫秒为单位的当前时间。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">long</span> <span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>【注意】</p><blockquote><p>1、这个方法的返回值是long类型</p><p>2、当前时间与协调世界时 1970 年 1 月 1 日午夜之间的时间差（以毫秒为单位测量）</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CurrentTimeMillsDemo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">long</span> currentTimeMillis <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"毫秒："</span> <span class="token operator">+</span> currentTimeMillis<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"年："</span> <span class="token operator">+</span> currentTimeMillis<span class="token operator">/</span><span class="token number">1000</span><span class="token operator">/</span><span class="token number">60</span><span class="token operator">/</span><span class="token number">60</span><span class="token operator">/</span><span class="token number">24</span><span class="token operator">/</span><span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">SimpleDateFormat</span> sdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> date <span class="token operator">=</span> sdf<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>currentTimeMillis<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2020-10-06 17:53:02</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="gc"><a href="#gc" class="headerlink" title="gc()"></a>gc()</h3><p>运行垃圾回收器。在此之前会调用Object的finalize()</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">gc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>System.gc()可用于垃圾回收。当使用System.gc()回收某个对象所占用的内存之前，通过要求程序调用适当的方法来清理资源。在没有明确指定资源清理的情况下，Java提高了默认机制来清理该对象的资源，就是调用Object类的finalize()方法。finalize()方法的作用是释放一个对象占用的内存空间时，会被JVM调用。而子类重写该方法，就可以清理对象占用的资源，该方法有没有链式调用，所以必须手动实现。</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token comment">// 构造方法，getter、setter方法、toString方法</span>    <span class="token comment">/*     * 通过重写finalize方法验证调用gc会执行此方法     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行finalize方法回收垃圾："</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GcDemo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">gc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>从程序的运行结果可以发现，执行System.gc()前，系统会自动调用finalize()方法清除对象占有的资源，通过super.finalize()方式可以实现从下到上的finalize()方法的调用，即先释放自己的资源，再去释放父类的资源。</p><p>但是，不要在程序中频繁的调用垃圾回收，因为每一次执行垃圾回收，jvm都会强制启动垃圾回收器运行，这会耗费更多的系统资源，会与正常的Java程序运行争抢资源，只有在执行大量的对象的释放，才调用垃圾回收最好</p></blockquote><h3 id="exit"><a href="#exit" class="headerlink" title="exit()"></a>exit()</h3><p>终止当前正在运行的 Java 虚拟机。参数用作状态码；根据惯例，非 0 的状态码表示异常终止。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token keyword">int</span> status<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExitDemo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"程序执行开始"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 执行此方法后关闭虚拟机，程序不会再向下执行</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"程序执行结束"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结-4"><a href="#总结-4" class="headerlink" title="总结"></a>总结</h3><blockquote><p>System类提供了一些和系统相关的类字段和方法，便于我们和底层进行交互。</p><p>比较常用的就是arraycopy()和currentTimeMills()，其他不需要关注</p></blockquote><h2 id="Scanner-类"><a href="#Scanner-类" class="headerlink" title="Scanner 类"></a>Scanner 类</h2><p>一个可以使用正则表达式来解析基本类型和字符串的简单文本扫描器。</p><h3 id="类声明"><a href="#类声明" class="headerlink" title="类声明"></a>类声明</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Scanner</span> <span class="token keyword">implements</span> <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">,</span> <span class="token class-name">Closeable</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>这里我们需要关注三个点：</p><p>1、final修饰，不能被继承</p><p>2、实现了 Iterator 接口(迭代器接口)，主要使用其中的 hasNext 方法和 next 方法</p><p>3、实现了 Closeable 接口，主要使用其中的 close 方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 用来判断是否还有下一个元素录入</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 用来接收录入的数据</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 用来关闭资源(输入流)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h3 id="构造方法-2"><a href="#构造方法-2" class="headerlink" title="构造方法"></a>构造方法</h3><p>从指定的扫描输入流构造一个 Scanner</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> source<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// java.util.Scanner.Scanner(InputStream source)</span>        <span class="token comment">// 使用构造方法，传入一个标准输入流，创建一个Scanner对象</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="next"><a href="#next" class="headerlink" title="next()"></a>next()</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 此方法用于接收从键盘录入的字符串</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 从键盘录入一个字符串</span>        <span class="token class-name">String</span> str <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="nextInt"><a href="#nextInt" class="headerlink" title="nextInt()"></a>nextInt()</h3><h4 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 此方法用于从键盘获取一个int类型的数据</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 从键盘录入一个字符串</span>        <span class="token keyword">int</span> num <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="方法的重载：nextInt-int-radix"><a href="#方法的重载：nextInt-int-radix" class="headerlink" title="方法的重载：nextInt(int radix)"></a>方法的重载：nextInt(int radix)</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 指定进制数从键盘录入一个int类型的数据</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token keyword">int</span> radix<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>int radix参数表示一个进制数，如果从键盘录入的数据超过了指定的进制数就会报错，默认是10</p></blockquote><p>案例代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo5</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/*         * 8表示接收8进制内的数，及0~7         *          * 从键盘录入的数据中不能出现8及其以上的数字，如果有会报错：         * InputMismatchException 输入类型不匹配异常         */</span>        <span class="token keyword">int</span> num <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="相关方法：用法类似，要求触类旁通"><a href="#相关方法：用法类似，要求触类旁通" class="headerlink" title="相关方法：用法类似，要求触类旁通"></a>相关方法：用法类似，要求触类旁通</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">byte</span> <span class="token function">nextByte</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">byte</span> <span class="token function">nextByte</span><span class="token punctuation">(</span><span class="token keyword">int</span> radix<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">short</span> <span class="token function">nextShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">nextLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">float</span> <span class="token function">nextFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">BigInteger</span> <span class="token function">nextBigInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="hasNextInt"><a href="#hasNextInt" class="headerlink" title="hasNextInt()"></a>hasNextInt()</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 如果此扫描器的输入中有另一个标记，则返回 true。在等待要扫描的输入时，此方法可能阻塞。扫描器将不执行任何输入。</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>此方法可用于合法性判断</p></blockquote><p>案例</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo2</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">hasNextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"输入的数据类型有误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其他相关方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNextBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNextByte</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNextShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNextLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNextFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="扩展：回车换行问题"><a href="#扩展：回车换行问题" class="headerlink" title="扩展：回车换行问题"></a>扩展：回车换行问题</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo3</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> num <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> str <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"str:"</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">"，num:"</span> <span class="token operator">+</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>当从键盘录入第一个数字后，敲下的回车键实际是两个字符：\r\n，所以键盘实际是录入了这两个字符并且结束，显示的效果和没有录入字符串相同</p><p>补充：</p><p>\r：回车，回到行首</p><p>\n：换行</p><p>电脑上的回车键(Enter键)实际上是回车式换行，会先执行回车，后执行换行</p></blockquote><p>扩展：多行录入</p><p>可以通过hasNext的重载方法来实现多行录入</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 如果从键盘录入指定的pattern标记，则返回true，否则返回false</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token class-name">String</span> pattern<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo4</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">StringBuffer</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 将#作为结束的标记，当遇到#时结束循环</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>sc<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token string">"#"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sb<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结-5"><a href="#总结-5" class="headerlink" title="总结"></a>总结</h3><blockquote><p>Scanner 通过标准输入流来从键盘输入，后期不会用到，目前常用的方法为nextXxx()和hasNextXxx()</p></blockquote><h2 id="Math类"><a href="#Math类" class="headerlink" title="Math类"></a>Math类</h2><p>Math 类包含用于执行基本数学运算的方法，如初等指数、对数、平方根和三角函数。</p><h3 id="成员变量-1"><a href="#成员变量-1" class="headerlink" title="成员变量"></a>成员变量</h3><blockquote><p>静态常量，全大写，通过类名调用</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 比任何其他值都更接近 e（即自然对数的底数）的 double 值</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">double</span> <span class="token class-name">E</span> <span class="token operator">=</span> <span class="token number">2.7182818284590452354</span><span class="token punctuation">;</span><span class="token comment">// 比任何其他值都更接近 pi（即圆的周长与直径之比）的 double 值</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">double</span> PI <span class="token operator">=</span> <span class="token number">3.14159265358979323846</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="构造方法-3"><a href="#构造方法-3" class="headerlink" title="构造方法"></a>构造方法</h3><blockquote><p>构造方法私有化，不能创建对象</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token class-name">Math</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="成员方法"><a href="#成员方法" class="headerlink" title="成员方法"></a>成员方法</h3><blockquote><p>所有方法全部都被 static 修饰，可以通过类名直接调用</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 获取绝对值</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token comment">// 对数据进行向上取整</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">ceil</span><span class="token punctuation">(</span><span class="token keyword">double</span> a<span class="token punctuation">)</span><span class="token comment">// 对数据进行向下取整</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">floor</span><span class="token punctuation">(</span><span class="token keyword">double</span> a<span class="token punctuation">)</span><span class="token comment">// 获取最大值</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token comment">// 获取最小值</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token comment">// 获取a的b次幂</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">pow</span><span class="token punctuation">(</span><span class="token keyword">double</span> a<span class="token punctuation">,</span><span class="token keyword">double</span> b<span class="token punctuation">)</span><span class="token comment">// 随机数，范围：[0.0, 1.0)，注意左闭右开，包含左边不包含右边，</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 四舍五入</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token keyword">float</span> a<span class="token punctuation">)</span><span class="token comment">// 获取正平方根</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">double</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token keyword">double</span> a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fc<span class="token punctuation">.</span>r<span class="token punctuation">.</span>math</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MathDemo1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 自然对数的底</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Math.E:"</span> <span class="token operator">+</span> <span class="token class-name">Math<span class="token punctuation">.</span>E</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// π</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Math.PI:"</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span>PI<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 绝对值</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"abs:"</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"abs:"</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 向上取整</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"ceil:"</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token number">12.34</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"ceil:"</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token number">12.56</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 向下取整</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"floor:"</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">12.34</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"floor:"</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">12.56</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 最大最小值</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"max:"</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">12.34</span><span class="token punctuation">,</span> <span class="token number">56.78</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"max:"</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">12.34</span><span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">56.78</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"min:"</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">12.34</span><span class="token punctuation">,</span> <span class="token number">56.78</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// a的b次方</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"pow:"</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 随机数1~10</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"random:"</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 四舍五入</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"round:"</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">12.34</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"round:"</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">12.56</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 获取正平方根</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"sqrt:"</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaAPI概述 </tag>
            
            <tag> Java常用API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>essay-life</title>
      <link href="posts/980.html"/>
      <url>posts/980.html</url>
      
        <content type="html"><![CDATA[<div class="ipage">    <div class="ititle">节选自《你若安好便是晴天》- 前言</div>    <div class="izhengwen">        <p>生活，有时感觉莫名的心烦。心烦的时候，最好的是沉默。</p>        <p>不必喝酒，出去走走，那小路和树林，那天空和海滩，那山风和淡云，就在身旁；</p>        <p>不必多怨，言多不逊，执一本书，在阳光下，微笑着面对一切，聆听一切；</p>        <p>不必伤怀，曲折有度，也许过了就算了，算了就消失了。</p>        <p>心烦，其实只是人的一种心情，看淡了，就习惯了。</p>        <p>生活，有时真的让人无语，令人心碎。</p>        <p>只是，既是自己选择的路，跪着也要走下去。</p>        <p>自己扛下的事，留着泪也要做好。</p>        <p>而有些情，舍不得也得放下，哪怕心再痛再苦。</p>        <p>其实，缘来缘去的个中滋味，只有岁月懂得，也只有自己深深懂得!</p>        <p>生活，有时候其实很简单。</p>        <p>生活，不过是一份发自内心的微笑；</p>        <p>是一种清淡如水的心态，对苦难，对幸福，对整个人生；</p>        <p>更是一本永远也读不完的书，有故事，有梦想，有难以言说的情怀。</p>        <p>倘若有天，在一个阳光温热的午后，树荫下，你会发现：净是如此美丽 !</p>        <p>亲爱的，很多时候不是生活抛弃了你，而是你抛弃了生活本身。</p>    </div></div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 请相信生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java面向对象</title>
      <link href="posts/28848.html"/>
      <url>posts/28848.html</url>
      
        <content type="html"><![CDATA[<h1 id="Java面向对象"><a href="#Java面向对象" class="headerlink" title="Java面向对象"></a>Java面向对象</h1><h2 id="面向对象概念"><a href="#面向对象概念" class="headerlink" title="面向对象概念"></a>面向对象概念</h2><h3 id="什么是Object对象对象"><a href="#什么是Object对象对象" class="headerlink" title="什么是Object对象对象"></a>什么是Object对象对象</h3><p>相当于中文语义”东西”。Object是指一个具体事物实例，比如飞机、狗、运气、哲学等等看得见的，看不见的，有形的，无形的，具体的，抽象的都是对象，总之“一切皆object”。</p><h3 id="面向对象ObjectOrientedObjectOriented"><a href="#面向对象ObjectOrientedObjectOriented" class="headerlink" title="面向对象ObjectOrientedObjectOriented"></a>面向对象ObjectOrientedObjectOriented</h3><p>面向对象是指面向客观事物之间的关系。人类日常的思维方式是面向对象的，自然界事物之间的关系是对象与对象之间的关系。</p><p><strong>优点</strong></p><ul><li>直观，高效，与人类的思维习惯一致</li><li>信息隐藏，提高了程序的可维护性和安全性</li><li>提高了程序的可重用性</li></ul><h3 id="面向对象定义"><a href="#面向对象定义" class="headerlink" title="面向对象定义"></a>面向对象定义</h3><p>首先根据客户需求抽象出业务对象；</p><p>然后对需求进行合理分层，构建相对独立的业务模块；</p><p>之后设计业务逻辑，利用多态、继承、封装、抽象的编程思想，实现业务需求</p><p>最后通过整合各模块，达到高类聚、低耦合的效果，从而满足客户要求</p><h3 id="面向对象分析OOAOOA-面向对象设计OODOOD"><a href="#面向对象分析OOAOOA-面向对象设计OODOOD" class="headerlink" title="面向对象分析OOAOOA/面向对象设计OODOOD"></a>面向对象分析OOAOOA/面向对象设计OODOOD</h3><p>OOADObjectOrientAnalysisDesign面向对象分析和设计，面向对象分析不设计ObjectOrientAnalysisDesign面向对象分析和设计，面向对象分析不设计是现在软件企业广为采用的一项有效技术。OOAD方法要求在设计中要映射现实世界中指定问题域中的对象和实体，例如：顾客、汽车和销售人员等。这就需要设计要尽可能低接近现实世界，即以最自然的方式表述实体。</p><blockquote><p><strong>优点：</strong>为能够构建与现实世界相对应的问题模型，并保持他们的结构、关系和行为模式</p></blockquote><h3 id="面向对象概念-1"><a href="#面向对象概念-1" class="headerlink" title="面向对象概念"></a>面向对象概念</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token number">1</span>、类型<span class="token punctuation">(</span>类<span class="token punctuation">)</span>指一个名词概念，如：客人、菜品、厨师<span class="token number">2</span>、引用<span class="token punctuation">(</span>变量<span class="token punctuation">)</span>指引用具体概念实例的代词，如：某人、特价菜<span class="token number">3</span>、对象<span class="token punctuation">(</span>东西<span class="token punctuation">)</span>指具体概念的个体实例，如：张三丰是个人、一盘大盘鸡    如上三者关系之间的关系可以体现为：“今天的特价菜是一盘大盘鸡”<span class="token number">4</span>、行为<span class="token punctuation">(</span>方法<span class="token punctuation">)</span><span class="token number">5</span>、多态 行为或引用，在具体情形下会发生变化的现象。    如：“一只动物”可以是“一匹马”、“一头驴”、“一只猴子”，多态的<span class="token number">6</span>、封装 任何对象实例都是尽可能封装，减少暴露，它的实现细节对你是透明的<span class="token punctuation">(</span>看不到的<span class="token punctuation">)</span>。比如：只能看到汽车的壳子、轮胎等，看不到发动机<span class="token number">7</span>、继承 概念的继承关系<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="面向对象思想"><a href="#面向对象思想" class="headerlink" title="面向对象思想"></a>面向对象思想</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token number">1</span>、面向对象是基于面向过程的编程思想<span class="token number">2</span>、万物皆对象<span class="token number">3</span>、对象具有唯一性<span class="token number">4</span>、任何对象都具有一定的特征和行为；特征是事物的基本描述，行为是事物的功能<span class="token number">5</span>、类是一组相关的属性和方法的集合，是一个抽象的概念<span class="token number">6</span>、对象是类的具体存在<span class="token number">7</span>、在一组相同或相似的对象中，抽取出共性的特征和行为，保留所关注的部分就是类的抽取<span class="token number">8</span>、类是模板、图纸，通过类创造的对象就是实体<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="面向对象特征"><a href="#面向对象特征" class="headerlink" title="面向对象特征"></a>面向对象特征</h2><p>面向对象的编程语言有封装、继承、抽象、多态等四个主要的特征</p><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><p>是指隐藏对象的属性和实现细节，仅对外提供公共访问方式。核心是归纳总结</p><p>封装是保证软件部件具有优良的模块性的基础。</p><p>封装的目标：实现软件部件的“高内聚、低耦合”，防止程序相互依赖性而带来的变动影响。</p><p>面向对象的封装就是把描述一个对象的属性和行为的代码封装在一个“模块”中，也就是一个类中，属性用变量定义，行为用方法进行定义，方法可以直接访问同一个对象中的属性。通常情况下，只要记住让变量和访问这个变量的方法放在一起，将一个类中的成员变量全部定义成私有的，只有这个类自己的方法可以访问到这些成员的变量，这就基本实现了对象的封装，就很容易找到分配到这些类的方法了，就基本上算是会面向对象的编程了。</p><blockquote><p>把对同一事物进行操作的方法和相关的方法放在同一个类中，把方法和它操作的数据放在同一个类中。</p></blockquote><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><blockquote><p>提高代码的复用度、安全性，不必关心具体细节，便于开发</p></blockquote><h4 id="JavaBean-规范化封装"><a href="#JavaBean-规范化封装" class="headerlink" title="JavaBean 规范化封装"></a>JavaBean 规范化封装</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token number">1</span>. 要求Java中的所有实体类成员变量全部私有化，最少提供一个无参数构造方法，对应成员变量实现setter和getter方法<span class="token number">2</span>. JavaBean规范，是为了后期开发汇总更好的代码适配度，提高代码运行的统一性，能够满足框架的使用<span class="token number">3</span>. JavaBean规范只是一个规范，而且是作为一个基础规范，操作都是可以使用快捷键来完成的！！！class Person <span class="token punctuation">&#123;</span>    private String name<span class="token punctuation">;</span>    private int age<span class="token punctuation">;</span>    private char sex<span class="token punctuation">;</span>    private boolean alive<span class="token punctuation">;</span>    public <span class="token function-name function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    public String <span class="token function-name function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token builtin class-name">return</span> this.name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    public int <span class="token function-name function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token builtin class-name">return</span> this.age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    public char <span class="token function-name function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token builtin class-name">return</span> this.sex<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    public boolean <span class="token function-name function">isAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token builtin class-name">return</span> alive<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    public void setAlive<span class="token punctuation">(</span>boolean alive<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        this.alive <span class="token operator">=</span> alive<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    public void setName<span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        this.name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    public void setAge<span class="token punctuation">(</span>int age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        this.age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    public void setSex<span class="token punctuation">(</span>char sex<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        this.sex <span class="token operator">=</span> sex<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>把多个类中相同的成员给提取出来定义到一个独立的类中。然后让这多个类和该独立的类产生一个关系，这多个类就具备了这些内容。这个关系叫继承。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">关键字：<span class="token keyword">extends</span>格式<span class="token operator">:</span>    <span class="token keyword">class</span> <span class="token class-name">Son</span> <span class="token keyword">extends</span> <span class="token class-name">Father</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token comment">//一个孩子只能有一个父亲</span><span class="token comment">//一个父亲可以有多个孩子</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h4><blockquote><ol><li>Java为单继承，一个类只能有一个直接父类，但可以多级继承，属性和方法逐级叠加</li><li>构造方法只可服务于本类，不可继承，子类执行构造方法前会默认调用父类的无参构造方法。可以通过super去访问父类的构造方法</li><li>private 修饰的属性和方法不能被继承</li></ol></blockquote><h4 id="extends"><a href="#extends" class="headerlink" title="extends"></a>extends</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 创建一个父类对象</span>        <span class="token class-name">Father</span> father <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Father</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 父类调用父类的属性和方法</span>        father<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"父"</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>father<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        father<span class="token punctuation">.</span><span class="token function">game</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建一歌子类对象</span>        <span class="token class-name">Son</span> son <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 子类调用子类的属性和方法</span>        son<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>son<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>        son<span class="token punctuation">.</span><span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 子类调用父类的属性和方法(public修饰)</span>        son<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"子"</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>son<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        son<span class="token punctuation">.</span><span class="token function">game</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/*         * 子类调用父类private修饰的属性和方法         *          * 报错         * The field Father.suffer is not visible         * The method cook() from the type Father is not visible         *          * 由此可知子类不能调用父类私有化的属性和方法         */</span><span class="token comment">//        son.suffer = 10;</span><span class="token comment">//        son.cook();</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Father</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> suffer<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">game</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"下棋"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">cook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"做饭"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Son</span> <span class="token keyword">extends</span> <span class="token class-name">Father</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"子类 -- 学习"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><blockquote><ol><li>提高了代码的复用性</li><li>提高了代码的维护性</li><li>让类与类之间产生了一个关系，是多态的前提</li></ol></blockquote><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><blockquote><ol><li>让类的耦合性增强。这样某个类的改变，就会影响到其他和该类相关的类</li><li>打破了封装性</li></ol></blockquote><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><blockquote><ol><li>Java中只有单继承</li><li>子类可以继承父类的非私有属性和方法（非private修饰的）</li><li>执行子类的构造方法前会默认执行父类的无参构造方法</li></ol></blockquote><h3 id="抽象"><a href="#抽象" class="headerlink" title="抽象"></a>抽象</h3><p>不能实例化的类就是抽象类，用 abstract 修饰</p><h5 id="构成"><a href="#构成" class="headerlink" title="构成"></a>构成</h5><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">abstract</span> <span class="token keyword">class</span> 类名 <span class="token punctuation">&#123;</span>    成员变量    构造方法    成员方法        非抽象方法        抽象方法<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h5><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token number">1</span>、抽象类和抽象方法必须用关键字 abstract 修饰<span class="token number">2</span>、抽象类中不一定有抽象方法，但是有抽象方法的类一定是抽象类<span class="token number">3</span>、abstract 修饰的方法没有方法体，且子类必须重写<span class="token number">4</span>、抽象类不能实例化，因为 abstract 类中有 abstract 方法<span class="token number">5</span>、抽象类的子类        也可以是一个抽象类，可以重写也可以不重写父类的抽象方法。        可以是一个具体类。这个类必须重写抽象类中的所有抽象方法。<span class="token punctuation">(</span>可以实例化<span class="token punctuation">)</span>public class TestSon <span class="token punctuation">&#123;</span>    public static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        Son son <span class="token operator">=</span> new Son<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        son.play<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>// 抽象类abstract class Father <span class="token punctuation">&#123;</span>    String name<span class="token punctuation">;</span>    int age<span class="token punctuation">;</span>    public <span class="token function-name function">Father</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    public void <span class="token function-name function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        System.out.println<span class="token punctuation">(</span><span class="token string">"吃饭"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    // 抽象方法    abstract public void play<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>class Son extends Father <span class="token punctuation">&#123;</span>    // 抽象方法的重写    @Override    public void <span class="token function-name function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        System.out.println<span class="token punctuation">(</span><span class="token string">"玩游戏"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><p><strong>二者具有直接或间接的继承关系时，父类引用指向子类对象，从而产生多种形态；接口的引用指向实现接口的类对象也是多态</strong></p><h4 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h4><p>多态场景下，父类引用调用方法，如果被子类重写过，优先执行子类重写过后的方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> testCar<span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 父类引用指向子类对象</span>        <span class="token class-name">Vehicle</span> vehicle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 优先执行子类重写过的方法</span>        vehicle<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// Car run！！！</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Vehicle</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Vehicle run！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token keyword">extends</span> <span class="token class-name">Vehicle</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Car run！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="应用场景一"><a href="#应用场景一" class="headerlink" title="应用场景一"></a>应用场景一</h4><p>使用父类作为方法形参实现多态，使方法参数的类型更为宽泛</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestCar</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Vehicle</span> vehicle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        vehicle<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">"小汽车"</span><span class="token punctuation">;</span>        <span class="token class-name">Bike</span> bike <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bike</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        bike<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">"自行车"</span><span class="token punctuation">;</span>        <span class="token class-name">Bus</span> bus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        bus<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">"公交车"</span><span class="token punctuation">;</span>        <span class="token class-name">Employee</span> employee <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token string">"你的迪丽热巴"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        employee<span class="token punctuation">.</span><span class="token function">goHome</span><span class="token punctuation">(</span>vehicle<span class="token punctuation">)</span><span class="token punctuation">;</span>        employee<span class="token punctuation">.</span><span class="token function">goHome</span><span class="token punctuation">(</span>bus<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Employee</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">goHome</span><span class="token punctuation">(</span><span class="token class-name">Vehicle</span> vehicle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"乘坐"</span> <span class="token operator">+</span> vehicle<span class="token punctuation">.</span>type <span class="token operator">+</span> <span class="token string">"交通工具回家"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Vehicle</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> type<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Vehicle run！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Bus</span> <span class="token keyword">extends</span> <span class="token class-name">Vehicle</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Bus run！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token keyword">extends</span> <span class="token class-name">Vehicle</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Car run！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Bike</span> <span class="token keyword">extends</span> <span class="token class-name">Vehicle</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Bike run！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="应用场景二"><a href="#应用场景二" class="headerlink" title="应用场景二"></a>应用场景二</h4><p>使用父类作为方法返回值实现多态，使方法可以返回不同子类对象</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">Vehicle</span> <span class="token function">buyVehicle</span><span class="token punctuation">(</span><span class="token keyword">int</span> money<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Vehicle</span> vehicle <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>money <span class="token operator">>=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Bus</span> bus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            bus<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>            bus<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">1230000.0</span><span class="token punctuation">;</span>            bus<span class="token punctuation">.</span>seatNum <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>            bus<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">"公交车"</span><span class="token punctuation">;</span>            vehicle <span class="token operator">=</span> bus<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>money <span class="token operator">>=</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Car</span> car <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            car<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">310000.0</span><span class="token punctuation">;</span>            car<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token number">90</span><span class="token punctuation">;</span>            car<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">"小汽车"</span><span class="token punctuation">;</span>            car<span class="token punctuation">.</span>brand <span class="token operator">=</span> <span class="token string">"BMW"</span><span class="token punctuation">;</span>            vehicle <span class="token operator">=</span> car<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>money <span class="token operator">>=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Bike</span> bike <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bike</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            bike<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">"捷安特自行车"</span><span class="token punctuation">;</span>            bike<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span>            bike<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">2000.0</span><span class="token punctuation">;</span>            bike<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">"红色"</span><span class="token punctuation">;</span>            vehicle <span class="token operator">=</span> bike<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> vehicle<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="向上装箱与向下拆箱"><a href="#向上装箱与向下拆箱" class="headerlink" title="向上装箱与向下拆箱"></a>向上装箱与向下拆箱</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Animal</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Fish</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">showAnimal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// code.polymorphic.animal.Animal@7852e922</span>        <span class="token comment">// 向上转型</span>        <span class="token function">showAnimal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// code.polymorphic.animal.Cat@4e25154f</span>        <span class="token comment">// 向上转型</span>        <span class="token function">showAnimal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// code.polymorphic.animal.Dog@70dea4e</span>        <span class="token comment">// 向上转型</span>        <span class="token function">showAnimal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Fish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// code.polymorphic.animal.Fish@5c647e05</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"----------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Animal</span> animal <span class="token operator">=</span> <span class="token function">getAnimal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 向下转型</span>        <span class="token class-name">Cat</span> cat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Cat</span><span class="token punctuation">)</span> <span class="token function">getCat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 向下转型</span>        <span class="token class-name">Dog</span> dog <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Dog</span><span class="token punctuation">)</span> <span class="token function">getDog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 向下转型</span>        <span class="token class-name">Fish</span> fish <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Fish</span><span class="token punctuation">)</span> <span class="token function">getFish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// code.polymorphic.animal.Animal@33909752</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cat<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// code.polymorphic.animal.Cat@55f96302</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dog<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// code.polymorphic.animal.Dog@3d4eac69</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fish<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// code.polymorphic.animal.Fish@42a57993</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 展示动物     * @param animal     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">showAnimal</span><span class="token punctuation">(</span><span class="token class-name">Animal</span> animal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 得到动物     * @return 返回一个Animal对象     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Animal</span> <span class="token function">getAnimal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 得到猫     * @return 返回一个Cat对象     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Animal</span> <span class="token function">getCat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 得到狗     * @return 返回一个Dog对象     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Animal</span> <span class="token function">getDog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 得到鱼     * @return 返回一个Fish对象     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Animal</span> <span class="token function">getFish</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Fish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="instanceof-关键字"><a href="#instanceof-关键字" class="headerlink" title="instanceof 关键字"></a>instanceof 关键字</h4><p>用于判断当前对象是否是某个类，或者其子类、实现类的实例。如果是返回true，否则返回false。</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;** * 动物类 *&#x2F;class Animal &#123;&#125;&#x2F;** * 老虎类 *&#x2F;class Tiger extends Animal &#123;&#125;&#x2F;** * 熊猫类 *&#x2F;class Panda extends Animal &#123;&#125;&#x2F;** * 猴子类 *&#x2F;class Monkey extends Animal &#123;&#125;public class AnimalDemo &#123;    public static void main(String[] args) &#123;        Animal ani &#x3D; getAnimal();        if (ani instanceof Panda) &#123;            &#x2F;&#x2F; ani一定是panda对象或子类对象            Panda panda2 &#x3D; (Panda) ani;            System.out.println(&quot;这是熊猫：&quot; + panda2);            showPanda(panda2);        &#125; else &#123;            System.out.println(&quot;这是动物：&quot; + ani);        &#125;    &#125;    &#x2F;&#x2F; 获取动物，返回一个Panda对象    public static Animal getAnimal() &#123;        return new Panda();    &#125;    &#x2F;&#x2F; 展示熊猫对象    public static void showPanda(Panda panda) &#123;        System.out.println(panda);    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>【注意】<strong>使用 instanceof 关键字做判断时， instanceof 操作符的左操作数必须和右操作数存在继承或实现关系</strong></p><h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><blockquote><ol><li>父类引用指向子类对象，接口引用指向实现类对象</li><li>instanceof用以比较对象是否是类或父类的实例，接口的实现类</li></ol></blockquote><h2 id="访问权限权限修饰符"><a href="#访问权限权限修饰符" class="headerlink" title="访问权限权限修饰符"></a>访问权限权限修饰符</h2><h3 id="Java中的访问修饰符"><a href="#Java中的访问修饰符" class="headerlink" title="Java中的访问修饰符"></a>Java中的访问修饰符</h3><table><thead><tr><th></th><th>类内部</th><th>同包下</th><th>子类中</th><th>非同包</th></tr></thead><tbody><tr><td>public</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>protected</td><td>√</td><td>√</td><td>√</td><td>×</td></tr><tr><td>默认不写</td><td>√</td><td>√</td><td>×</td><td>×</td></tr><tr><td>private</td><td>√</td><td>×</td><td>×</td><td>×</td></tr></tbody></table><h3 id="public公共的公共的关键字"><a href="#public公共的公共的关键字" class="headerlink" title="public公共的公共的关键字"></a>public公共的公共的关键字</h3><h3 id="protected受保护的受保护的关键字"><a href="#protected受保护的受保护的关键字" class="headerlink" title="protected受保护的受保护的关键字"></a>protected受保护的受保护的关键字</h3><h3 id="private私有的私有的关键字"><a href="#private私有的私有的关键字" class="headerlink" title="private私有的私有的关键字"></a>private私有的私有的关键字</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token number">1</span>、可以修饰成员变量和成员方法<span class="token number">2</span>、被<span class="token keyword">private</span>修饰的变量和方法仅本类中可用<span class="token number">3</span>、被<span class="token keyword">private</span>修饰的变量需要提供get、set方法供类外调用使用    <span class="token number">4</span>、<span class="token keyword">boolean</span>类型的 get 方法比较特殊：    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在使用Eclipse写Java程序同时按住shift+Alt+s选择“Generate Getters and Setters”可以自动写出set、get的方法</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"method be execute!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">executeFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h3><blockquote><ol><li>般我们最常用的就是private和public，建议任何情况下都使用访问修饰符对变量和方法进行限制</li><li>public权限最高，整个项目中都可以访问（同一个项目），private权限最小，只能在本类中使用</li><li>被private修饰的变量和方法可以通过提供公共的方法对其进行访问</li></ol></blockquote><h2 id="匿名对象"><a href="#匿名对象" class="headerlink" title="匿名对象"></a>匿名对象</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><p>没有名字的对象，是对象的一种简化表示形式</p><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><p>一次性，每次使用都是一个新的对象</p><h3 id="使用情景"><a href="#使用情景" class="headerlink" title="使用情景"></a>使用情景</h3><blockquote><p>1、对象调用方法仅使用一次，然后等待销毁</p><p>2、作为实际参数传递</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDog</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 对象调用方法仅使用一次</span>        <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 作为实际参数传递</span>        <span class="token function">useDog</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">useDog</span><span class="token punctuation">(</span><span class="token class-name">Dog</span> dog<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        dog<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"小狗睡觉....."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h3><p>提高开发效率，简化代码结构</p><h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><p>类是对某一类事物的描述，是抽象的、概念上的定义。<strong>类是模板，包含了一类事物所共有的特征属性属性和行为方法方法</strong></p><blockquote><p>属性描述：学号、姓名、性别、年龄、身高、体重、地址、电话、微信、QQ…</p><p>行为描述：吃饭、睡觉、上班、学习、娱乐…</p></blockquote><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p><strong>对象是类的具体体现（<a href="http://localhost:63342/ialoe.github.io-master/posts/36.html?_ijt=4djrf4sgdibf0v57aogg3jvm4k">属性和方法</a>），是具体的、独一无二的个体。</strong></p><p>以班长为例：</p><blockquote><p>属性描述：班长的学号、班长的姓名、班长的身高…</p><p>行为描述：班长吃饭、班长睡觉、班长学习…</p></blockquote><h3 id="类和对象的关系"><a href="#类和对象的关系" class="headerlink" title="类和对象的关系"></a>类和对象的关系</h3><p>类是对象的抽象，对象是类的具体实现</p><h3 id="类的定义"><a href="#类的定义" class="headerlink" title="类的定义"></a>类的定义</h3><p>类是一种自定义的数据类型</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">格式：    <span class="token keyword">class</span> 类名 <span class="token punctuation">&#123;</span>        成员变量<span class="token punctuation">;</span><span class="token comment">// Fieldi</span>        成员方法<span class="token punctuation">;</span><span class="token comment">// Method</span>    <span class="token punctuation">&#125;</span><span class="token keyword">class</span>：    定义类的关键字类名：    大驼峰命名，首字母大写，见名知意    类名就是一种数据类型（自定义引用的数据类型），就是模板的名字成员变量（属性<span class="token operator">/</span>特征描述）：    定义在类中，方法外的变量，用来描述类的特征成员方法（行为描述）：    定义在类中，用来描述类的功能<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h3><blockquote><p>Java中的类和对象</p><ul><li>类是对象的抽象，具有公共的特征和行为，对象是类的具体实现，具有唯一的特征和行为</li></ul><p>基础数据类型与类和对象</p><ul><li>类就是一种自定义的数据类型，由类名，属性和方法构成</li><li>对象就是一种数据类型的数据，由对象名，属性和方法构成</li></ul><p>类和对象的定义和使用</p><ul><li>格式和规范，一定要按照标准</li></ul><p><strong>注意</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">大写开头的都是类小写开头的都是变量带<span class="token punctuation">(</span><span class="token punctuation">)</span>的都是方法<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java面向对象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java方法</title>
      <link href="posts/16735.html"/>
      <url>posts/16735.html</url>
      
        <content type="html"><![CDATA[<h1 id="Java方法"><a href="#Java方法" class="headerlink" title="Java方法"></a>Java方法</h1><h2 id="为什么要使用方法"><a href="#为什么要使用方法" class="headerlink" title="为什么要使用方法"></a>为什么要使用方法</h2><h3 id="生活中的方法（工具）"><a href="#生活中的方法（工具）" class="headerlink" title="生活中的方法（工具）"></a>生活中的方法（工具）</h3><p>螺丝刀，锤子，扳手</p><blockquote><p>1、提高复用度，可重复使用</p><p>2、提高效率</p></blockquote><p>开发中使用方法来实现同样的效果，为了解决复用和效率的问题</p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>实现特定功能的一段代码，可以被反复使用</p><h2 id="方法的构成"><a href="#方法的构成" class="headerlink" title="方法的构成"></a>方法的构成</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">固定格式：    public static返回值类型：    表示方法执行完成后返回的数据类型    如果没有返回值类型就用 void ，如果有就使用对应的返回值类型方法名：    小驼峰命名，见名知意，动宾结构形参列表：    用来接收用户传入的数据，可以是基本数据类型或者引用数据类型，需要声明局部变量。    如果不需要形参就写 ()，如果有多个就写多个方法体：    &#123;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：</p><blockquote><ol><li>固定的格式（public static）不要问，因为不影响我们写代码，后期会讲！！！</li><li>方法要写上文档注释，为了更方便地阅读代码</li></ol></blockquote></blockquote><h2 id="方法声明格式"><a href="#方法声明格式" class="headerlink" title="方法声明格式"></a>方法声明格式</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> returnType <span class="token function">methodName</span><span class="token punctuation">(</span>dataType <span class="token class-name">FormerParameter</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    method body<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">static</span> 返回值类型 方法名<span class="token punctuation">(</span>数据类型 形参名<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    方法体<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="声明位置"><a href="#声明位置" class="headerlink" title="声明位置"></a>声明位置</h2><p>定义在类中，与其他方法（main方法）并列</p><h2 id="无返回值方法调用"><a href="#无返回值方法调用" class="headerlink" title="无返回值方法调用"></a>无返回值方法调用</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">mothodName</span><span class="token punctuation">(</span>actualParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>方法名<span class="token punctuation">(</span>实参<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>注意：</p><blockquote><p>方法和变量最大的区别就是方法后面有小括号，即便没有参数也有小括号</p><p>小驼峰</p></blockquote></blockquote><h3 id="无参无返回值调用"><a href="#无参无返回值调用" class="headerlink" title="无参无返回值调用"></a>无参无返回值调用</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">TestMethod1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">printHelloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**    * 打印Hello World    */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printHelloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意</p><ol><li>main方法是程序的入口，所有的代码和方法都需要在main方法中被完成和调用</li><li>方法名的后面一定要跟 </li><li>方法和其他方法的关系是并列关系</li></ol></blockquote><h3 id="有参无返回值调用"><a href="#有参无返回值调用" class="headerlink" title="有参无返回值调用"></a>有参无返回值调用</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">TestMethod3</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入一个数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> num <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printIntNum</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**    * 展示用户传入的int类型数据    *    * @param num 这里需要传入一个int类型的数据    */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printIntNum</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"您输入的数为："</span> <span class="token operator">+</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：</p><ol><li>如果方法声明时带有形式参数，那么方法调用时就必须携带实际参数1</li><li>如果方法声明时没有形式参数，方法调用时就不能有实参</li><li>声明时有几个形式参数，调用时就传入几个实际参数，形参实参个数不一样编译会报错</li><li>实参与形参的数据类型不一样，编译器会报错</li><li>实参与形参的顺序不一样，编译器会报错</li></ol></blockquote><h2 id="形参与实参"><a href="#形参与实参" class="headerlink" title="形参与实参"></a>形参与实参</h2><blockquote><p>形参：用来接收调用该方法时传递的参数。只有在被调用的时候才分配内存空间，一旦调用结束，就释放内存空间。因此仅仅在方法内有效。<br>实参：方法调用时用于传入的数据，用来给形参赋值，数据类型要求一致</p></blockquote><h3 id="形参举例"><a href="#形参举例" class="headerlink" title="形参举例"></a>形参举例</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> temp <span class="token operator">=</span> a<span class="token punctuation">;</span>        a <span class="token operator">=</span> b<span class="token punctuation">;</span>        b <span class="token operator">=</span> temp<span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"a:"</span> <span class="token operator">+</span> a <span class="token operator">+</span> <span class="token string">" b:"</span> <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> 这里边的a<span class="token punctuation">,</span>b就是形参，temp是一个局部变量，方法结束，在栈空间中就会被销毁<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="实参举例"><a href="#实参举例" class="headerlink" title="实参举例"></a>实参举例</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">调用上面的方法<span class="token function">swap</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>其中<span class="token number">1</span>和<span class="token number">2</span>就是实际的参数值，就叫实参<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h2><p>方法中的返回值有两种情况，即有返回值和无返回值，如果定义方法时有返回值类型，就需要返回相对应的数据类型</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">基本数据类型    值传递，不改变自身引用数据类型    引用传递，改变自身<span class="token keyword">void</span>    无返回值<span class="token number">1</span>、一个方法只能有一个返回值<span class="token number">2</span>、分支结构的每一个分支都需要正确的返回值<span class="token number">3</span>、返回值可以接收也可以不接收<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="return-关键字"><a href="#return-关键字" class="headerlink" title="return 关键字"></a>return 关键字</h3><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><p>结束当前方法，返回至调用方法处，如果定义了返回值类型就返回对应类型的数据</p><p>【注意】<a href="http://localhost:63342/ialoe.github.io-master/posts/35.html?_ijt=bqlst5qgc5f4q088n5220dj5j">数据类型一致化</a></p><h4 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">return</span> 需要返回的数据<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、单一职能原则，一个方法只做一件事2、注意形参和实参数据类型一致化3、返回值类型和参数没有关系4、方法名要符合小驼峰命名规则5、return的下一行代码不会执行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="有返回值方法调用"><a href="#有返回值方法调用" class="headerlink" title="有返回值方法调用"></a>有返回值方法调用</h2><h3 id="无参有返回值的方法：give-me-five"><a href="#无参有返回值的方法：give-me-five" class="headerlink" title="无参有返回值的方法：give me five"></a>无参有返回值的方法：give me five</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">TestMethod1</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">giveMeFive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**    * 返回一个整数 5    *    * @return 5 int类型    */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">giveMeFive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token number">5</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="有参有返回值的方法：两个数求和"><a href="#有参有返回值的方法：两个数求和" class="headerlink" title="有参有返回值的方法：两个数求和"></a>有参有返回值的方法：两个数求和</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MethodDemo6</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">/*         * 调用自定义getSumOfTwoNumber方法，需要两个int类型的参数，并得到一个int类型的返回值         *          * 参数列表一定要和方法声明上的参数类型完全一致         */</span>         <span class="token keyword">int</span> total <span class="token operator">=</span> <span class="token function">getSumOfTwoNumber</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * 两个整数进行求和     *      * @param num1 求和的第一个数     * @param num2 求和的第二个数     * @return 返回两个参数的和，int类型     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">getSumOfTwoNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span> num1<span class="token punctuation">,</span> <span class="token keyword">int</span> num2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> num1 <span class="token operator">+</span> num2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意:调用带有多参数的方法，要求传入的参数数据类型，个数和顺序还有数据类型必须和方法声明一致</p></blockquote><h3 id="规范化return"><a href="#规范化return" class="headerlink" title="规范化return"></a>规范化return</h3><p>在一个方法中，return出现的次数要尽可能得少，为了提高阅读性和逻辑性</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">TestMethod4</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">getCompare</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**    * 比较大小，返回较大的那个数    *    * @param num1 int类型    * @param num2 int类型    * @return int类型的结果    */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">getCompare</span><span class="token punctuation">(</span><span class="token keyword">int</span> num1<span class="token punctuation">,</span> <span class="token keyword">int</span> num2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> num1 <span class="token operator">></span> num2 <span class="token operator">?</span> num1 <span class="token operator">:</span> num2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、break 是退出当前循环结构，return 是退出当前方法2、如果返回值类型是 void ，可以返回 null 或者不返回或者 return;3、一个方法可以有多个 return，但只能有一个返回值4、返回值可以接收也可以不接收，由调用者决定如何调用5、分支结构里的每一个分支都需要有正确的返回值6、对返回值的处理方式因情况而定，可以打印、参与运算或者当做其他方法的实参7、调用带有多参数的方法，要求传入的参数数据类型，个数和顺序和类型必须和方法声明一致<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意:方法具有单一职能原则，一个函数只做一件事</p></blockquote><h2 id="方法重载【Overload】"><a href="#方法重载【Overload】" class="headerlink" title="方法重载【Overload】"></a>方法重载【Overload】</h2><h3 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h3><p>一个类或者接口中定义多个相同名称的方法</p><h3 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、必须在同一个类中2、方法名必须一致3、参数必须不一致(个数，顺序，类型)    4、与访问修饰符、返回值类型无关public class MethodDemo9 &#123;    public static void main(String[] args) &#123;        &#x2F;&#x2F; 调用同名方法，传入不同的参数列表，即可实现方法的重载        play();        play(&quot;英雄联盟&quot;);        play(&quot;红色警戒&quot;, 2);        play(1, &quot;DNF&quot;);    &#125;    public static void play() &#123;        System.out.println(&quot;玩王者荣耀&quot;);    &#125;    public static void play(String gameName) &#123;        System.out.println(&quot;玩&quot; + gameName);    &#125;    public static void play(String gameName, int time) &#123;        System.out.println(&quot;玩&quot; + gameName + time + &quot;小时&quot;);    &#125;    public static void play(int time, String gameName) &#123;        System.out.println(&quot;玩&quot; + gameName + time + &quot;小时&quot;);    &#125;    &#x2F;*      * Duplicate method play(String, int) in type MethodDemo9     *      * 跟返回值类型无关，只关注方法名和参数类型     *&#x2F;&#x2F;&#x2F;    public static String play(String gameName, int time) &#123;&#x2F;&#x2F;        return &quot;玩&quot; + gameName + time + &quot;小时&quot;;&#x2F;&#x2F;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>满足需求多样化，屏蔽使用差异，灵活、方便</p><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><blockquote><p>方法的重载我们只关注方法名和参数类型，要求方法名必须一致，参数列表必须不一致（个数，顺序，类型）</p></blockquote><h2 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h2><h3 id="概念-2"><a href="#概念-2" class="headerlink" title="概念"></a>概念</h3><p>在方法内部或者形参列表上定义的变量（包括main方法）</p><h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><p>从定义局部变量的那一行到所在的代码块结束</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>【注意】两个for循环中，i 循环变量分别属于不同的大括号以内，不同的作用域空间，并不冲突</p><h3 id="生存期"><a href="#生存期" class="headerlink" title="生存期"></a>生存期</h3><p>从方法被调用的时刻算起到函数返回调用处的时刻结束</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 报错，找不到符号</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>【注意】for 循环结束时局部变量 i 的生存期结束，在 for 循环外无法使用 i</p><h3 id="单一性，不能重名"><a href="#单一性，不能重名" class="headerlink" title="单一性，不能重名"></a>单一性，不能重名</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 报错！</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>【注意】在一个方法内局部变量不能多次定义</p><h3 id="值传递"><a href="#值传递" class="headerlink" title="值传递"></a>值传递</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        <span class="token function">test</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 5</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>【注意】基本数据类型作为参数传递给局部变量时，传递的是值，局部变量的更改不影响实参本身</p><table><thead><tr><th><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/medias/reward/loading.gif" alt="javafangfa_引用传递"></th></tr></thead><tbody><tr><td><img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/medias/reward/loading.gif" alt="javafanggfa_值传递"></td></tr></tbody></table><h3 id="引用传递"><a href="#引用传递" class="headerlink" title="引用传递"></a>引用传递</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MethodDemoC</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"调用方法前："</span> <span class="token operator">+</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">test</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"调用方法后："</span> <span class="token operator">+</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>【注意】引用数据类型传递时传递的是地址，局部变量直接作用于实参本身</p><table><thead><tr><th>引用传递分析图</th></tr></thead><tbody><tr><td>More Actions<img src="https://files.islu.cn/detail/load.gif" data-original="https://files.islu.cn/medias/reward/loading.gif" alt="javafangfa_引用传递"></td></tr></tbody></table><h3 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h3><ol><li>局部变量声明在函数中，从定义的那一行开始到函数结束时被销毁</li><li>局部变量必须先赋值再使用</li><li>局部变量不能重复定义</li><li>值传递：基本数据类型的传递不改变实参</li><li>引用传递：引用数据类型的传递会改变实参</li><li>Java中只有值传递，引用传递传递的是地址值</li></ol><h2 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h2><h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><blockquote><p>构造方法很重要，但是比较鸡肋</p></blockquote><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>构造方法（<code>Constructor</code>）的名称和类名相同，没有返回值类型。</p><h3 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h3><p>类中的特殊方法，用于创建对象，在创建对象的时候会执行一些初始化操作，如给成员属性赋初值</p><h3 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">格式：    类名<span class="token punctuation">(</span><span class="token punctuation">[</span>参数<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>注意：格式问题</p><blockquote><p>1、构造方法的方法名与类名完全相同</p><p>2、构造方法没有返回值类型</p><p>3、创建对象时，触发构造方法的调用，不可手动调用</p><p>4、如果没有声明构造方法，编译器默认生成无参构造方法</p><p>5、如果定义了有参构造方法，编译器就不会创建无参构造方法</p><p>【强制要求】</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">无论什么时候，都要加上一个无参构造方法！！！<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><h3 id="构造方法的使用"><a href="#构造方法的使用" class="headerlink" title="构造方法的使用"></a>构造方法的使用</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 自定义有参构造方法，并给name属性赋值</span><span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token class-name">String</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    name <span class="token operator">=</span> n<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 自定义无参构造方法</span><span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="构造方法的重载"><a href="#构造方法的重载" class="headerlink" title="构造方法的重载"></a>构造方法的重载</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token class-name">String</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    name <span class="token operator">=</span> n<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token class-name">String</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    name <span class="token operator">=</span> n<span class="token punctuation">;</span>    age <span class="token operator">=</span> i<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h3><blockquote><ol><li>构造方法是用来创建对象，在创建对象的过程中会进行初始化操作（为对象赋值）</li><li>构造方法也是方法，除了没有返回值，其他的都跟方法一样</li></ol><p>按照方法参数列表的类型、个数、顺序去匹配，如果没有找到对应的就会报错</p><ol><li>无论什么时候，都一定要给一个无参构造方法</li></ol></blockquote><h3 id="扩展：反编译"><a href="#扩展：反编译" class="headerlink" title="扩展：反编译"></a>扩展：反编译</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">javap -c -l -private 类名.class<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="扩展：对象的创建过程"><a href="#扩展：对象的创建过程" class="headerlink" title="扩展：对象的创建过程"></a>扩展：对象的创建过程</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、类加载2、内存中开辟对象空间3、为各个属性赋予初始值4、执行构造方法中的代码5、将对象的地址赋值给变量<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="方法重写【-Override】"><a href="#方法重写【-Override】" class="headerlink" title="方法重写【@Override】"></a>方法重写【@Override】</h2><p>开发中父类的方法不一定适用于子类，因为父类方法不能更改，在子类中新增方法会造成代码的冗余，而且不符合逻辑</p><h3 id="要求-1"><a href="#要求-1" class="headerlink" title="要求"></a>要求</h3><blockquote><ol><li>应用于继承和实现接口</li><li>方法的返回值类型，方法名，形参列表与父类一致</li><li>使用<code>@Override</code>注解来标识</li><li>重写方法的访问修饰符权限不能低于父类<br>private &lt; 默认什么都不写什么都不写 &lt; protected &lt; public</li></ol></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/* *十二生肖类的继承+方法重写 */</span><span class="token keyword">class</span> rat <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span><span class="token comment">// 名字</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> ranking<span class="token punctuation">;</span><span class="token comment">// 排名</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getRanking</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> ranking<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRanking</span><span class="token punctuation">(</span><span class="token keyword">int</span> ranking<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ranking <span class="token operator">=</span> ranking<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">skill</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"打洞"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">"\t"</span> <span class="token operator">+</span> ranking <span class="token operator">+</span> <span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">skill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> cow <span class="token keyword">extends</span> rat <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">skill</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"耕田"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> tiger <span class="token keyword">extends</span> rat <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">skill</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"打斗"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> rabbit <span class="token keyword">extends</span> rat <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">skill</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"躲避"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> dragon <span class="token keyword">extends</span> rat <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">skill</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"呼风唤雨"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> snake <span class="token keyword">extends</span> rat <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">skill</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"游走"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> horse <span class="token keyword">extends</span> rat <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">skill</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"飞奔"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> sheep <span class="token keyword">extends</span> rat <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">skill</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"吃草"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> monkey <span class="token keyword">extends</span> rat <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">skill</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"模仿"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> chicken <span class="token keyword">extends</span> rat <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">skill</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"啄食"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> dog <span class="token keyword">extends</span> rat <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">skill</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"游泳"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> pig <span class="token keyword">extends</span> rat <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">skill</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"吃"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h3><p>既沿袭了父类的方法名，又实现了子类的扩展</p><h3 id="总结-4"><a href="#总结-4" class="headerlink" title="总结"></a>总结</h3><blockquote><ol><li>方法的重写能够在不新增方法的情况下实现子类的扩展</li><li>方法重写要求方法声明格式和父类完全一致（访问修饰符不能小于父类）</li><li><code>@Overrid</code>关键字用来开启格式检测，如果不一致就会报错</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java关键词总结</title>
      <link href="posts/53229.html"/>
      <url>posts/53229.html</url>
      
        <content type="html"><![CDATA[<h1 id="Java关键字"><a href="#Java关键字" class="headerlink" title="Java关键字"></a>Java关键字</h1><h2 id="this关键字"><a href="#this关键字" class="headerlink" title="this关键字"></a>this关键字</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>this代表所在类的对象引用，即当前对象</p><blockquote><p>new 创建出来的对象</p><p>调用方法的对象</p></blockquote><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>1、调用本类中的属性和方法（区别成员变量和局部变量）</p><p>2、调用本类中的其他构造方法：this</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">格式：    this([参数...]);会根据参数列表调用对应的构造方法public Rabbit(String color) &#123;    &#x2F;&#x2F; 调用本来中的属性    this.color &#x3D; color;&#125;public Rabbit(String color, int age, double weight) &#123;    &#x2F;&#x2F; 调用本类中的其他构造方法    this(color);    this.age &#x3D; age;    this.weight &#x3D; weight;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>【注意】</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、this()只能在构造方法中使用2、this()只能在第一行3、构造方法中不能同时出现两个this()，因为24、不能自己调用自己，不能相互调用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="规范化this"><a href="#规范化this" class="headerlink" title="规范化this"></a>规范化this</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Son</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">float</span> salary<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 调用Son(String name, int age, float salary)</span>        <span class="token keyword">this</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.0F</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 调用Son(String name, int age, float salary)</span>        <span class="token keyword">this</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> <span class="token number">0.0F</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">,</span> <span class="token keyword">float</span> salary<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>salary <span class="token operator">=</span> salary<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><ul><li>this表示的是当前对象</li><li>this可以调用本类中的属性和方法，最常用与区分成员变量和局部变量</li><li>this还可以调用本类中的构造方法，但是要注意有坑</li></ul></blockquote><h2 id="super关键字"><a href="#super关键字" class="headerlink" title="super关键字"></a>super关键字</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><blockquote><p>super指父类对象，用来区分父类和子类，用于调用父类的属性和方法</p><p>用法和this非常类似：this指当前对象，super指父类对象</p></blockquote><h3 id="调用父类的属性和方法"><a href="#调用父类的属性和方法" class="headerlink" title="调用父类的属性和方法"></a>调用父类的属性和方法</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Father</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"下象棋"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Son</span> <span class="token keyword">extends</span> <span class="token class-name">Father</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"玩游戏"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"局部变量："</span> <span class="token operator">+</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"当前对象成员变量："</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"父类对象成员变量："</span> <span class="token operator">+</span> <span class="token keyword">super</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">callPlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 调用当前对象的方法</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 调用父类对象的方法</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Son</span> son <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        son<span class="token punctuation">.</span><span class="token function">showAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        son<span class="token punctuation">.</span><span class="token function">callPlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="调用父类的构造方法"><a href="#调用父类的构造方法" class="headerlink" title="调用父类的构造方法"></a>调用父类的构造方法</h3><p>默认调用父类的无参构造，且必须在代码的第一行</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Father</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Father</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Father's Constrator be performed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Father</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Father's Constrator be performed with name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Son</span> <span class="token keyword">extends</span> <span class="token class-name">Father</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Son's Constrator be performed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Son's Constrator be performed with name and age"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestSon</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Son</span> son <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：<code>super()</code> 和<code>this()</code> 代码不能共存都必须在首行都必须在首行，但是实际效果其实是可以的，如果不写 super 也会自动调用</p></blockquote><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><blockquote><ol><li>super指父类对象，对比this关键字，使用方法都一样</li><li>super 和this 代码不能共存都必须在首行都必须在首行，但是实际效果其实是可以的，如果不写 super 也会自动调用</li><li>父类的属性要交给父类的构造方法去操作，没什么事就不要去使用 super 来调用父类的构造方法了</li></ol></blockquote><h2 id="final关键字"><a href="#final关键字" class="headerlink" title="final关键字"></a>final关键字</h2><h3 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h3><p>final表示最终的，用来修饰变量，方法和类</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、final 修饰的局部变量只能被赋值一次2、final 修饰的成员变量只能被赋值一次，并且必须在声明时就赋值3、final 修饰的基本类型变量是一个常量(只能被赋值一次)，引用类型变量不可修改地址，如对象4、final 修饰的方法不能被重写5、final 修饰的类不能被继承package com.fc.j._final;&#x2F;* * final修饰的局部变量 *&#x2F;public class FinalDemo1 &#123;    public static void main(String[] args) &#123;        &#x2F;&#x2F; 测试final修饰的修饰的变量        final int num;        num &#x3D; 10;        System.out.println(num);        &#x2F;*         * 被final修饰的变量只能赋值一次         *          * The final local variable num may already have been assigned         *          * 被final修饰的局部变量num可能已经被赋值         *&#x2F;        &#x2F;&#x2F; num &#x3D; 20;    &#125;&#125;&#x2F;&#x2F; final修饰的类不能被继承，断子绝孙class Father &#123;    &#x2F;*     * final 修饰的成员变量必须在声明时就赋值     *      * The blank final field age may not have been initialized     * 空白的final成员变量可能未被初始化     *&#x2F;     &#x2F;&#x2F; final int age;    final int age &#x3D; 16;    public final void play() &#123;        System.out.println(&quot;下棋&quot;);    &#125;&#125;class Son extends Father &#123;    &#x2F;*     *  Cannot override the final method from Father     *  无法重写被final修饰的方法     *&#x2F;&#x2F;&#x2F;    @Override&#x2F;&#x2F;    public final void play() &#123;&#x2F;&#x2F;        &#x2F;&#x2F;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>final修饰可以保证安全性，比如数组的长度属性，String类，这些都是final修饰的，保证不可变</p><h3 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h3><blockquote><p>1、final表示最终的，可以修饰变量，属性和方法</p><p>2、final修饰的基本数据类型的成员变量只能被赋值一次</p><p>3、final修饰的引用数据类型的成员变量地址不可变，但不影响地址所指向的对象的操作</p><p>4、final修饰的方法不能被重写</p><p>5、final修饰的类不能被继承</p></blockquote><h2 id="static关键字"><a href="#static关键字" class="headerlink" title="static关键字"></a>static关键字</h2><h3 id="概述-3"><a href="#概述-3" class="headerlink" title="概述"></a>概述</h3><p>static 关键字方便在<strong>没有创建对象的情况下来进行调用方法和变量</strong>优先级高于对象优先级高于对象，可以用来修饰类的成员方法、类的成员变量，另外可以编写static代码块来优化程序性能</p><h3 id="static变量"><a href="#static变量" class="headerlink" title="static变量"></a>static变量</h3><p>static变量也称作静态变量，静态变量和非静态变量的区别是：静态变量被所有的对象所共享，在内存中只有一个副本，它当且仅当在类初次加载时会被初始化。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PersonDemo</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Person</span> person1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Person</span> person2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Person</span> person3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"王五"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Person</span> person4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"赵六"</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/*         * The static field Person.address should be accessed in a static way         * 静态成员变量应该通过静态的方式访问（注意这里是应该，不是必须）         *          * Change access to static using 'Person' (declaring type)         * 使用Person声明类型来更改对静态的访问         * 通过类名来操作成员变量：Person.address         */</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"姓名："</span> <span class="token operator">+</span> person1<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">" 年龄："</span> <span class="token operator">+</span> person1<span class="token punctuation">.</span>age <span class="token operator">+</span> <span class="token string">" 地址："</span> <span class="token operator">+</span> <span class="token class-name">Person</span><span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"姓名："</span> <span class="token operator">+</span> person2<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">" 年龄："</span> <span class="token operator">+</span> person2<span class="token punctuation">.</span>age <span class="token operator">+</span> <span class="token string">" 地址："</span> <span class="token operator">+</span> <span class="token class-name">Person</span><span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"姓名："</span> <span class="token operator">+</span> person3<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">" 年龄："</span> <span class="token operator">+</span> person3<span class="token punctuation">.</span>age <span class="token operator">+</span> <span class="token string">" 地址："</span> <span class="token operator">+</span> <span class="token class-name">Person</span><span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"姓名："</span> <span class="token operator">+</span> person4<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">" 年龄："</span> <span class="token operator">+</span> person4<span class="token punctuation">.</span>age <span class="token operator">+</span> <span class="token string">" 地址："</span> <span class="token operator">+</span> <span class="token class-name">Person</span><span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 通过类名直接调用static修饰的成员变量，此时是没有对象的</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"没有对象："</span> <span class="token operator">+</span> <span class="token class-name">Person</span><span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/*         *  Cannot make a static reference to the non-static field Person.name         *           *  将name添加static后没有报错         */</span><span class="token comment">//        System.out.println("没有对象：" + Person.name);</span>        <span class="token comment">/*         * 通过对象调用statice修饰的成员方法         *          * The static method test() from the type Person should be accessed in a static way         */</span>        <span class="token comment">// person1.testStatic();</span>        <span class="token comment">// 通过类名直接调用静态方法</span>        <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token function">testStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、通过类名调用静态成员变量，因为静态变量与对象无关2、静态变量被所有对象共享，一处更改处处更改<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="static方法"><a href="#static方法" class="headerlink" title="static方法"></a>static方法</h3><p>static方法一般称作静态方法，由于静态方法不依赖于任何对象就可以进行访问，因此对于静态方法来说，是没有this的，因为它不依附于任何对象，既然都没有对象，就谈不上this了。并且由于这个特性，在静态方法中不能访问类的非静态成员变量和非静态成员方法，因为非静态成员方法/变量都是必须依赖具体的对象才能够被调用。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">"张三"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> address <span class="token operator">=</span> <span class="token string">"郑州"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 自定义static修饰的成员方法</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">testStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">/*         * 静态方法不能调用非静态方法         * Cannot make a static reference to the non-static method test() from the type Person         */</span>        <span class="token comment">// test();</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"static mothed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/*         * 不能再静态方法中使用this关键字         *          * Cannot use this in a static context         */</span>        <span class="token comment">// this.name;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"method"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="总结-4"><a href="#总结-4" class="headerlink" title="总结"></a>总结</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1. static修饰的方法不能访问本类中的非静态变量和方法，不能使用this和super2. 通过类名来调用静态成员方法，工具类的应用很广泛<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="总结-5"><a href="#总结-5" class="headerlink" title="总结"></a>总结</h3><blockquote><ol><li>static修饰的成员变量和方法都是对象所共享的资源，对其进行的操作回作用于所有对象。</li><li>static修饰的成员变量和方法依赖于类不依赖于对象，即没有对象</li><li>static修饰的成员变量和成员方法都可以通过类名调用，没有对象</li><li>静态不能调用费静态，不能使用this关键字，没有对象</li><li>静态变量常和final关键字搭配作为常量使用，静态方法常用于工具类</li></ol></blockquote><h2 id="abstract关键字"><a href="#abstract关键字" class="headerlink" title="abstract关键字"></a>abstract关键字</h2><p>不能实例化的类就是抽象类，用 abstract 修饰</p><h3 id="构成"><a href="#构成" class="headerlink" title="构成"></a>构成</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">abstract</span> <span class="token keyword">class</span> 类名 <span class="token punctuation">&#123;</span>    成员变量    构造方法    成员方法        非抽象方法        抽象方法<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1、抽象类和抽象方法必须用关键字 abstract 修饰2、抽象类中不一定有抽象方法，但是有抽象方法的类一定是抽象类3、abstract 修饰的方法没有方法体，且子类必须重写4、抽象类不能实例化，因为 abstract 类中有 abstract 方法5、抽象类的子类        也可以是一个抽象类，可以重写也可以不重写父类的抽象方法。        可以是一个具体类。这个类必须重写抽象类中的所有抽象方法。(可以实例化)public class TestSon &#123;    public static void main(String[] args) &#123;        Son son &#x3D; new Son();        son.play();    &#125;&#125;&#x2F;&#x2F; 抽象类abstract class Father &#123;    String name;    int age;    public Father() &#123;    &#125;    public void eat() &#123;        System.out.println(&quot;吃饭&quot;);    &#125;    &#x2F;&#x2F; 抽象方法    abstract public void play();&#125;class Son extends Father &#123;    &#x2F;&#x2F; 抽象方法的重写    @Override    public void play() &#123;        System.out.println(&quot;玩游戏&quot;);    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java关键词总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>emoji表情符号</title>
      <link href="posts/17666.html"/>
      <url>posts/17666.html</url>
      
        <content type="html"><![CDATA[<h2 id="常用符号"><a href="#常用符号" class="headerlink" title="常用符号"></a>常用符号</h2><blockquote><p>❤❥웃유♋☮✌☏☢☠✔☑♚▲♪✈✞÷↑↓◆◇⊙■□△▽¿─│♥❣♂♀☿Ⓐ✍✉☣☤✘☒♛▼♫⌘☪≈←→◈◎☉★☆⊿※¡━┃♡ღツ</p><p>☼☁❅♒✎©®™Σ✪✯☭➳卐√↖↗●◐Θ◤◥︻〖〗┄┆℃℉°✿ϟ☃☂✄¢€£∞✫★½✡×↙↘○◑⊕◣◢︼【】┅┇☽☾✚〓</p><p>▂▃▄▅▆▇█▉▊▋▌▍▎▏↔↕☽☾の•▸◂▴▾┈┊①②③④⑤⑥⑦⑧⑨⑩ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩ㍿▓♨♛❖♓☪✙</p><p>┉┋☹☺☻تヅツッシÜϡﭢ™℠℗©®♥❤❥❣❦❧♡۵웃유ღ♋♂♀☿☼☀☁☂☄☾☽❄☃☈⊙☉℃℉❅✺ϟ☇♤♧♡♢♠♣</p><p>♥♦☜☞☝✍☚☛☟✌✽✾✿❁❃❋❀⚘☑✓✔√☐☒✗✘ㄨ✕✖✖⋆✢✣✤✥❋✦✧✩✰✪✫✬✭✮✯❂✡★✱✲✳✴✵✶✷✸✹✺✻✼❄❅❆❇❈❉❊†☨✞✝☥☦☓☩☯☧☬</p><p>☸✡♁✙♆。，、＇：∶；?‘’“”〝〞ˆˇ﹕︰﹔﹖﹑•¨….¸;！´？！～—ˉ｜‖＂〃｀@﹫¡¿﹏﹋﹌︴々﹟#</p><p>﹩$﹠&amp;﹪%<em>﹡﹢﹦﹤‐￣¯―﹨ˆ˜﹍﹎+=&lt;＿</em>-\ˇ~﹉﹊（）〈〉‹›﹛﹜『』〖〗［］《》〔〕{}「」【】︵︷︿︹︽*﹁﹃︻︶︸﹀︺︾ˉ﹂﹄︼☩☨☦✞✛✜✝✙✠✚†‡◉○◌◍◎●◐◑◒◓◔◕◖◗❂☢⊗⊙◘◙◍⅟½⅓⅕⅙⅛⅔⅖⅚⅜¾⅗⅝⅞⅘≂≃≄≅≆≇≈≉≊≋≌</p><p>≍≎≏≐≑≒≓≔≕≖≗≘≙≚≛≜≝≞≟≠≡≢≣≤≥≦≧≨≩⊰⊱⋛⋚∫∬∭∮∯∰∱∲∳%℅‰‱㊣㊎㊍㊌㊋㊏㊐㊊㊚㊛㊤㊥</p><p>㊦㊧㊨㊒㊞㊑㊒㊓㊔㊕㊖㊗㊘㊜㊝㊟㊠㊡㊢㊩㊪㊫㊬㊭㊮㊯㊰㊙㉿囍♔♕♖♗♘♙♚♛♜♝♞♟ℂℍℕℙℚℝℤℬℰℯℱℊℋℎℐℒℓℳℴ℘ℛℭ℮ℌℑℜℨ♪♫♩♬♭♮♯°øⒶ☮✌☪✡☭✯卐✐✎✏</p><p>✑✒✍✉✁✂✃✄✆✉☎☏➟➡➢➣➤➥➦➧➨➚➘➙➛➜➝➞➸♐➲➳⏎➴➵➶➷➸➹➺➻➼➽←↑→↓↔↕↖↗↘↙↚↛↜↝</p><p>↞↟↠↡↢↣↤↥↦↧↨➫➬➩➪➭➮➯➱↩↪↫↬↭↮↯↰↱↲↳↴↵↶↷↸↹↺↻↼↽↾↿⇀⇁⇂⇃⇄⇅⇆⇇⇈⇉⇊⇋⇌⇍⇎⇏⇐⇑⇒⇓⇔⇕</p><p>⇖⇗⇘⇙⇚⇛⇜⇝⇞⇟⇠⇡⇢⇣⇤⇥⇦⇧⇨⇩⇪➀➁➂➃➄➅➆➇➈➉➊➋➌➍➎➏➐➑➒➓㊀㊁㊂㊃㊄㊅㊆㊇㊈㊉ⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡ</p><p>ⓢⓣⓤⓥⓦⓧⓨⓩ⒜⒝⒞⒟⒠⒡⒢⒣⒤⒥⒦⒧⒨⒩⒪⒫⒬⒭⒮⒯⒰⒱⒲⒳⒴⒵ⅠⅡⅢⅣⅤ</p><p>ⅥⅦⅧⅨⅩⅪⅫⅬⅭⅮⅯⅰⅱⅲⅳⅴⅵⅶⅷⅸⅹⅺⅻⅼⅽⅾⅿ┌┍┎┏┐┑┒┓└┕┖┗┘┙┚┛├┝┞┟┠┡┢┣┤┥┦┧┨┩┪┫<br>┬┭┮┯┰┱┲┳┴┵┶┷┸┹┺┻┼┽<br>┾┿╀╁╂╃╄╅╆╇╈╉╊╋╌╍╎╏<br>═║╒╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡╢╣╤╥╦╧╨╩╪╫╬◤◥◄►▶◀◣◢▲</p><p>▼◥▸◂▴▾△▽▷◁⊿▻◅▵▿▹◃❏❐❑❒▀▁▂▃▄▅▆▇▉▊▋█▌▍▎▏▐░▒▓▔▕■□▢▣▤▥▦▧</p><p>▨▩▪▫▬▭▮▯㋀㋁㋂㋃㋄㋅㋆㋇㋈㋉㋊㋋㏠㏡㏢㏣㏤㏥㏦㏧㏨㏩㏪㏫㏬㏭㏮㏯㏰㏱㏲</p><p>㏳㏴㏵㏶㏷㏸㏹㏺㏻㏼㏽㏾㍙㍚㍛㍜㍝㍞㍟㍠㍡㍢㍣㍤㍥㍦㍧㍨㍩㍪㍫㍬㍭㍮㍯㍰㍘</p><p>☰☲☱☴☵☶☳☷☯</p></blockquote><h2 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h2><blockquote><p>♠♣♧♡♥❤❥❣♂♀✲☀☼☾☽◐◑☺☻☎☏✿❀№↑↓←→√×÷★℃℉°◆◇⊙■□△▽¿½☯✡㍿卍卐♂♀✚〓㎡♪♫♩♬</p><p>㊚㊛囍㊒㊖Φ♀♂‖KaTeX parse error: Expected ‘EOF’, got ‘&amp;’ at position 3: @*&amp;̲#※卍卐Ψ♫♬♭♩♪♯♮⌒¶∮…</p></blockquote><h2 id="编号序号"><a href="#编号序号" class="headerlink" title="编号序号"></a>编号序号</h2><blockquote><p>①②③④⑤⑥⑦⑧⑨⑩⑪⑫⑬⑭⑮⑯⑰⑱⑲⑳⓪</p><p>❶❷❸❹❺❻❼❽❾❿⓫⓬⓭⓮⓯⓰⓱⓲⓳⓴</p><p>㊀㊁㊂㊃㊄㊅㊆㊇㊈㊉㈠㈡㈢㈣㈤㈥㈦㈧㈨㈩⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽⑾⑿⒀⒁⒂⒃⒄⒅⒆⒇</p><p>⒈⒉⒊⒋⒌⒍⒎⒏⒐⒑⒒⒓⒔⒕⒖⒗⒘⒙⒚⒛</p><p>ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩⅪⅫⅰⅱⅲⅳⅴⅵⅶⅷⅸⅹ</p><p>ⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡⓢⓣⓤⓥⓦⓧⓨⓩ</p><p>⒜⒝⒞⒟⒠⒡⒢⒣⒤⒥⒦⒧⒨⒩⒪⒫⒬⒭⒮⒯⒰⒱⒲⒳⒴⒵</p></blockquote><h2 id="数学符号"><a href="#数学符号" class="headerlink" title="数学符号"></a>数学符号</h2><blockquote><p>﹢﹣×÷±/=≌∽≦≧≒﹤﹥≈≡≠=≤≥&lt;&gt;≮≯∷∶∫∮∝∞∧∨∑∏∪∩∈∵∴⊥∥∠⌒⊙√∟⊿㏒㏑%</p><p>‰⅟½⅓⅕⅙⅛⅔⅖⅚⅜¾⅗⅝⅞⅘≂≃≄≅≆≇≈≉≊≋≌≍≎≏≐≑≒≓≔≕≖≗≘≙≚≛≜≝≞≟</p><p>≠≡≢≣≤≥≦≧≨≩⊰⊱⋛⋚∫∬∭∮∯∰∱∲∳%℅‰‱øØπ</p></blockquote><h2 id="爱心符号"><a href="#爱心符号" class="headerlink" title="爱心符号"></a>爱心符号</h2><blockquote><p>♥❣ღ♠♡♤❤❥</p></blockquote><h2 id="标点符号"><a href="#标点符号" class="headerlink" title="标点符号"></a>标点符号</h2><blockquote><p>。，、＇：∶；?‘’“”〝〞ˆˇ﹕︰﹔﹖﹑•¨….¸;！´？！～—ˉ｜‖＂〃｀@﹫¡¿﹏﹋﹌︴</p><p>々﹟#﹩$﹠&amp;﹪%<em>﹡﹢﹦﹤‐￣¯―﹨ˆ˜﹍﹎+=&lt;＿</em>-\ˇ~﹉﹊</p><p>（）〈〉‹›﹛﹜『』〖〗［］《》〔〕{}「」【】</p><p>︵︷︿︹︽*﹁﹃︻︶︸﹀︺︾ˉ﹂﹄︼❝❞</p></blockquote><h2 id="单位符号"><a href="#单位符号" class="headerlink" title="单位符号"></a>单位符号</h2><blockquote><p>°′″＄￥〒￠￡％＠℃℉﹩﹪‰﹫㎡㏕㎜㎝㎞㏎m³㎎㎏㏄º○¤%$º¹²³</p></blockquote><h2 id="货币符号"><a href="#货币符号" class="headerlink" title="货币符号"></a>货币符号</h2><blockquote><p>€£Ұ₴$₰¢₤¥₳₲₪₵元₣₱฿¤₡₮₭₩ރ円₢₥₫₦zł﷼₠₧₯₨Kčर₹ƒ₸￠</p></blockquote><h2 id="箭头符号（含推导-amp-转换符号）"><a href="#箭头符号（含推导-amp-转换符号）" class="headerlink" title="箭头符号（含推导&amp;转换符号）"></a>箭头符号（含推导&amp;转换符号）</h2><blockquote><p>↑↓←→↖↗↘↙↔↕➻➼➽➸➳➺➻➴➵➶➷➹▶►▷◁◀◄«</p><p>»➩➪➫➬➭➮➯➱⏎➲➾➔➘➙➚➛➜➝➞➟➠➡➢➣➤➥➦➧➨</p><p>↚↛↜↝↞↟↠↠↡↢↣↤↤↥↦↧↨⇄⇅⇆⇇⇈⇉⇊⇋⇌⇍⇎⇏⇐⇑⇒⇓⇔⇖⇗⇘⇙</p><p>⇜↩↪↫↬↭↮↯↰↱↲↳↴↵↶↷↸↹☇☈↼↽↾↿⇀⇁⇂⇃⇞⇟⇠⇡⇢⇣⇤⇥⇦⇧⇨⇩⇪↺↻⇚⇛♐</p></blockquote><h2 id="符号图案"><a href="#符号图案" class="headerlink" title="符号图案"></a>符号图案</h2><blockquote><p>✐✎✏✑✒✍✉✁✂✃✄✆✉☎☏☑✓✔√☐☒✗✘ㄨ✕✖✖☢☠☣✈★☆✡囍㍿☯☰☲☱☴☵☶☳☷</p><p>☜☞☝✍☚☛☟✌♤♧♡♢♠♣♥♦☀☁☂❄☃♨웃유❖☽☾☪✿♂♀✪✯☭➳卍卐√×■◆●○◐◑✙☺☻</p><p>❀⚘♔♕♖♗♘♙♚♛♜♝♞♟♧♡♂♀♠♣♥❤☜☞☎☏⊙◎☺☻☼▧▨♨◐◑↔↕▪▒◊◦▣▤▥▦▩◘◈◇</p><p>♬♪♩♭♪の★☆→あぃ￡Ю〓§♤♥▶¤✲❈✿✲❈➹☀☂☁【】┱┲❣✚✪✣✤✥✦❉❥❦❧❃❂❁❀✄☪☣☢☠☭ღ▶▷◀◁</p><p>☀☁☂☃☄★☆☇☈⊙☊☋☌☍ⓛⓞⓥⓔ╬『』∴☀♫♬♩♭♪☆∷﹌の★◎▶☺☻►◄▧▨♨◐◑↔↕↘▀▄█▌</p><p>◦☼♪の☆→♧ぃ￡❤▒▬♦◊◦♠♣▣۰•❤•۰►◄▧▨♨◐◑↔↕▪▫☼♦⊙●○①⊕◎Θ⊙¤㊣★☆♀◆◇◣◢◥▲▼△▽⊿◤◥</p><p>✐✌✍✡✓✔✕✖♂♀♥♡☜☞☎☏⊙◎☺☻►◄▧▨♨◐◑↔↕♥♡▪▫☼♦▀▄█▌▐░▒▬♦◊◘◙◦☼♠♣▣▤▥▦▩◘◙◈</p><p>♫♬♪♩♭♪✄☪☣☢☠♯♩♪♫♬♭♮☎☏☪♈ºº₪¤큐«»™♂✿♥　◕‿-｡　｡◕‿◕｡</p></blockquote><h2 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h2><blockquote><p>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ</p><p>αβγδεζνξοπρσηθικλμτυφχψω</p></blockquote><h2 id="俄语字母"><a href="#俄语字母" class="headerlink" title="俄语字母"></a>俄语字母</h2><blockquote><p>АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвг</p><p>деёжзийклмнопрстуфхцчшщъыьэюя</p></blockquote><h2 id="汉语拼音"><a href="#汉语拼音" class="headerlink" title="汉语拼音"></a>汉语拼音</h2><blockquote><p>āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜüêɑńňɡㄅㄆㄇㄈㄉ</p><p>ㄊㄋㄌㄍㄎㄏㄐㄑㄒㄓㄔㄕㄖㄗㄘㄙㄚㄛㄜㄝㄞ</p><p>ㄟㄠㄡㄢㄣㄤㄥㄦㄧㄨㄩ</p></blockquote><h2 id="中文字符"><a href="#中文字符" class="headerlink" title="中文字符"></a>中文字符</h2><blockquote><p>零壹贰叁肆伍陆柒捌玖拾佰仟万亿吉太拍艾分厘毫微</p><p>卍卐卄巜弍弎弐朤氺曱甴囍兀々〆のぁ〡〢〣〤〥〦〧〨〩</p><p>㊎㊍㊌㊋㊏㊚㊛㊐㊊㊣㊤㊥㊦㊧㊨㊒㊫㊑㊓㊔㊕㊖㊗㊘㊜㊝㊞㊟㊠㊡㊢㊩㊪㊬㊭㊮㊯㊰</p><p>㊀㊁㊂㊃㊄㊅㊆㊇㊈㊉</p></blockquote><h2 id="日文符号"><a href="#日文符号" class="headerlink" title="日文符号"></a>日文符号</h2><blockquote><p>ぁあぃいぅうぇえぉおかがきぎくぐけげこごさざしじすずせぜそぞただちぢっつづてで</p><p>とどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもゃやゅゆょよらりるれろゎ</p><p>わゐゑをんゔゕゖァアィイゥウェエォオカガキギクグケゲコゴサザシジスズセゼソゾタ</p><p>ダチヂッツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモャヤュユ</p><p>ョヨラリルレロヮワヰヱヲンヴヵヶヷヸヹヺ・ーヽヾヿ゠ㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ</p></blockquote><h2 id="制表符号"><a href="#制表符号" class="headerlink" title="制表符号"></a>制表符号</h2><blockquote><p>─ ━│┃╌╍╎╏┄ ┅┆┇┈ ┉┊┋┌┍┎┏┐┑┒┓└ ┕┖┗ ┘┙┚┛├┝┞┟┠┡┢┣ ┤┥┦┧┨┩┪┫┬ ┭ ┮ ┯ ┰ ┱ ┲ ┳</p><p>┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻┼ ┽ ┾ ┿ ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╪ ╫ ╬═║╒╓╔ ╕╖╗╘╙╚ ╛╜╝╞╟╠ ╡╢╣</p><p>╤ ╥ ╦ ╧ ╨ ╩ ╳╔ ╗╝╚ ╬ ═ ╓ ╩ ┠ ┨┯ ┷┏ ┓┗ ┛┳ ⊥ ﹃ ﹄┌ ╮ ╭ ╯╰</p></blockquote><h2 id="皇冠符号"><a href="#皇冠符号" class="headerlink" title="皇冠符号"></a>皇冠符号</h2><blockquote><p>♚　♛　♝　♞　♜　♟　♔　♕　♗　♘　♖　♟</p></blockquote><h2 id="彩色表情符号"><a href="#彩色表情符号" class="headerlink" title="彩色表情符号"></a>彩色表情符号</h2><blockquote><p>🌹🍀🍎💰📱🌙🍁🍂🍃🌷💎🔪🔫🏀⚽⚡👄👍🔥</p></blockquote><h2 id="常用emoji符号"><a href="#常用emoji符号" class="headerlink" title="常用emoji符号"></a>常用emoji符号</h2><blockquote><p>😀😁😂😃😄😅😆😉😊😋😎😍😘😗😙😚☺😇😐😑😶😏😣😥😮😯😪😫😴😌😛😜😝😒😓😔😕😲😷😖😞😟😤😢😭😦😧😨😬😰😱😳😵😡😠😈👿👹👺💀👻👽👦👧👨👩👴👵👶👱👮👲👳👷👸💂🎅👰👼💆💇🙍🙎🙅🙆💁🙋🙇🙌🙏👤👥🚶🏃👯💃👫👬👭💏💑👪💪👈👉☝👆👇✌✋👌👍👎✊👊👋👏👐✍👣👀👂👃👅👄💋👓👔👕👖👗👘👙👚👛👜👝🎒💼👞👟👠👡👢👑👒🎩🎓💄💅💍🌂🙈🙉🙊🐵🐒🐶🐕🐩🐺🐱😺😸😹😻😼😽🙀😿😾🐈🐯🐅🐆🐴🐎🐮🐂🐃🐄🐷🐖🐗🐽🐏🐑🐐🐪🐫🐘🐭🐁🐀🐹🐰🐇🐻🐨🐼🐾🐔🐓🐣🐤🐥🐦🐧🐸🐊🐢🐍🐲🐉🐳🐋🐬🐟🐠🐡🐙🐚🐌🐛🐜🐝🐞🦋💐🌸💮🌹🌺🌻🌼🌷🌱🌲🌳🌴🌵🌾🌿🍀🍁🍂🍃🌍🌎🌏🌐🌑🌒🌓🌔🌕🌖🌗🌘🌙🌚🌛🌜☀🌝🌞⭐🌟🌠☁⛅☔⚡❄🔥💧🌊💩🍇🍈🍉🍊🍋🍌🍍🍎🍏🍐🍑🍒🍓🍅🍆🌽🍄🌰🍞🍖🍗🍔🍟🍕🍳🍲🍱🍘🍙🍚🍛🍜🍝🍠🍢🍣🍤🍥🍡🍦🍧🍨🍩🍪🎂🍰🍫🍬🍭🍮🍯🍼☕🍵🍶🍷🍸🍹🍺🍻🍴🎪🎭🎨🎰🚣🛀🎫🏆⚽⚾🏀🏈🏉🎾🎱🎳⛳🎣🎽🎿🏂🏄🏇🏊🚴🚵🎯🎮🎲🎷🎸🎺🎻🎬👾🌋🗻🏠🏡🏢🏣🏤🏥🏦🏨🏩🏪🏫🏬🏭🏯🏰💒🗼🗽⛪⛲🌁🌃🌆🌇🌉🌌🎠🎡🎢🚂🚃🚄🚅🚆🚇🚈🚉🚊🚝🚞🚋🚌🚍🚎🚏🚐🚑🚒🚓🚔🚕🚖🚗🚘🚚🚛🚜🚲⛽🚨🚥🚦🚧⚓⛵🚤🚢✈💺🚁🚟🚠🚡🚀🎑🗿🛂🛃🛄🛅💌💎🔪💈🚪🚽🚿🛁⌛⏳⌚⏰🎈🎉🎊🎎🎏🎐🎀🎁📯📻📱📲☎📞📟📠🔋🔌💻💽💾💿📀🎥📺📷📹📼🔍🔎🔬🔭📡💡🔦🏮📔📕📖📗📘📙📚📓📃📜📄📰📑🔖💰💴💵💶💷💸💳✉📧📨📩📤📥📦📫📪📬📭📮✏✒📝📁📂📅📆📇📈📉📊📋📌📍📎📏📐✂🔒🔓🔏🔐🔑🔨🔫🔧🔩🔗💉💊🚬🔮🚩🎌💦💨💣☠♠♥♦♣🀄🎴🔇🔈🔉🔊📢📣💤💢💬💭♨🌀🔔🔕✡✝🔯📛🔰🔱⭕✅☑✔✖❌❎➕➖➗➰➿〽✳✴❇‼⁉❓❔❕❗©®™🎦🔅🔆💯🔠🔡🔢🔣🔤🅰🆎🅱🆑🆒🆓ℹ🆔Ⓜ🆕🆖🅾🆗🅿🆘🆙🆚🈁🈂🈷🈶🈯🉐🈹🈚🈲🉑🈸🈴🈳㊗㊙🈺🈵▪▫◻◼◽◾⬛⬜🔶🔷🔸🔹🔺🔻💠🔲🔳⚪⚫🔴🔵♈♉♊♋♌♍♎♏♐♑♒♓⛎💘❤💓💔💕💖💗💙💚💛💜💝💞💟❣🌿🚧💒☎📟💽⬆↗➡↘⬇↙⬅↖↕↔↩↪⤴⤵🔃🔄🔙🔚🔛🔜🔝🔀🔁🔂▶⏩◀⏪🔼⏫🔽⏬📱📶📳📴♻🏧🚮🚰♿🚹🚺🚻🚼🚾⚠🚸⛔🚫🚳🚭🚯🚱🚷🔞</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> emoji表情 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> emoji表情 </tag>
            
            <tag> emoji表情符号大全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jetbrains系列产品激活</title>
      <link href="posts/61958.html"/>
      <url>posts/61958.html</url>
      
        <content type="html"><![CDATA[<h1 id="Jetbrains系列产品激活文件"><a href="#Jetbrains系列产品激活文件" class="headerlink" title="Jetbrains系列产品激活文件"></a><strong>Jetbrains系列产品激活文件</strong></h1><h2 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h2><p>JetBrains公司旗下的IntelliJ IDEAJava是广泛使用的编程语言开发撰写时所用的集成开发环境。JetBrains全家桶，包括IntelliJ IDEA , Pycharm , Webstorm , PhpStorm , Rider Clion , RubyMine, AppCode, Goland, DataGrip , Kotlin等15款产品。Jetbrains系列产品2020.2.3最新激活文件，可以永久激活最新版本。</p><blockquote><p>IDEA，专为Java编程语言开发撰写时常用的集成开发环境。</p><p>PhpStorm，专为Web和PHP开发者打造的专业集成开发环境。</p><p>RubyMine，针对Ruby和Rails的集成开发环境，为使用Ruby语言进行Web开发的开发人员们提供最为必需的工具和舒适便捷的开发环境。</p><p>PyCharm，针对Python语言打造的轻量级IDE，通过Django框架和Google App Engine来支持web开发。</p><p>AppCode，专为iOS/OS X开发人员打造的智能IDE，协助他们以更高的生产效率使用Objective-C、Swift、C或C++进行苹果设备的应用开发。</p><p>CLion，适用于C/C++开发人员的跨平台IDE，提供极佳的编码协助，为您节省大量时间。</p><p>WebStorm，适用于专业JavaScript和前端Web开发人员的集成开发环境。</p><p>DataGrip，适用于数据库与SQL开发人员的超级利器。</p></blockquote><h2 id="关于激活"><a href="#关于激活" class="headerlink" title="关于激活"></a>关于激活</h2><p>Jetbrains全系列产品2020.2.3及以下版本（理论上适用目前所有新老版本）</p><p>最新注册服务器(License Server)的解锁，可用它来激活你的Jetbrains IDE。</p><p>支持Activation Code注册码激活（自定义License name）可用于离线环境。</p><p>新的agent license server：<a href="https://fls.jetbrains-agent.涆com(http)甛ꅧ/">https://fls.jetbrains-agent.com（HTTP也可用）</a></p><p>Jebrains付费插件Activation code，暂不在列表的试试 license server。</p><blockquote><p>以下IDE版本可成功激活：</p><p>IntelliJ IDEA 2020.2.3及以下</p><p>AppCode 2019.3.7及以下</p><p>CLion 2019.3.5及以下</p><p>DataGrip 2020.2.3及以下</p><p>GoLand 2020.2.3及以下</p><p>PhpStorm 2020.2.3及以下</p><p>PyCharm 2020.2.3及以下</p><p>Rider 2019.3.4及以下</p><p>RubyMine 2019.3.4及以下</p><p>WebStorm 2020.2.3及以下</p></blockquote><h2 id="激活文件下载"><a href="#激活文件下载" class="headerlink" title="激活文件下载"></a>激活文件下载</h2><p><a href="https://share.weiyun.com/IRKRsdxn">传送门</a></p><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>Jetbrains系列产品 2020.2.3 激活文件 <a href="https://share.weiyun.com/IRKRsdxn">v3.2.2 2020.10.27</a>&gt; （支持2020.2.3及以下版本）</p><blockquote><p>1.使用说明：启动软件选试用（Evaluate for free）- Evaluate</p><p>2.将解锁激活文件 jetbrains-agent-latest.zip 拖到IDE欢迎界面，重启软件，会弹出配置助手</p><p>3.将最新安装参数-&gt;粘贴-&gt;配置助手对话框-&gt;点击为产品激活，重启即激活旗舰版至2089年！</p><p>JetBrains产品官方简体中文语言包页面（适用 JetBrains所有产品汉化）</p></blockquote><blockquote><p>启动软件，选择试用（Evaluate for free）- Evaluate, JetBrains_zh-CNLangPack_EAP.jar汉化插件包拖到IDE欢迎界面重启完事。</p></blockquote><h2 id="正版活动"><a href="#正版活动" class="headerlink" title="正版活动"></a>正版活动</h2><p>教育邮箱或学生证免费1年正版授权官方申请地址</p><p><a href="https://sales.jetbrains.com/hc/zh-cn/articles/207154369">https://sales.jetbrains.com/hc/zh-cn/articles/207154369</a></p><p>创业公司5折正版授权官方购买地址</p><p><a href="https://www.jetbrains.com/shop/eform/startup">https://www.jetbrains.com/shop/eform/startup</a></p>]]></content>
      
      
      <categories>
          
          <category> Jetbrains </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jetbrains </tag>
            
            <tag> Jetbrains系列产品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Excel常用函数</title>
      <link href="posts/57189.html"/>
      <url>posts/57189.html</url>
      
        <content type="html"><![CDATA[<h1 id="Excel函数"><a href="#Excel函数" class="headerlink" title="Excel函数"></a>Excel函数</h1><h3 id="1、求和函数SUM"><a href="#1、求和函数SUM" class="headerlink" title="1、求和函数SUM()"></a>1、求和函数SUM()</h3><blockquote><p><strong>SUM</strong>函数将为值求和。 可以将单个值、单元格引用或是区域相加，或者将三者的组合相加。</p></blockquote><p>1、指定数值求和</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;SUM(10,20,30)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、指定单元格求和：输入=sum()，在括号中间按住ctrl连续点击即可选择需要求和的数据</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;SUM(C5,C9,C3)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、也可以将指定单元格直接相加</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;SUM(C2 + C4)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4、区域求和，输入=sum()，在括号中间按住ctrl选中所需要求和的数据</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;SUM(C2:C11)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5、多个区域求和，输入=sum()，在括号中间分别按住ctrl选中所需要的多个区域的数据</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;SUM(C2:C4,C6:C10)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6、配合固定值进行求和，中间使用英文的逗号分隔</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;SUM(C2:C11,100)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2、条件求和函数SUMIF"><a href="#2、条件求和函数SUMIF" class="headerlink" title="2、条件求和函数SUMIF()"></a>2、条件求和函数SUMIF()</h3><blockquote><p>按条件求和</p></blockquote><p>sumif函数的语法格式</p><blockquote><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;sumif(range，criteria，sum_range)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Sumif（条件区域，求和条件，实际求和区域），第二个求和条件参数在第一个条件区域里。</p></blockquote><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;SUMIF(D2:D11,D4,C2:C11)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>求和所有性别中性别为女的年龄</p><h3 id="3、求平均值函数AVERAGE"><a href="#3、求平均值函数AVERAGE" class="headerlink" title="3、求平均值函数AVERAGE()"></a>3、求平均值函数AVERAGE()</h3><blockquote><p>获取平均值</p></blockquote><p>1、指定数值求平均值</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;AVERAGE(10,20)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、指定单元格求平均值:括号内按ctrl选择需要求平均值的单元格</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;AVERAGE(C2,C8)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、范围单元格求平均值</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;AVERAGE(C2:C11)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4、求最大值函数MAX"><a href="#4、求最大值函数MAX" class="headerlink" title="4、求最大值函数MAX()"></a>4、求最大值函数MAX()</h3><blockquote><p>获取最大值</p></blockquote><p>1、指定数值求最大值</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;MAX(30,40)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、指定单元格求最大值</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;MAX(C5,C11,C7)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、指定范围单元格求最大值</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;MAX(C2:C11)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4、指定多个范围单元格求最大值</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;MAX(C3:C4,C7,C10)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5、求最小值函数MIN"><a href="#5、求最小值函数MIN" class="headerlink" title="5、求最小值函数MIN()"></a>5、求最小值函数MIN()</h3><blockquote><p>获取最小值</p></blockquote><p>1、指定数值求最小值</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;MIN(30,40)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、指定单元格求最小值</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;MIN(C5,C11,C7)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、指定范围单元格求最小值</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;MIN(C2:C11)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4、指定多个范围单元格求最小值</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;MIN(C3:C4,C7,C10)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="6、计数函数COUNT"><a href="#6、计数函数COUNT" class="headerlink" title="6、计数函数COUNT()"></a>6、计数函数COUNT()</h3><blockquote><p>获取指定单元格非空数据数值类型的个数，对于空单元格、逻辑值或者文本数据将被忽略。可以用来判断是否有空白单元格</p></blockquote><p>1、指定数值获取非空数值的个数</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;COUNT(1,2)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、获取指定单元格中非空数值的个数</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;COUNT(C10,F10)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、指定范围获取非空数值的个数</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;COUNT(C10:C12)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4、指定多个范围单元格获取非空数值的个数</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;COUNT(C8,C10,C12,F4:F12)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="7、非空计数函数COUNTA"><a href="#7、非空计数函数COUNTA" class="headerlink" title="7、非空计数函数COUNTA()"></a>7、非空计数函数COUNTA()</h3><blockquote><p>统计区域内包含文本和逻辑值的单元格个数。</p><p>注意counta函数与count函数的区别。</p><p>Count函数只统计区域内包含数字的单元格个数。</p></blockquote><p>1、指定多个范围单元格获取非空数据的个数</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;COUNTA(E4:E7,C2)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="8、四舍五入函数ROUND"><a href="#8、四舍五入函数ROUND" class="headerlink" title="8、四舍五入函数ROUND()"></a>8、四舍五入函数ROUND()</h3><blockquote><p>对数值进行四舍五入</p></blockquote><p>ROUND函数语法格式：</p><blockquote><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">ROUND(number, num_digits)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中</p><p>number表示需要进行四舍五入的数值或单元格内容。</p><p>num_digits表示需要取多少位的参数。</p><p>num_digits&gt;0时，表示取小数点后对应位数的四舍五入数值。</p><p>num_digits=0时，表示则将数字四舍五入到最接近的整数。</p><p>num_digits&lt; 0时，表示对小数点左侧前几位进行四舍五入。</p></blockquote><p>1、对指定单元格进行四舍五入</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;ROUND(E7,0)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="9、排名次函数RANK"><a href="#9、排名次函数RANK" class="headerlink" title="9、排名次函数RANK()"></a>9、排名次函数RANK()</h3><blockquote><p>返回一列数字的数字排位。 数字的排位是相对于列表中的其他值的大小。</p></blockquote><p>语法：RANK(number,ref,[order])</p><blockquote><p>RANK 函数语法具有下列参数：</p><ul><li><p><strong>Number</strong> 必需。 要找到其排位的数字。</p></li><li><p><strong>Ref</strong> 必需。 数字列表的数组，对数字列表的引用。 Ref 中的非数字值会被忽略。</p></li><li><p><strong>Order</strong> 可选。 一个指定数字排位方式的数字。</p><p>如果 order 为 0（零）或省略，Microsoft Excel 对数字的排位是基于 ref 为按照降序排列的列表。</p><p>如果 order 不为零，Microsoft Excel 对数字的排位是基于 ref 为按照升序排列的列表。</p></li></ul></blockquote><p>1、获取指定单元格在范围内进行排名</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;RANK(C3,C2:C11)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="9、排名次函数RANK-EQ"><a href="#9、排名次函数RANK-EQ" class="headerlink" title="9、排名次函数RANK.EQ()"></a>9、排名次函数RANK.EQ()</h3><pre class="line-numbers language-none"><code class="language-none">与RANK函数用法一致<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>返回一列数字的数字排位。 其大小与列表中其他值相关；如果多个值具有相同的排位，则返回该组值的最高排位。</p><p>如果要对列表进行排序，则数字排位可作为其位置。</p></blockquote><p>语法</p><blockquote><p>RANK.EQ(number,ref,[order])</p><p>RANK.EQ 函数语法具有下列参数：</p><ul><li><strong>Number</strong> 必需。 要找到其排位的数字。</li><li><strong>Ref</strong> 必需。 数字列表的数组，对数字列表的引用。 Ref 中的非数字值会被忽略。</li><li><strong>Order</strong> 可选。 一个指定数字排位方式的数字。</li></ul><p>【注意】</p><ul><li>如果 Order 为 0（零）或省略，Excel 对数字的排位是基于 Ref 为按降序排列的列表。</li><li>如果 Order 不为零， Excel 对数字的排位是基于 Ref 为按照升序排列的列表。</li></ul></blockquote><p>1、升序排名</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;RANK.EQ(C3,C2:C11,1)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、降序排名(0可以省略)</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;RANK.EQ(C3,C2:C11,0)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="10、取整函数INT"><a href="#10、取整函数INT" class="headerlink" title="10、取整函数INT()"></a>10、取整函数INT()</h3><blockquote><p>将数字向下舍入到最接近的整数。</p></blockquote><p>1、对指定单元格进行取整，忽略小数位</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;INT(E3)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="11、求字符串长度函数LEN"><a href="#11、求字符串长度函数LEN" class="headerlink" title="11、求字符串长度函数LEN()"></a>11、求字符串长度函数LEN()</h3><blockquote><p>返回文本字符串中的字符个数</p><p>【注意】数字，字符，汉字都属于一个字符，包括小数点</p></blockquote><p>1、对指定单元格获取长度</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;LEN(E3)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="12、左取字符串函数LEFT"><a href="#12、左取字符串函数LEFT" class="headerlink" title="12、左取字符串函数LEFT()"></a>12、左取字符串函数LEFT()</h3><blockquote><p>从文本字符串的第一个字符开始返回指定个数的字符</p></blockquote><p>语法</p><blockquote><p>LEFT(text, [num_chars])</p><p>该函数语法具有下列参数：</p><ul><li><p><strong>Text</strong> 必需。 包含要提取的字符的文本字符串。</p></li><li><p>num_chars</p><p>可选。 指定要由 LEFT 提取的字符的数量。</p><ul><li>num_chars 必须大于或等于零。</li><li>如果 num_chars 大于文本长度，则 LEFT 返回全部文本。</li><li>如果省略 num_chars，则假定其值为 1。</li></ul></li></ul></blockquote><p>1、获取指定单元格从左开始的第一个字符</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;LEFT(F2)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、获取指定单元格从左开始的指定长度个数的字符</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;LEFT(F2,3)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="13、右取字符串函数RIGHT"><a href="#13、右取字符串函数RIGHT" class="headerlink" title="13、右取字符串函数RIGHT()"></a>13、右取字符串函数RIGHT()</h3><blockquote><p>根据所指定的字符数返回文本字符串中最后一个或多个字符</p></blockquote><p>语法</p><blockquote><p>RIGHT(text,[num_chars])</p><p>RIGHT 函数具有下列参数：</p><ul><li><strong>文本</strong> 必需。 包含要提取字符的文本字符串。</li><li><strong>num_chars</strong> 可选。 指定希望 RIGHT 提取的字符数。</li><li>Num_chars 必须大于或等于零。</li><li>如果 num_chars 大于文本长度，则 RIGHT 返回所有文本。</li><li>如果省略 num_chars，则假定其值为 1。</li></ul></blockquote><p>1、获取指定单元格从右开始的第一个字符</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;RIGHT(F2)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、获取指定单元格从左开始的指定长度个数的字符</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;RIGHT(F2,3)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="14、日函数DAY"><a href="#14、日函数DAY" class="headerlink" title="14、日函数DAY()"></a>14、日函数DAY()</h3><blockquote><p>返回以序列数表示的某日期的天数。 天数是介于 1 到 31 之间的整数。</p></blockquote><p>语法</p><blockquote><p>DAY(serial_number)</p><p>DAY 函数语法具有下列参数：</p><ul><li><strong>Serial_number</strong> 必需。 尝试查找的日期应使用 DATE 函数输入日期，或者将日期作为其他公式或函数的结果输入。 例如，使用函数 DATE(2008,5,23) 输入 2008 年 5 月 23 日。 如果<a href="https://support.microsoft.com/zh-cn/office/%E6%9B%B4%E6%94%B9%E6%97%A5%E6%9C%9F%E7%B3%BB%E7%BB%9F%E3%80%81%E6%A0%BC%E5%BC%8F%E6%88%96%E4%B8%A4%E4%BD%8D%E6%95%B0%E5%B9%B4%E4%BB%BD%E8%A1%A8%E7%A4%BA%E6%96%B9%E5%BC%8F-aaa2159b-4ae8-4651-8bce-d4707bc9fb9f">日期以文本形式输入</a>，则会出现问题。</li></ul></blockquote><p>用法</p><table><thead><tr><th><strong>日期</strong></th><th></th><th></th></tr></thead><tbody><tr><td>2011-4-15</td><td></td><td></td></tr><tr><td><strong>公式</strong></td><td><strong>描述（结果）</strong></td><td><strong>结果</strong></td></tr><tr><td>=DAY(A2)</td><td>单元格 A2 (15) 中日期的天数</td><td>15</td></tr></tbody></table><h3 id="15、月函数MONTH"><a href="#15、月函数MONTH" class="headerlink" title="15、月函数MONTH()"></a>15、月函数MONTH()</h3><blockquote><p>返回日期（以序列数表示）中的月份。 月份是介于 1（一月）到 12（十二月）之间的整数。</p></blockquote><p>语法</p><blockquote><p>MONTH(serial_number)</p><p>MONTH 函数语法具有下列参数：</p><ul><li><strong>Serial_number</strong> 必需。 尝试查找的月份的日期应使用 DATE 函数输入日期，或者将日期作为其他公式或函数的结果输入。 例如，使用函数 DATE(2008,5,23) 输入 2008 年 5 月 23 日。 如果<a href="https://support.microsoft.com/zh-cn/office/%E6%9B%B4%E6%94%B9%E6%97%A5%E6%9C%9F%E7%B3%BB%E7%BB%9F%E3%80%81%E6%A0%BC%E5%BC%8F%E6%88%96%E4%B8%A4%E4%BD%8D%E6%95%B0%E5%B9%B4%E4%BB%BD%E8%A1%A8%E7%A4%BA%E6%96%B9%E5%BC%8F-aaa2159b-4ae8-4651-8bce-d4707bc9fb9f">日期以文本形式输入</a>，则会出现问题。</li></ul></blockquote><p>用法</p><table><thead><tr><th><strong>日期</strong></th><th></th><th></th></tr></thead><tbody><tr><td>2011-4-15</td><td></td><td></td></tr><tr><td><strong>公式</strong></td><td><strong>说明</strong></td><td><strong>结果</strong></td></tr><tr><td>=MONTH(A2)</td><td>单元格 A2 中日期的月份</td><td>4</td></tr></tbody></table><h3 id="16、年函数YEAR"><a href="#16、年函数YEAR" class="headerlink" title="16、年函数YEAR()"></a>16、年函数YEAR()</h3><blockquote><p>返回对应于某个日期的年份。 Year 作为 1900 - 9999 之间的整数返回。</p></blockquote><p>语法</p><blockquote><p>YEAR(serial_number)</p><p>YEAR 函数语法具有下列参数：</p><ul><li><strong>Serial_number</strong> 必需。 要查找的年份的日期。 应使用 DATE 函数输入日期，或者将日期作为其他公式或函数的结果输入。 例如，使用函数 DATE(2008,5,23) 输入 2008 年 5 月 23 日。 如果日期以文本形式输入，则会出现问题。</li></ul></blockquote><p>用法</p><table><thead><tr><th><strong>日期</strong></th><th></th><th></th></tr></thead><tbody><tr><td>2008-7-5</td><td></td><td></td></tr><tr><td>2010-7-5</td><td></td><td></td></tr><tr><td><strong>公式</strong></td><td><strong>描述（结果）</strong></td><td><strong>结果</strong></td></tr><tr><td>=YEAR(A3)</td><td>单元格 A3 中日期的年份 (2008)</td><td>2008</td></tr><tr><td>=YEAR(A4)</td><td>单元格 A4 中日期的年份 (2010)</td><td>2010</td></tr></tbody></table><h3 id="17、星期函数WEEKDAY"><a href="#17、星期函数WEEKDAY" class="headerlink" title="17、星期函数WEEKDAY()"></a>17、星期函数WEEKDAY()</h3><blockquote><p>返回对应于某个日期的一周中的第几天。 默认情况下，天数是 1（星期日）到 7（星期六）范围内的整数。</p></blockquote><p>语法</p><blockquote><p>WEEKDAY(serial_number,[return_type])</p><p>WEEKDAY 函数语法具有下列参数：</p><ul><li><strong>Serial_number</strong> 必需。 一个序列号，代表尝试查找的那一天的日期。 应使用 DATE 函数输入日期，或者将日期作为其他公式或函数的结果输入。 例如，使用函数 DATE(2008,5,23) 输入 2008 年 5 月 23 日。 如果日期以文本形式输入，则会出现问题。</li><li><strong>Return_type</strong> 可选。 用于确定返回值类型的数字。</li></ul><table><thead><tr><th><strong>Return_type</strong></th><th><strong>返回的数字</strong></th></tr></thead><tbody><tr><td>1 或省略</td><td>数字 1（星期日）到 7（星期六）。 同 Microsoft Excel 早期版本。</td></tr><tr><td>2</td><td>数字 1（星期一）到 7（星期日）。</td></tr><tr><td>3</td><td>数字 0（星期一）到 6（星期日）。</td></tr><tr><td>11</td><td>数字 1（星期一）到 7（星期日）。</td></tr><tr><td>12</td><td>数字 1（星期二）到数字 7（星期一）。</td></tr><tr><td>13</td><td>数字 1（星期三）到数字 7（星期二）。</td></tr><tr><td>14</td><td>数字 1（星期四）到数字 7（星期三）。</td></tr><tr><td>15</td><td>数字 1（星期五）到数字 7（星期四）。</td></tr><tr><td>16</td><td>数字 1（星期六）到数字 7（星期五）。</td></tr><tr><td>17</td><td>数字 1（星期日）到 7（星期六）。</td></tr></tbody></table></blockquote><p>备注</p><blockquote><ul><li>Microsoft Excel 可将日期存储为可用于计算的序列号。 默认情况下，1900 年 1 月 1 日的序列号是 1，而 2008 年 1 月 1 日的序列号是 39448，这是因为它距 1900 年 1 月 1 日有 39448 天。</li><li>如果当前日期基值的 serial_number 超出范围，则 #NUM！ 返回错误。</li><li>如果 return_type 超出了上表中指定的范围，则 #NUM！ 返回错误。</li></ul></blockquote><p>用法</p><table><thead><tr><th><strong>数据</strong></th><th></th><th></th></tr></thead><tbody><tr><td>2008-2-14</td><td></td><td></td></tr><tr><td><strong>公式</strong></td><td><strong>描述（结果）</strong></td><td><strong>结果</strong></td></tr><tr><td>=WEEKDAY(A2)</td><td>使用数字 1（星期日）到 7（星期六）表示的一周中的第几天 (5)</td><td>5</td></tr><tr><td>=WEEKDAY(A2, 2)</td><td>使用数字 1（星期一）到 7（星期日）表示的一周中的第几天 (4)</td><td>4</td></tr><tr><td>=WEEKDAY(A2, 3)</td><td>使用数字 0（星期一）到 6（星期日）表示的一周中的第几天 (3)</td><td>3</td></tr></tbody></table><h3 id="18、日期函数-DATE"><a href="#18、日期函数-DATE" class="headerlink" title="18、日期函数 DATE()"></a>18、日期函数 DATE()</h3><blockquote><p>返回表示特定日期的连续序列号。</p></blockquote><p>语法：</p><blockquote><p>DATE(year,month,day)</p><p>DATE 函数语法具有下列参数：</p><ul><li><strong>Year</strong> ：必需。*<strong>year*</strong> 参数的值可以包含一到四位数字。Excel 将根据计算机正在使用的日期系统来解释 *<strong>year*</strong> 参数。默认情况下，Microsoft Excel for Windows 使用的是 1900 日期系统，这表示第一个日期为 1900 年 1 月 1 日。</li></ul><p><strong>提示:</strong> 为避免出现意外结果，请对 *<strong>year*</strong> 参数使用四位数字。例如，“07”可能意味着“1907”或“2007”。因此，使用四位数的年份可避免混淆。</p><ul><li>如果 *<strong>year*</strong> 介于 0（零）到 1899 之间（包含这两个值），则 Excel 会将该值与 1900 相加来计算年份。例如，DATE(108,1,2) 返回 2008 年 1 月 2 日 (1900+108)。</li><li>如果 *<strong>year*</strong> 介于 1900 到 9999 之间（包含这两个值），则 Excel 将使用该数值作为年份。例如，DATE(2008,1,2) 将返回 2008 年 1 月 2 日。</li><li>如果 *<strong>year*</strong> 小于 0 或大于等于 10000，则 Excel 返回 错误值 #NUM!。</li><li><strong>Month</strong> 必需。一个正整数或负整数，表示一年中从 1 月至 12 月（一月到十二月）的各个月。</li><li>如果 *<strong>month*</strong> 大于 12，则 *<strong>month*</strong> 会从指定年份的第一个月开始加上该月份数。例如，DATE(2008,14,2) 返回表示 2009 年 2 月 2 日的序列数。</li><li>如果 *<strong>month*</strong> 小于 1，则 *<strong>month*</strong> 会从指定年份的第一个月开始减去该月份数，然后再加上 1 个月。例如，DATE(2008,-3,2) 返回表示 2007 年 9 月 2 日的序列号。</li><li><strong>Day</strong> 必需。一个正整数或负整数，表示一月中从 1 日到 31 日的各天。</li><li>如果 *<strong>day*</strong> 大于指定月中的天数，则 *<strong>day*</strong> 会从该月的第一天开始加上该天数。例如，DATE(2008,1,35) 返回表示 2008 年 2 月 4 日的序列数。</li><li>如果 *<strong>day*</strong> 小于 1，则 *<strong>day*</strong> 从指定月份的第一天开始减去该天数，然后再加上 1 天。例如，DATE(2008,1,-15) 返回表示 2007 年 12 月 16 日的序列号。</li></ul><p><strong>注意:</strong> Excel 可将日期存储为连续序列号，以便能在计算中使用它们。1900 年 1 月 1 日的序列号为 1，2008 年 1 月 1 日的序列号为 39448，这是因为它与 1900 年 1 月 1 日之间相差 39,447 天。需要更改数字格式（设置单元格格式）以显示正确的日期。</p></blockquote><p>用法</p><p><strong>=DATE(C2,A2,B2)</strong> 将单元格 C2 中的年、单元格 A2 中的月以及单元格 B2 中的日合并在一起，并将它们放入一个单元格内作为日期。</p><pre class="line-numbers language-excel" data-language="excel"><code class="language-excel">&#x3D;DATE(C2,A2,B2)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Excel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Excel </tag>
            
            <tag> Excel常用函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript加载速度</title>
      <link href="posts/55121.html"/>
      <url>posts/55121.html</url>
      
        <content type="html"><![CDATA[<h1 id="解决JS加载速度慢的问题"><a href="#解决JS加载速度慢的问题" class="headerlink" title="解决JS加载速度慢的问题"></a>解决JS加载速度慢的问题</h1><h2 id="传统形式加载js文件"><a href="#传统形式加载js文件" class="headerlink" title="传统形式加载js文件"></a><strong>传统形式加载js文件</strong></h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"js调用地址"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="高速加载js文件"><a href="#高速加载js文件" class="headerlink" title="高速加载js文件"></a><strong>高速加载js文件</strong></h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span> <span class="token comment">/* 请不要删除这段代码，因为这段代码起到了加速JS加载作用 */</span> document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;scr"</span><span class="token operator">+</span><span class="token string">"ipt src=\"你的js调用地址"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>sc<span class="token string">"+"</span>ript<span class="token operator">></span>"<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> JS加载速度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>冷门CSS样式</title>
      <link href="posts/41083.html"/>
      <url>posts/41083.html</url>
      
        <content type="html"><![CDATA[<h1 id="冷门但却很实用的css样式总汇"><a href="#冷门但却很实用的css样式总汇" class="headerlink" title="冷门但却很实用的css样式总汇"></a>冷门但却很实用的css样式总汇</h1><h2 id="Webkit-Input-Placeholder"><a href="#Webkit-Input-Placeholder" class="headerlink" title="::-Webkit-Input-Placeholder"></a><strong>::-Webkit-Input-Placeholder</strong></h2><p>input 的 H5 placeholder 属性，很好用，可以直接定义输入文本框里面的内容，唯一的缺点就是不能更改默认显示字体的颜色，不过我们可以直接利用::input-placeholder这个属性来设置字体颜色。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">::-webkit-input-placeholder</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* Chrome/Opera/Safari */</span>  <span class="token property">color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">::-moz-placeholder</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* Firefox 19+ */</span>  <span class="token property">color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">:-ms-input-placeholder</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* IE 10+ */</span>  <span class="token property">color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">:-moz-placeholder</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* Firefox 18- */</span>  <span class="token property">color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用-clearfix-清楚浮动，解决父类高度崩塌"><a href="#使用-clearfix-清楚浮动，解决父类高度崩塌" class="headerlink" title="使用 clearfix 清楚浮动，解决父类高度崩塌"></a><strong>使用 clearfix 清楚浮动，解决父类高度崩塌</strong></h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.clearfix</span> <span class="token punctuation">&#123;</span>    <span class="token property">zoom</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.clearfix:after</span> <span class="token punctuation">&#123;</span>     <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>     <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>     <span class="token property">font-size</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>     <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">" "</span><span class="token punctuation">;</span> <span class="token comment">/* 内容为空 */</span>     <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>     <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="p-selection选中文本后的背景色"><a href="#p-selection选中文本后的背景色" class="headerlink" title="p::selection选中文本后的背景色"></a><strong>p::selection选中文本后的背景色</strong></h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">p::selection</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>188<span class="token punctuation">,</span> 188<span class="token punctuation">,</span> 188<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="calc-function-计算属性值"><a href="#calc-function-计算属性值" class="headerlink" title="calc function, 计算属性值"></a><strong>calc function, 计算属性值</strong></h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">div</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% - 100px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="outline属性值"><a href="#outline属性值" class="headerlink" title="outline属性值"></a><strong>outline</strong>属性值</h2><p>不知道大家有没有一个困扰，就是在写input的时候，点击的时候总会有一个很丑的蓝色描边，但是找代码还找不到。这个其实很简单，用outline这个标签就可以很简单的解决掉这个烦人的问题。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">div</span> <span class="token punctuation">&#123;</span>    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> //移动浏览器默认的状态线    // <span class="token property">outline</span><span class="token punctuation">:</span> 5px dotted red<span class="token punctuation">;</span> 也可以设置样式<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Webkit-Playsinline"><a href="#Webkit-Playsinline" class="headerlink" title="Webkit-Playsinline"></a><strong>Webkit-Playsinline</strong></h2><p>支持vedio视频在手机页面内部播放，不用全屏。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css">&lt;video id=<span class="token string">"myvideo"</span> src=<span class="token string">"test.mp4"</span> webkit-playsinline=<span class="token string">"true"</span>>&lt;/video><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Css实现文本的各种换行状态"><a href="#Css实现文本的各种换行状态" class="headerlink" title="Css实现文本的各种换行状态"></a><strong>Css实现文本的各种换行状态</strong></h2><pre class="line-numbers language-css" data-language="css"><code class="language-css">//不换行<span class="token property">white-space</span><span class="token punctuation">:</span>nowrap<span class="token punctuation">;</span>//自动换行<span class="token property">word-wrap</span><span class="token punctuation">:</span> break-word<span class="token punctuation">;</span><span class="token property">word-break</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>//强制换行<span class="token property">word-break</span><span class="token punctuation">:</span>break-all<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="webkit-line-clamp"><a href="#webkit-line-clamp" class="headerlink" title="-webkit-line-clamp"></a><strong>-webkit-line-clamp</strong></h2><p>可以把 块容器 中的内容限制为指定的行数。并且在超过行数后，在最后一行显示”…” 这是正常的展示</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span> <span class="token comment">/*值必须为-webkit-box或者-webkit-inline-box*/</span> <span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span> <span class="token comment">/*值必须为vertical*/</span> <span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span> <span class="token comment">/*值为数字，表示一共显示几行*/</span> <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="caret-color"><a href="#caret-color" class="headerlink" title="caret-color"></a><strong>caret-color</strong></h2><p>用来定义插入光标（caret）的颜色，这里说的插入光标，就是那个在网页的可编辑器区域内，用来指示用户的输入具体会插入到哪里的那个一闪一闪的形似竖杠 | 的东西。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">caret-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 冷门CSS样式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5+CSS3命名规范</title>
      <link href="posts/11545.html"/>
      <url>posts/11545.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>任何代码编程都有各自特点的常用命名规范，div+css页面设计也不例外。遵守常用的css命名规范有利于代码的升级和扩展，也有利于让别人读懂你的css代码，让你的页面显得清晰有条理。</p><h2 id="css文件名命名规范"><a href="#css文件名命名规范" class="headerlink" title="css文件名命名规范"></a><strong>css文件名命名规范</strong></h2><blockquote><p>模块：module.css<br>基本共用：base.css<br>布局、版面：layout.css<br>主题：themes.css<br>专栏：columns.css<br>文字：font.css<br>表单：forms.css<br>补丁：mend.css<br>打印：print.css</p></blockquote><h2 id="页面结构元素div命名规范"><a href="#页面结构元素div命名规范" class="headerlink" title="页面结构元素div命名规范"></a><strong>页面结构元素div命名规范</strong></h2><blockquote><p>头：header<br>内容：content/container<br>尾：footer<br>导航：nav<br>侧栏：sidebar<br>栏目：column<br>页面外围控制整体布局宽度：wrapper<br>左右中：left right center<br>登录条：loginbar<br>标志：logo<br>广告：banner<br>页面主体：main<br>热点：hot<br>新闻：news<br>下载：download<br>子导航：subnav<br>菜单：menu<br>子菜单：submenu<br>搜索：search<br>友情链接：friendlink<br>页脚：footer<br>版权：copyright<br>滚动：scroll<br>内容：content<br>标签页：tab<br>文章列表：list<br>提示信息：msg<br>小技巧：tips<br>栏目标题：title<br>加入：joinus<br>指南：guild<br>服务：service<br>注册：regsiter<br>状态态：status<br>投票：vote<br>合作伙伴：partner</p></blockquote><h2 id="页面结构"><a href="#页面结构" class="headerlink" title="页面结构"></a><strong>页面结构</strong></h2><blockquote><p>容器: container<br>页头：header<br>内容：content/container<br>页面主体：main<br>页尾：footer<br>导航：nav<br>侧栏：sidebar<br>栏目：column<br>页面外围控制整体布局宽度：wrapper<br>左右中：left right center</p></blockquote><h2 id="颜色命名-使用颜色的名称或者16进制代码"><a href="#颜色命名-使用颜色的名称或者16进制代码" class="headerlink" title="颜色命名-使用颜色的名称或者16进制代码"></a><strong>颜色命名-使用颜色的名称或者16进制代码</strong></h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.red</span> <span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.f60</span> <span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span> #f60<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.ff8600</span> <span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span> #ff8600<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="字体大小命名-直接使用“font-字体大小”作为名称"><a href="#字体大小命名-直接使用“font-字体大小”作为名称" class="headerlink" title="字体大小命名-直接使用“font+字体大小”作为名称"></a><strong>字体大小命名-直接使用“font+字体大小”作为名称</strong></h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.font12px</span> <span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.font9pt</span> <span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 9pt<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="对齐样式命名-使用对齐目标的英文名称"><a href="#对齐样式命名-使用对齐目标的英文名称" class="headerlink" title="对齐样式命名-使用对齐目标的英文名称"></a><strong>对齐样式命名-使用对齐目标的英文名称</strong></h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.left</span> <span class="token punctuation">&#123;</span><span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.bottom</span> <span class="token punctuation">&#123;</span><span class="token property">float</span><span class="token punctuation">:</span>bottom<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="标题栏样式命名-使用“类别-功能”的方式命名"><a href="#标题栏样式命名-使用“类别-功能”的方式命名" class="headerlink" title="标题栏样式命名-使用“类别+功能”的方式命名"></a><strong>标题栏样式命名-使用“类别+功能”的方式命名</strong></h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.barnews</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token selector">.barproduct</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="注释书写规范"><a href="#注释书写规范" class="headerlink" title="注释书写规范"></a><strong>注释书写规范</strong></h2><ol><li><p>行间注释-直接写于属性值后面，如：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.search</span><span class="token punctuation">&#123;</span><span class="token property">border</span><span class="token punctuation">:</span>1px solid #fff<span class="token punctuation">;</span><span class="token comment">/*定义搜索输入框边框*/</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../images/icon.gif<span class="token punctuation">)</span></span> no-report #333<span class="token punctuation">;</span><span class="token comment">/*定义搜索框的背景*/</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>整段注释-分别在开始及结束地方加入注释，如：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*=====搜索条=====*/</span><span class="token selector">.search</span> <span class="token punctuation">&#123;</span><span class="token property">border</span><span class="token punctuation">:</span>1px solid #fff<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../images/icon.gif<span class="token punctuation">)</span></span> no-repeat #333<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*=====搜索条结束=====*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a><strong>注意事项</strong></h2><blockquote><p>1、一律小写；<br>2、尽量用英文；<br>3、尽量不缩写，除非一看就明白的单词；<br>4、属性的值一定要用双引号（“”）括起来，且一定要有值如class=”divcss5”，id=”divcss5”；<br>5、每个标签都要有开始和结束，且要有正确的层次，排版有规律工整。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 命名规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
            <tag> CSS3 </tag>
            
            <tag> HTML5+CSS3命名规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-报错解决记录</title>
      <link href="posts/27752.html"/>
      <url>posts/27752.html</url>
      
        <content type="html"><![CDATA[<h2 id="hexo-generate-hexo-g"><a href="#hexo-generate-hexo-g" class="headerlink" title="hexo generate (hexo g)"></a>hexo generate (hexo g)</h2><h3 id="Cannot-read-property-‘count’-of-undefined"><a href="#Cannot-read-property-‘count’-of-undefined" class="headerlink" title="Cannot read property ‘count’ of undefined"></a>Cannot read property ‘count’ of undefined</h3><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">FATAL Something&#39;s wrong. Maybe you can find the solution here: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;troubleshooting.htmlTypeError: Cannot read property &#39;count&#39; of undefined    at Hexo.module.exports (C:\Users\L\Desktop\MyBlog-matery\node_modules\hexo-baidu-url-submit\lib\generator.js:4:41)    at Hexo.tryCatcher (C:\Users\L\Desktop\MyBlog-matery\node_modules\bluebird\js\release\util.js:16:23)    at Hexo. (C:\Users\L\Desktop\MyBlog-matery\node_modules\bluebird\js\release\method.js:15:34)    at C:\Users\L\Desktop\MyBlog-matery\node_modules\hexo\lib\hexo\qipao.js:380:22    at tryCatcher (C:\Users\L\Desktop\MyBlog-matery\node_modules\bluebird\js\release\util.js:16:23)    at MappingPromiseArray._promiseFulfilled (C:\Users\L\Desktop\MyBlog-matery\node_modules\bluebird\js\release\map.js:68:38)    at MappingPromiseArray.PromiseArray._iterate (C:\Users\L\Desktop\MyBlog-matery\node_modules\bluebird\js\release\promise_array.js:115:31)    at MappingPromiseArray.init (C:\Users\L\Desktop\MyBlog-matery\node_modules\bluebird\js\release\promise_array.js:79:10)    at MappingPromiseArray._asyncInit (C:\Users\L\Desktop\MyBlog-matery\node_modules\bluebird\js\release\map.js:37:10)    at _drainQueueStep (C:\Users\L\Desktop\MyBlog-matery\node_modules\bluebird\js\release\async.js:97:12)    at _drainQueue (C:\Users\L\Desktop\MyBlog-matery\node_modules\bluebird\js\release\async.js:86:9)    at Async._drainQueues (C:\Users\L\Desktop\MyBlog-matery\node_modules\bluebird\js\release\async.js:102:5)    at Immediate.Async.drainQueues [as _onImmediate] (C:\Users\L\Desktop\MyBlog-matery\node_modules\bluebird\js\release\async.js:15:14)    at processImmediate (internal&#x2F;timers.js:439:21)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>因百度主动提交插件导致，已安装插件却未完成 <code>_config.yml</code>的信息完善</p></blockquote><p><strong>解决方案</strong></p><ol><li><p>完善<code>_config.yml</code></p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"><span class="token comment"># hexo-baidu-url-submit  百度主动推送</span><span class="token key atrule">baidu_url_submit</span><span class="token punctuation">:</span>  <span class="token key atrule">count</span><span class="token punctuation">:</span> <span class="token number">80</span> <span class="token comment"># 提交最新的一个链接</span>  <span class="token key atrule">host</span><span class="token punctuation">:</span> islu.cn <span class="token comment"># 在百度站长平台中注册的域名</span>  <span class="token key atrule">token</span><span class="token punctuation">:</span> TGtEmSO8ZImXXXXX <span class="token comment"># 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> baidu_urls.txt <span class="token comment"># 文本文档的地址， 新链接会保存在此文本文档里</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>删除百度主动推送插件</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">npm remove hexo-baidu-url-submithexo cleanhexo g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="部署或本地预览网页为空白"><a href="#部署或本地预览网页为空白" class="headerlink" title="部署或本地预览网页为空白"></a>部署或本地预览网页为空白</h3><p>运行<code>hexo g</code> 命令没有问题，但是编辑器打开 <code>public</code> 文件生成的 <code>index.html</code>中代码未自动生成</p><blockquote><p>因node.js的版本过高</p></blockquote><p><strong>解决方案</strong></p><p>降低node.js版本，建议使用node.js (12.13.0)</p><p><a href="https://nodejs.org/dist/latest-v12.x/">node.js 12.X版本传送门</a></p><h3 id="代码高亮问题-被编译成-234"><a href="#代码高亮问题-被编译成-234" class="headerlink" title="代码高亮问题({}被编译成#234)"></a>代码高亮问题({}被编译成#234)</h3><p>在你博客的根目录。<br>输入指令 <code>npm uninstall hexo --save</code> 卸载 现在的版本<br>在输入 <code>npm install hexo@加要安装的版本 --save</code>即可</p><p>eg:<code>npm install hexo@4.2.0 --save</code></p><h3 id="卜蒜子统计未显示问题"><a href="#卜蒜子统计未显示问题" class="headerlink" title="卜蒜子统计未显示问题"></a>卜蒜子统计未显示问题</h3><p>在<code>matery.css</code>中添加如下代码</p><pre class="line-numbers language-CSS" data-language="CSS"><code class="language-CSS">#busuanzi_container_site_pv,#busuanzi_value_site_pv,#busuanzi_container_site_uv &#123;    display: inline !important;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora编辑器</title>
      <link href="posts/10895.html"/>
      <url>posts/10895.html</url>
      
        <content type="html"><![CDATA[<h1 id="更新博客文章自动打开编辑器"><a href="#更新博客文章自动打开编辑器" class="headerlink" title="更新博客文章自动打开编辑器"></a>更新博客文章自动打开编辑器</h1><h2 id="在博客文件根目录scripts中新建new-js文件"><a href="#在博客文件根目录scripts中新建new-js文件" class="headerlink" title="在博客文件根目录scripts中新建new.js文件"></a>在博客文件根目录<code>scripts</code>中新建<code>new.js</code>文件</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> spawn <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exec<span class="token punctuation">;</span><span class="token comment">// Hexo 2.x 用户复制这段</span><span class="token comment">// hexo.on('new', function(path)&#123;</span><span class="token comment">//   spawn('start  "markdown编辑器绝对路径.exe" ' + path);</span><span class="token comment">// &#125;);</span><span class="token comment">// Hexo 3 用户复制这段</span>hexo<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'new'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">'start  "D:\Typora\Typora.exe" '</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color=red>D:\Typora\Typora.exe为编辑器绝对路径</font></p><h3 id="运行命令hexo-cl-amp-amp-hexo-g-amp-amp-hexo-d后即可"><a href="#运行命令hexo-cl-amp-amp-hexo-g-amp-amp-hexo-d后即可" class="headerlink" title="运行命令hexo cl&amp;&amp;hexo g&amp;&amp;hexo d后即可"></a>运行命令<code>hexo cl&amp;&amp;hexo g&amp;&amp;hexo d</code>后即可</h3><h3 id="新建文章命令hexo-new-quot-文章名-quot"><a href="#新建文章命令hexo-new-quot-文章名-quot" class="headerlink" title="新建文章命令hexo new &quot;文章名&quot;"></a>新建文章命令<code>hexo new &quot;文章名&quot;</code></h3><h2 id="可选项："><a href="#可选项：" class="headerlink" title="可选项："></a>可选项：</h2><h3 id="更改scaffolds文件夹中post-md内容"><a href="#更改scaffolds文件夹中post-md内容" class="headerlink" title="更改scaffolds文件夹中post.md内容"></a>更改<code>scaffolds</code>文件夹中<code>post.md</code>内容</h3><h3 id="可将默认生成文件头部格式更改为"><a href="#可将默认生成文件头部格式更改为" class="headerlink" title="可将默认生成文件头部格式更改为"></a>可将默认生成文件头部格式更改为</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token font-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> title <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> date <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 卢慧军 <span class="token comment"># 文章作者</span><span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg    <span class="token comment"># 文章特征图</span><span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token comment"># 表示该文章是否需要加入到首页轮播封面中</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg    <span class="token comment"># 表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</span><span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token comment"># 文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256(http://www.jsons.cn/sha/) 加密后的密码，防止被他人识破</span><span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token comment"># 是否开启 TOC(目录)，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token comment"># 是否开启数学公式支持 ，本文章是否开启 mathjax</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> <span class="token comment"># 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</span><span class="token key atrule">categories</span><span class="token punctuation">:</span> 工具 <span class="token comment"># 文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</span><span class="token key atrule">tags</span><span class="token punctuation">:</span> <span class="token comment"># 文章标签，一篇文章可以多个标签</span>  <span class="token punctuation">-</span> blog  <span class="token punctuation">-</span> hexo</span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Typora </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 写博文自动打开Typora编辑器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-友联监控</title>
      <link href="posts/38263.html"/>
      <url>posts/38263.html</url>
      
        <content type="html"><![CDATA[<h1 id="Matery主题添加友链监测页面"><a href="#Matery主题添加友链监测页面" class="headerlink" title="Matery主题添加友链监测页面"></a>Matery主题添加友链监测页面</h1><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>演示网址：<a href="https://islu.cn/supervise">传送门</a></p><p>图标皆来自 <a href="http://www.fontawesome.com.cn/">Font Awesome 中文网</a> 如有更好推荐，欢迎留言</p><p>有免费版也有付费版，以下只针对免费版。</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li>Uptime Robot是一个网站监控服务，每 5 分钟检查一次你设定的网站 或服务器，最多可以免费检查 50 个网站。</li><li>如果你的网站或者服务器宕机时，Uptime Robot会通过邮件提醒你。</li><li>有多种监控方式、支持自定义域名</li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li><p>访问官网，注册账号 ： <a href="https://uptimerobot.com/">传送门</a></p></li><li><p>注册账号</p></li><li><p>添加监视器。点击<code>add new monitor</code></p><blockquote><p>有四种监控方式，分别为<strong>Http(s)**、**Ping</strong>、<strong>Port</strong>、<strong>Keyword</strong>，在这里我选择Http(s)来监控我的网站，选择<strong>Ping</strong>来监控我的服务器。<strong>Port</strong>一般用于VPS监控。</p></blockquote><p>勾选“<strong>Alert Contacts To Notify</strong>“会有邮箱提醒。</p><p>若想添加本博客同款，至此请继续阅读Matery模板</p></li><li><p>打开公共状态页。</p><p>点击上方**<a href="https://uptimerobot.com/dashboard#mySettings">My Settings</a><strong>，选择右下角</strong>Add Public Status Pages<strong>。填写</strong>名称<strong>，以及</strong>Logo<strong>以及</strong>自定义域名**和是否设置密码。</p><p>自定义域名我是用的 <strong>bkjw.rogn.top</strong>，还得去域名控制台添加一下解析信息，记录类型为<strong>CNAME</strong>，记录值为<strong>stats.uptimerobot.com</strong></p><blockquote><p>虽然我没有用它自动生成的页面，但不排除会有需要的</p></blockquote></li></ol><h2 id="Matery模板"><a href="#Matery模板" class="headerlink" title="Matery模板"></a>Matery模板</h2><h3 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hexo new page supervise<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改<code>supervise</code>目录下的<code>index.md</code>的格式</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> supervise<span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"supervise"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"supervise"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-12-07 13:04:17</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="在主题配置文件中添加导航"><a href="#在主题配置文件中添加导航" class="headerlink" title="在主题配置文件中添加导航"></a>在主题配置文件中添加导航</h3><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"><span class="token key atrule">友链监测</span><span class="token punctuation">:</span>  <span class="token key atrule">url</span><span class="token punctuation">:</span> /supervise  <span class="token key atrule">icon</span><span class="token punctuation">:</span> fa fa<span class="token punctuation">-</span>desktop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="添加supervise-ejs"><a href="#添加supervise-ejs" class="headerlink" title="添加supervise.ejs"></a>添加supervise.ejs</h3><p>在 <code>matery/layout</code> 下新建 <code>supervise.ejs</code></p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">table,td,th</span><span class="token punctuation">&#123;</span><span class="token property">border</span><span class="token punctuation">:</span>0<span class="token punctuation">&#125;</span><span class="token selector">.card-supervise</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span>24px<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span>0 0 2px 2px<span class="token punctuation">&#125;</span><span class="token selector">.wname</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span>16px<span class="token punctuation">&#125;</span><span class="token selector">.card-panel</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#fff<span class="token punctuation">&#125;</span><span class="token selector">.supervise_details</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span>38px 0 15px -4px<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span>1.6rem<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span>700<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span>1.7rem<span class="token punctuation">&#125;</span><span class="token selector">.panel-heading</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span>20px<span class="token punctuation">&#125;</span><span class="token selector">.teal</span><span class="token punctuation">&#123;</span><span class="token property">margin-right</span><span class="token punctuation">:</span>5px<span class="token punctuation">&#125;</span><span class="token selector">.check>tbody>tr>td</span><span class="token punctuation">&#123;</span><span class="token property">padding-top</span><span class="token punctuation">:</span>11px<span class="token punctuation">;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span>11px<span class="token punctuation">&#125;</span><span class="token selector">.check th</span><span class="token punctuation">&#123;</span><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">&#125;</span><span class="token selector">.check .center</span><span class="token punctuation">&#123;</span><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token property">vertical-align</span><span class="token punctuation">:</span>middle<span class="token punctuation">&#125;</span><span class="token selector">.check .sertitle</span><span class="token punctuation">&#123;</span><span class="token property">vertical-align</span><span class="token punctuation">:</span>middle<span class="token punctuation">&#125;</span><span class="token selector">.status-success</span><span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span>#5cb85c<span class="token punctuation">&#125;</span><span class="token selector">.status-warning</span><span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span>#f0ad4e<span class="token punctuation">&#125;</span><span class="token selector">.status-danger</span><span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span>#d9534f<span class="token punctuation">&#125;</span><span class="token selector">#server-container</span><span class="token punctuation">&#123;</span><span class="token property">border-bottom</span><span class="token punctuation">:</span>1px solid #ddd<span class="token punctuation">&#125;</span><span class="token selector">.barl>td</span><span class="token punctuation">&#123;</span><span class="token property">border-top</span><span class="token punctuation">:</span>none<span class="token important">!important</span><span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span>0<span class="token important">!important</span><span class="token punctuation">&#125;</span><span class="token selector">.barl .progress</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>8px<span class="token punctuation">;</span><span class="token property">box-shadow</span><span class="token punctuation">:</span>none<span class="token punctuation">&#125;</span><span class="token selector">.barl .progress .progress-bar</span><span class="token punctuation">&#123;</span><span class="token property">box-shadow</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token property">opacity</span><span class="token punctuation">:</span>.7<span class="token punctuation">&#125;</span><span class="token selector">.barl .progress .progress-bar:hover</span><span class="token punctuation">&#123;</span><span class="token property">opacity</span><span class="token punctuation">:</span>1<span class="token punctuation">&#125;</span><span class="token selector">.barl .progress .progress-bar-default</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span>#efefef<span class="token punctuation">&#125;</span><span class="token selector">.progress .tooltip .tooltip-inner .ttime</span><span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span>#a3a3a3<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span>11px<span class="token punctuation">&#125;</span><span class="token selector">.credit</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span>12px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#bbb<span class="token punctuation">&#125;</span><span class="token selector">.credit a</span><span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span>#999<span class="token punctuation">&#125;</span><span class="token selector">.credit .pipe</span><span class="token punctuation">&#123;</span><span class="token property">padding-left</span><span class="token punctuation">:</span>6px<span class="token punctuation">;</span><span class="token property">padding-right</span><span class="token punctuation">:</span>6px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#ddd<span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/bg-cover'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">min-height</span><span class="token punctuation">:</span> 131px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container chip-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tag-title center-align<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-desktop<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>友链状态监测<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>supervise_details<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>本页面是友情链接状态监控，展示了全部链接的当前运行状态。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panel panel-info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panel-heading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>各友情链接当前状态<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panel-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>panel-heading<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alert alert-warning hide<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alert<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>当前状态：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>部分友链发生异常，我们将尽快修复。                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stattip-ok<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alert alert-success hide<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alert<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>当前状态：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>所有友链正常运行中，没有发现异常。                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stattip-load<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alert alert-info<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alert<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>当前状态：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>正在检测运行状态，请稍候..                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table-responsive<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-hover check<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>server-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>server-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alert alert-info<span class="token punctuation">"</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span>0</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                            距离下次监测刷新时间:                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-refresh<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>last-update<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>template/mustache<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>server-template<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token operator">&lt;</span>tr <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"&#123;&#123;alert&#125;&#125;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>td rowspan<span class="token operator">=</span><span class="token string">"2"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sertitle"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card-panel &#123;&#123;label&#125;&#125;"</span><span class="token operator">></span><span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-&#123;&#123;statusicon&#125;&#125;"</span>style<span class="token operator">=</span><span class="token string">"padding-left: 2px;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>statustxt<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"wname"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>friendlyname<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>            <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>#charts<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>            <span class="token operator">&lt;</span>td <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"status-&#123;&#123;uptype&#125;&#125; set-tooltip"</span> data<span class="token operator">-</span>toggle<span class="token operator">=</span><span class="token string">"tooltip"</span> data<span class="token operator">-</span>placement<span class="token operator">=</span><span class="token string">"top"</span> title<span class="token operator">=</span><span class="token string">"&#123;&#123;uptime&#125;&#125;"</span><span class="token operator">></span><span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-&#123;&#123;upsign&#125;&#125;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>            <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token operator">/</span>charts<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>        <span class="token operator">&lt;</span>tr <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"&#123;&#123;alert&#125;&#125; barl"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>td colspan<span class="token operator">=</span><span class="token string">"8"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"barls"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"progress"</span><span class="token operator">></span>                    <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>#progress<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"progress-bar progress-bar-&#123;&#123;types&#125;&#125; set-tooltip"</span> style<span class="token operator">=</span><span class="token string">"width: &#123;&#123;len&#125;&#125;%"</span> data<span class="token operator">-</span>toggle<span class="token operator">=</span><span class="token string">"tooltip"</span> data<span class="token operator">-</span>placement<span class="token operator">=</span><span class="token string">"top"</span> title<span class="token operator">=</span><span class="token string">"&#123;&#123;stattip&#125;&#125;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>                    <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token operator">/</span>progress<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">function</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span>t</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">function</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span>t</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span><span class="token punctuation">(</span>n<span class="token operator">+=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">&lt;</span>t<span class="token operator">?</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token operator">++</span>t<span class="token operator">-</span>n<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"0"</span><span class="token punctuation">)</span><span class="token operator">+</span>n<span class="token operator">:</span>n<span class="token punctuation">&#125;</span><span class="token keyword">var</span> u<span class="token operator">=</span>t<span class="token operator">?</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">1e3</span><span class="token operator">*</span>t<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"Sunday"</span><span class="token punctuation">,</span><span class="token string">"Monday"</span><span class="token punctuation">,</span><span class="token string">"Tuesday"</span><span class="token punctuation">,</span><span class="token string">"Wednesday"</span><span class="token punctuation">,</span><span class="token string">"Thursday"</span><span class="token punctuation">,</span><span class="token string">"Friday"</span><span class="token punctuation">,</span><span class="token string">"Saturday"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>o<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token operator">:</span><span class="token string">"st"</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">:</span><span class="token string">"nd"</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token operator">:</span><span class="token string">"rd"</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token operator">:</span><span class="token string">"st"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token operator">:</span><span class="token string">"nd"</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token operator">:</span><span class="token string">"rd"</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token operator">:</span><span class="token string">"st"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token string">"January"</span><span class="token punctuation">,</span><span class="token string">"February"</span><span class="token punctuation">,</span><span class="token string">"March"</span><span class="token punctuation">,</span><span class="token string">"April"</span><span class="token punctuation">,</span><span class="token string">"May"</span><span class="token punctuation">,</span><span class="token string">"June"</span><span class="token punctuation">,</span><span class="token string">"July"</span><span class="token punctuation">,</span><span class="token string">"August"</span><span class="token punctuation">,</span><span class="token string">"September"</span><span class="token punctuation">,</span><span class="token string">"October"</span><span class="token punctuation">,</span><span class="token string">"November"</span><span class="token punctuation">,</span><span class="token string">"December"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>i<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function-variable function">d</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token function">e</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">j</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">D</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> i<span class="token punctuation">.</span><span class="token function">l</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">j</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> u<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">l</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> r<span class="token punctuation">[</span>i<span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">N</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> i<span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">S</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> o<span class="token punctuation">[</span>i<span class="token punctuation">.</span><span class="token function">j</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">?</span>o<span class="token punctuation">[</span>i<span class="token punctuation">.</span><span class="token function">j</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token string">"th"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">w</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> u<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">z</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span><span class="token punctuation">(</span>u<span class="token operator">-</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"/1/1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">864e5</span><span class="token operator">>></span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">W</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> n<span class="token punctuation">,</span>t<span class="token operator">=</span>i<span class="token punctuation">.</span><span class="token function">z</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token number">364</span><span class="token operator">+</span>i<span class="token punctuation">.</span><span class="token constant">L</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>t<span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"/1/1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">return</span> e<span class="token operator">&lt;=</span><span class="token number">2</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">&lt;=</span><span class="token number">2</span><span class="token operator">-</span>e<span class="token operator">?</span><span class="token number">1</span><span class="token operator">:</span>t<span class="token operator">&lt;=</span><span class="token number">2</span><span class="token operator">&amp;&amp;</span><span class="token number">4</span><span class="token operator">&lt;=</span>r<span class="token operator">&amp;&amp;</span><span class="token number">6</span><span class="token operator">-</span>r<span class="token operator">&lt;=</span>t<span class="token operator">?</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">+</span><span class="token string">"/12/31"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string">"W"</span><span class="token punctuation">,</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1e3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token number">1</span><span class="token operator">+</span><span class="token punctuation">(</span>r<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token operator">?</span><span class="token punctuation">(</span>t<span class="token operator">+</span>r<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">7</span><span class="token operator">:</span><span class="token punctuation">(</span>t<span class="token operator">-</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token operator">-</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">F</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> a<span class="token punctuation">[</span>i<span class="token punctuation">.</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">m</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token function">e</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">M</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> i<span class="token punctuation">.</span><span class="token constant">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">n</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> u<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">t</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> n<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">2</span><span class="token operator">==</span><span class="token punctuation">(</span>n<span class="token operator">=</span>u<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token number">28</span><span class="token operator">+</span>i<span class="token punctuation">.</span><span class="token constant">L</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token number">1</span><span class="token operator">&amp;</span>n<span class="token operator">&amp;&amp;</span>n<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">||</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token number">7</span><span class="token operator">&lt;</span>n<span class="token operator">?</span><span class="token number">31</span><span class="token operator">:</span><span class="token number">30</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">L</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> n<span class="token operator">=</span>i<span class="token punctuation">.</span><span class="token constant">Y</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">3</span><span class="token operator">&amp;</span>n<span class="token operator">||</span><span class="token operator">!</span><span class="token punctuation">(</span>n<span class="token operator">%</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>n<span class="token operator">%</span><span class="token number">400</span><span class="token operator">?</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">Y</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> u<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">y</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">a</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token number">11</span><span class="token operator">&lt;</span>u<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token string">"pm"</span><span class="token operator">:</span><span class="token string">"am"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">A</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> i<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">B</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> n<span class="token operator">=</span><span class="token number">60</span><span class="token operator">*</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">getTimezoneOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token operator">=</span><span class="token number">3600</span><span class="token operator">*</span>u<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">60</span><span class="token operator">*</span>u<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>u<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>n<span class="token punctuation">,</span>e<span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>t<span class="token operator">/</span><span class="token number">86.4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">1e3</span><span class="token operator">&lt;</span>e<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>e<span class="token operator">-=</span><span class="token number">1e3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>e<span class="token operator">+=</span><span class="token number">1e3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">==</span><span class="token function">String</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>e<span class="token operator">=</span><span class="token string">"00"</span><span class="token operator">+</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">==</span><span class="token function">String</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>e<span class="token operator">=</span><span class="token string">"0"</span><span class="token operator">+</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">g</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> u<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">12</span><span class="token operator">||</span><span class="token number">12</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">G</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> u<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">h</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token function">e</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">H</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token function">e</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">i</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token function">e</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">s</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token function">e</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">O</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> n<span class="token operator">=</span><span class="token function">e</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">getTimezoneOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> n<span class="token operator">=</span><span class="token number">0</span><span class="token operator">&lt;</span>u<span class="token punctuation">.</span><span class="token function">getTimezoneOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token string">"-"</span><span class="token operator">+</span>n<span class="token operator">:</span><span class="token string">"+"</span><span class="token operator">+</span>n<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">P</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> n<span class="token operator">=</span>i<span class="token punctuation">.</span><span class="token constant">O</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> n<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">":"</span><span class="token operator">+</span>n<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">c</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> i<span class="token punctuation">.</span><span class="token constant">Y</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"-"</span><span class="token operator">+</span>i<span class="token punctuation">.</span><span class="token function">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"-"</span><span class="token operator">+</span>i<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"T"</span><span class="token operator">+</span>i<span class="token punctuation">.</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">":"</span><span class="token operator">+</span>i<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">":"</span><span class="token operator">+</span>i<span class="token punctuation">.</span><span class="token function">s</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>i<span class="token punctuation">.</span><span class="token constant">P</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function-variable function">U</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1e3</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">return</span> n<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\]?([a-zA-Z])</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span>t</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> ret<span class="token operator">=</span>n<span class="token operator">==</span>t<span class="token operator">&amp;&amp;</span>i<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">?</span>i<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>t<span class="token punctuation">,</span>ret<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token string">'/js/mustache.min.js'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token string">'/js/uptimerobot.js'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token string">'/js/upscuits.js'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">jQuery</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span>myApp<span class="token punctuation">.</span>dashboard<span class="token punctuation">.</span>init<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="引入JS文件"><a href="#引入JS文件" class="headerlink" title="引入JS文件"></a>引入JS文件</h3><ol><li><p>下载JS文件</p><p><a href="https://cdn.jsdelivr.net/gh/ialoe/ialoe.github.io@master/js/mustache.min.js">mustache.min.js</a></p><p><a href="https://cdn.jsdelivr.net/gh/ialoe/ialoe.github.io@master/js/upscuits.js">upscuits.js</a></p></li><li><p>新建JS文件</p><p>配置JS文件中 <code>uptimerobot.js</code> 内容</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> __apiKeys <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'xxxxxxxxxx'</span><span class="token punctuation">,</span><span class="token comment">// API 1</span>    <span class="token string">'xxxxxxxxxx'</span><span class="token comment">// API 2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//https://uptimerobot.com/ 设置要监控的域名或者ip 获取到key</span><span class="token comment">// refresh interval (in seconds 暂定五分钟)</span><span class="token keyword">var</span> __refresh <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="获取API"><a href="#获取API" class="headerlink" title="获取API"></a>获取API</h3><p>将API复制到<code>uptimerobot.js</code> 中即可</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Hexo添加友链监控页面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-导航页</title>
      <link href="posts/29540.html"/>
      <url>posts/29540.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo添加导航页"><a href="#Hexo添加导航页" class="headerlink" title="Hexo添加导航页"></a>Hexo添加导航页</h1><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><a href="https://islu.cn/navigate" alt="效果演示">效果演示</a></p><h2 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h2><p>首先新建页面，执行下面的命令</p><p><code>hexo new page navigate</code></p><p>修改<code>navigate</code>目录下的<code>index.md</code>的格式</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token font-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 导航<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-10-18 15:19:14</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"navigate"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"navigate"</span></span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="在主题配置文件中添加导航"><a href="#在主题配置文件中添加导航" class="headerlink" title="在主题配置文件中添加导航"></a>在主题配置文件中添加导航</h2><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"><span class="token comment"># main menu navigation url and icon</span><span class="token comment"># 配置菜单导航的名称、路径和图标icon.</span><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">标签</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">时光轴</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>hourglass<span class="token punctuation">-</span>half  <span class="token key atrule">留言板</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /contact    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>comments  <span class="token key atrule">关于</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle    <span class="token key atrule">友情链接</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book  <span class="token key atrule">Select</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>life<span class="token punctuation">-</span>ring    <span class="token key atrule">children</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 导航        <span class="token key atrule">url</span><span class="token punctuation">:</span> /navigate        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>location<span class="token punctuation">-</span>arrow      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 相册        <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="添加navigate-ejs页面"><a href="#添加navigate-ejs页面" class="headerlink" title="添加navigate.ejs页面"></a>添加<code>navigate.ejs</code>页面</h2><p>在 <code>matery/layout</code> 下新建 <code>navigate.ejs</code></p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">dd,dl,dt,form,h1,h2,h3,h4,h5,h6,li,p,ul</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span>14px<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span>400<span class="token punctuation">&#125;</span><span class="token selector">img</span><span class="token punctuation">&#123;</span><span class="token property">border-style</span><span class="token punctuation">:</span>none<span class="token punctuation">&#125;</span><span class="token selector">li</span><span class="token punctuation">&#123;</span><span class="token property">list-style</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">&#125;</span><span class="token selector">a</span><span class="token punctuation">&#123;</span><span class="token property">text-decoration</span><span class="token punctuation">:</span>none<span class="token punctuation">&#125;</span><span class="token selector">.card</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span>25<span class="token punctuation">,</span>240<span class="token punctuation">,</span>229<span class="token punctuation">,</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>96%<span class="token punctuation">;</span><span class="token property">margin-left</span><span class="token punctuation">:</span>2%<span class="token punctuation">&#125;</span><span class="token selector">.baidu</span><span class="token punctuation">&#123;</span><span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span><span class="token property">margin-left</span><span class="token punctuation">:</span>100px<span class="token punctuation">&#125;</span><span class="token selector">.baidu form</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">&#125;</span><span class="token selector">.Select-box ul</span><span class="token punctuation">&#123;</span><span class="token property">height</span><span class="token punctuation">:</span>40px<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span>-1px<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token property">z-index</span><span class="token punctuation">:</span>9999<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>#fff<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span>1px solid #ccc<span class="token punctuation">;</span><span class="token property">border-top</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">&#125;</span><span class="token selector">.Select-box li</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span>60px<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span>40px<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span>14px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#484848<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token property">cursor</span><span class="token punctuation">:</span>pointer<span class="token punctuation">&#125;</span><span class="token selector">.Select-box li:hover</span><span class="token punctuation">&#123;</span><span class="token property">background</span><span class="token punctuation">:</span>#3385ff<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#fff<span class="token punctuation">&#125;</span><span class="token selector">.Select-box .this_s</span><span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span>#317ef3<span class="token punctuation">&#125;</span><span class="token selector">.Select-box .this_s:hover</span><span class="token punctuation">&#123;</span><span class="token property">background</span><span class="token punctuation">:</span>#fff<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#317ef3<span class="token punctuation">&#125;</span><span class="token selector">.qingkong</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span><span class="token property">right</span><span class="token punctuation">:</span>120px<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span>12px<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>18px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>18px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span>18px<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span>16px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#666<span class="token punctuation">;</span><span class="token property">cursor</span><span class="token punctuation">:</span>pointer<span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span>14px<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">&#125;</span><span class="token selector">.qingkong:hover</span><span class="token punctuation">&#123;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.2<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.qingkong:active</span><span class="token punctuation">&#123;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.3<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.baidu-2</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>110px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span>0 auto<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>0 0<span class="token punctuation">;</span><span class="token property">padding-top</span><span class="token punctuation">:</span>50px<span class="token punctuation">&#125;</span><span class="token selector">.baidu-2 form</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span>520px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span>0 auto<span class="token punctuation">&#125;</span><span class="token selector">.baidu-2 input</span><span class="token punctuation">&#123;</span><span class="token property">padding</span><span class="token punctuation">:</span>13px 8px<span class="token punctuation">;</span><span class="token property">opacity</span><span class="token punctuation">:</span>.9<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span>15px<span class="token punctuation">&#125;</span><span class="token selector">#Select-2</span><span class="token punctuation">&#123;</span><span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">&#125;</span><span class="token selector">.Select-box-2</span><span class="token punctuation">&#123;</span><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">&#125;</span><span class="token selector">.Select-box-2 ul</span><span class="token punctuation">&#123;</span><span class="token property">height</span><span class="token punctuation">:</span>46px<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span>1px<span class="token punctuation">;</span><span class="token property">z-index</span><span class="token punctuation">:</span>9999<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>.9<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span>1px solid #ccc<span class="token punctuation">;</span><span class="token property">border-top</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">&#125;</span><span class="token selector">.Select-box-2 li</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span>60px<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span>46px<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span>15px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#484848<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token property">cursor</span><span class="token punctuation">:</span>pointer<span class="token punctuation">&#125;</span><span class="token selector">.Select-box-2 li:hover</span><span class="token punctuation">&#123;</span><span class="token property">background</span><span class="token punctuation">:</span>#3385ff<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#fff<span class="token punctuation">&#125;</span><span class="token selector">.Select-box-2 .this_s</span><span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span>#317ef3<span class="token punctuation">&#125;</span><span class="token selector">.Select-box-2 .this_s:hover</span><span class="token punctuation">&#123;</span><span class="token property">background</span><span class="token punctuation">:</span>0 0<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#317ef3<span class="token punctuation">&#125;</span><span class="token selector">#kw-2</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span>335px<span class="token punctuation">;</span><span class="token property">outline</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span>1px solid #ccc<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>.2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#000<span class="token punctuation">;</span><span class="token property">padding-left</span><span class="token punctuation">:</span>70px<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span>700<span class="token punctuation">&#125;</span><span class="token selector">#su-2</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span>90px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>#00f<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token property">border-top</span><span class="token punctuation">:</span>#3385ff 1px solid<span class="token punctuation">;</span><span class="token property">border-bottom</span><span class="token punctuation">:</span>1px solid #2d78f4<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#fff<span class="token punctuation">;</span><span class="token property">cursor</span><span class="token punctuation">:</span>pointer<span class="token punctuation">;</span><span class="token property">outline</span><span class="token punctuation">:</span>0<span class="token punctuation">&#125;</span><span class="token selector">#su-2:hover</span><span class="token punctuation">&#123;</span><span class="token property">background</span><span class="token punctuation">:</span>#00f<span class="token punctuation">;</span><span class="token property">border-bottom</span><span class="token punctuation">:</span>1px solid #00f<span class="token punctuation">&#125;</span><span class="token selector">#su-2:active</span><span class="token punctuation">&#123;</span><span class="token property">background</span><span class="token punctuation">:</span>#00f<span class="token punctuation">;</span><span class="token property">box-shadow</span><span class="token punctuation">:</span>inset 1px 1px 3px #00f<span class="token punctuation">;</span><span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span>inset 1px 1px 3px #00f<span class="token punctuation">&#125;</span><span class="token selector">.jj-list-tit</span><span class="token punctuation">&#123;</span><span class="token property">font-size</span><span class="token punctuation">:</span>16px<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span>25px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#fff<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span><span class="token property">padding-left</span><span class="token punctuation">:</span>38.5%<span class="token punctuation">&#125;</span><span class="token selector">.jj-list-con</span><span class="token punctuation">&#123;</span><span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span>0 auto<span class="token punctuation">&#125;</span><span class="token selector">.jj-list-con li</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span>31.333%<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span>1%<span class="token punctuation">&#125;</span><span class="token selector">.link-3</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.35<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>#fff<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span>13px<span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span>35px<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span>4px 0<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span>2px<span class="token punctuation">;</span><span class="token property">transition</span><span class="token punctuation">:</span>all .2s<span class="token punctuation">&#125;</span><span class="token selector">.link-3:hover</span><span class="token punctuation">&#123;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.45<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span>15px<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span>700<span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>584px<span class="token punctuation">)</span></span><span class="token punctuation">&#123;</span><span class="token selector">.navi-height</span><span class="token punctuation">&#123;</span><span class="token property">height</span><span class="token punctuation">:</span>1300px<span class="token punctuation">&#125;</span><span class="token selector">.link-box</span><span class="token punctuation">&#123;</span><span class="token property">margin-top</span><span class="token punctuation">:</span>5%<span class="token punctuation">&#125;</span><span class="token selector">.large-screen</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>584px<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>993px<span class="token punctuation">)</span></span><span class="token punctuation">&#123;</span><span class="token selector">.navi-height</span><span class="token punctuation">&#123;</span><span class="token property">height</span><span class="token punctuation">:</span>800px<span class="token punctuation">&#125;</span><span class="token selector">.link-box</span><span class="token punctuation">&#123;</span><span class="token property">margin-top</span><span class="token punctuation">:</span>5%<span class="token punctuation">&#125;</span><span class="token selector">.large-screen</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span>993px<span class="token punctuation">)</span></span><span class="token punctuation">&#123;</span><span class="token selector">.navi-height</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>100%<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.page-footer</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navi-height bg-cover pd-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-box container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>baidu baidu-2 large-screen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>f<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.baidu.com/<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Select-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Select-box-2<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>baidu<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">height</span><span class="token punctuation">:</span>46px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>this_s<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百 · 度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bing_s<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>必 · 应<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>google_s<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>谷 · 歌<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>baidu_s<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百 · 度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wd<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>kw-2<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>off<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>qingkong<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>qingkong<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>清 · 空<span class="token punctuation">"</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>x<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>搜 · 索<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>su-2<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keylist<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row tags-posts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col s12 m6 l4 friend-div aos-init<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoom-in-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jj-list-tit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>娱乐 · 影视<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jj-list-con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.jd.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>京东<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.taobao.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>淘宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.tmall.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>天猫<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://v.qq.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>腾讯视频<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.iqiyi.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>爱奇艺<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.bilibili.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>哔哩哔哩<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://music.163.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>网易云音乐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://y.qq.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>QQ音乐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.kugou.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>酷狗音乐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col s12 m6 l4 friend-div aos-init<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoom-in-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jj-list-tit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>社区 · Code<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jj-list-con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mobaijun.com/contact/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>留言<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://github.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>GitHub<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://coding.net/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Coding<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://juejin.im/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>掘金<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://gitee.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>码云<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.csdn.net/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>CSDN<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.jianshu.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>简书<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://segmentfault.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>思否<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cloud.tencent.com/developer/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>云+社区<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col s12 m6 l4 friend-div aos-init<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoom-in-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jj-list-tit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>实用 · 工具<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jj-list-con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://mdnice.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Markdown编辑器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://translate.google.cn/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>谷歌翻译<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.uupoop.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>在线PS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.processon.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>思维导图<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://wallhaven.cc/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>超清壁纸<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cli.im/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>二维码生成<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://tool.cc/pic-resizer/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图片在线压缩<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.iconfont.cn/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>阿里巴巴图标库<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://my.openwrite.cn/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>OW分发<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col s12 m6 l4 friend-div aos-init<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoom-in-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jj-list-tit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>编程 · 学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jj-list-con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.oschina.net/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>开源中国<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://htmldog.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>HTML狗<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.icourse163.org/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>中国大学慕课<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.imooc.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>慕课网<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.wxapp-union.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>小程序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.runoob.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>菜鸟教程<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://blog.51cto.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>51CTO<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.shiyanlou.com/library/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>实验楼<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://spring.io/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col s12 m6 l4 friend-div aos-init<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoom-in-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jj-list-tit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>资讯 · 趋势<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jj-list-con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.huxiu.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>虎嗅<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://insights.stackoverflow.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>技术调查<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.asciiworld.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>摸鱼<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://sspai.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>少数派<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://zh.wikihow.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>WikeHom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.awesomes.cn/rank?sort=hot<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>前端趋势<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://github-trending.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>GitHub趋势<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.tiobe.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>编程趋势<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://trends.google.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Google趋势<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col s12 m6 l4 friend-div aos-init<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoom-in-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jj-list-tit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>搜索 · 其他<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jj-list-con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://ac.scmor.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>谷歌镜像<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.pansoso.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>网盘搜索<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://tool.mkblog.cn/music/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>音乐搜索<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.upyun.com/?utm_source=lianmeng<span class="token entity named-entity" title="&amp;">&amp;amp;</span>utm_medium=referral<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>又拍云<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://carbon.now.sh/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>代码图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.zhipin.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Boos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.fontawesome.com.cn/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图标库<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.qvdv.com/tools/qvdv-guid.html<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>在线工具<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://zhongguose.com/<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>external nofollow noreferrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link-3<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>中国色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".Select-box ul"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"height"</span><span class="token punctuation">,</span><span class="token string">"auto"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"height"</span><span class="token punctuation">,</span><span class="token string">"40px"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".Select-box-2 ul"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"height"</span><span class="token punctuation">,</span><span class="token string">"auto"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"height"</span><span class="token punctuation">,</span><span class="token string">"46px"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".Select-box li"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token string">"baidu_s"</span><span class="token operator">==</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token string">"https://www.baidu.com/s"</span><span class="token punctuation">,</span>_name<span class="token operator">=</span><span class="token string">"wd"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"google_s"</span><span class="token operator">==</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token string">"https://www.google.com/search"</span><span class="token punctuation">,</span>_name<span class="token operator">=</span><span class="token string">"q"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"bing_s"</span><span class="token operator">==</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token string">"https://www.bing.com/search"</span><span class="token punctuation">,</span>_name<span class="token operator">=</span><span class="token string">"q"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".baidu form"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"action"</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".this_s"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#kw"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span>_name<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".Select-box ul"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"height"</span><span class="token punctuation">,</span><span class="token string">"40px"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".Select-box-2 li"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token string">"baidu_s"</span><span class="token operator">==</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token string">"https://www.baidu.com/s"</span><span class="token punctuation">,</span>_name<span class="token operator">=</span><span class="token string">"wd"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"google_s"</span><span class="token operator">==</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token string">"https://www.google.com/search"</span><span class="token punctuation">,</span>_name<span class="token operator">=</span><span class="token string">"q"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"bing_s"</span><span class="token operator">==</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token string">"https://www.bing.com/search"</span><span class="token punctuation">,</span>_name<span class="token operator">=</span><span class="token string">"q"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".baidu form"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"action"</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".this_s"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#kw-2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span>_name<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".Select-box-2 ul"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"height"</span><span class="token punctuation">,</span><span class="token string">"48px"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="预览部署"><a href="#预览部署" class="headerlink" title="预览部署"></a>预览部署</h2><p>执行相关命令</p><p>预览</p><p><code>hexo cl&amp;&amp;hexo g&amp;&amp;hexo s</code></p><p>部署</p><p><code>hexo cl&amp;&amp;hexo g&amp;&amp;hexo d</code></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Hexo添加网址导航页 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-live2D添加</title>
      <link href="posts/47141.html"/>
      <url>posts/47141.html</url>
      
        <content type="html"><![CDATA[<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p><code>npm install --save hexo-helper-live2d</code></p><p>等待加载就OK！</p><h3 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h3><p>hexo的配置文件 <code>_config.yml</code> 中添加如下配置:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 看板娘</span><span class="token key atrule">live2d</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 是否开启看板娘</span>    <span class="token key atrule">scriptFrom</span><span class="token punctuation">:</span> local    <span class="token key atrule">pluginRootPath</span><span class="token punctuation">:</span> live2dw/    <span class="token key atrule">pluginJsPath</span><span class="token punctuation">:</span> lib/    <span class="token key atrule">pluginModelPath</span><span class="token punctuation">:</span> assets/    <span class="token key atrule">tagMode</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">log</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">model</span><span class="token punctuation">:</span>        <span class="token key atrule">use</span><span class="token punctuation">:</span> live2d<span class="token punctuation">-</span>widget<span class="token punctuation">-</span>model<span class="token punctuation">-</span>shizuku <span class="token comment"># 模型名称</span>    <span class="token key atrule">display</span><span class="token punctuation">:</span>        <span class="token key atrule">superSample</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token comment"># rate for super sampling rate 超采样等级</span>        <span class="token key atrule">position</span><span class="token punctuation">:</span> right <span class="token comment"># Left of right side to show 显示位置：左或右</span>        <span class="token key atrule">width</span><span class="token punctuation">:</span> <span class="token number">150</span> <span class="token comment"># Width to the canvas which shows the model canvas的长度</span>        <span class="token key atrule">height</span><span class="token punctuation">:</span> <span class="token number">300</span> <span class="token comment"># Height to the canvas which shows the model canvas的高度</span>        <span class="token key atrule">hOffset</span><span class="token punctuation">:</span> <span class="token number">75</span> <span class="token comment"># Horizontal offset of the canvas canvas水平偏移</span>        <span class="token key atrule">vOffset</span><span class="token punctuation">:</span> <span class="token number">-20</span> <span class="token comment"># Vertical offset of the canvas canvas垂直偏移</span>    <span class="token key atrule">mobile</span><span class="token punctuation">:</span>        <span class="token key atrule">show</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># Whether to show on mobile device 是否在移动设备上显示</span>        <span class="token key atrule">scale</span><span class="token punctuation">:</span> <span class="token number">0.5</span> <span class="token comment"># Scale on mobile device 移动设备上的缩放</span>    <span class="token key atrule">react</span><span class="token punctuation">:</span>        <span class="token key atrule">opacity</span><span class="token punctuation">:</span> <span class="token number">0.7</span> <span class="token comment"># opacity 透明度</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span>        <span class="token key atrule">canvas</span><span class="token punctuation">:</span> <span class="token string">'live2dcanvas'</span> <span class="token comment"># ID name of the canvas canvas元素的ID</span>        <span class="token key atrule">div</span><span class="token punctuation">:</span> <span class="token string">'live2d-widget'</span> <span class="token comment"># ID name of the div div元素的ID</span>    <span class="token key atrule">dev</span><span class="token punctuation">:</span>        <span class="token key atrule">border</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># Whether to show border around the canvas 在canvas周围显示边界</span>    <span class="token key atrule">dialog</span><span class="token punctuation">:</span>        <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># Display dialog 显示人物对话框</span>        <span class="token key atrule">hitokoto</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># Enable hitokoto 使用一言API</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="选择模型"><a href="#选择模型" class="headerlink" title="选择模型"></a>选择模型</h3><p>下面提供模型参考图可根据需求选择</p><h3 id="模型参考示例"><a href="#模型参考示例" class="headerlink" title="模型参考示例"></a>模型参考示例</h3><p>可根据下列模型昵称选择自己喜欢的，如hijiki一只黑色的猫</p><p>进行安装模型时<br><code>npm install --save live2d-widget-model-hijiki</code></p><blockquote><p> 参考图提供width,height可供参考(配置文件 <code>_config.yml</code> 下修改)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Hexo添加二次元动漫角色 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础笔记</title>
      <link href="posts/44149.html"/>
      <url>posts/44149.html</url>
      
        <content type="html"><![CDATA[<h1 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h1><h2 id="Java语言特点"><a href="#Java语言特点" class="headerlink" title="Java语言特点"></a>Java语言特点</h2><ol><li>跨平台( 一次开发，到处运行)</li><li>面向对象(万物皆对象)</li></ol><h2 id="Java开发运行环境"><a href="#Java开发运行环境" class="headerlink" title="Java开发运行环境"></a>Java开发运行环境</h2><p>JDK:Java开发工具集(开发人员需要安装)<a href="https://ialoe.top/posts/57766.html">window配置JDK</a></p><p>JVM:java虚拟机</p><p>JRE:java运行环境（运行java程序必须安装）</p><p>注:java程序最终是运行在jvm虚拟机上的，不同的操作系统上可以安装其对应版本的jvm，这样就实现了跨平台</p><h2 id="java程序开发的步骤"><a href="#java程序开发的步骤" class="headerlink" title="java程序开发的步骤"></a>java程序开发的步骤</h2><ol><li><p>编写源代码    (后缀.java)</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>编译                 (后缀.class)</p><p><code>javac 文件名.java</code></p></li><li><p>运行</p><p><code>java 文件名</code></p></li></ol><h2 id="java类的结构"><a href="#java类的结构" class="headerlink" title="java类的结构"></a>java类的结构</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> 类名<span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color=red>main方法是Java程序的入口</font></p><h2 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h2><h3 id="输出语句"><a href="#输出语句" class="headerlink" title="输出语句"></a>输出语句</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"输出内容"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出完后自动换行--》System.out.print("\n");</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"输出内容"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出完后不自动换行</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><pre class="line-numbers language-none"><code class="language-none">\n换行符\t大空格(Tab键)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;单行注释&#x2F;* *多行注释  *&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>内存中一块储存空间的表示</p><h4 id="变量的数据类型"><a href="#变量的数据类型" class="headerlink" title="变量的数据类型"></a>变量的数据类型</h4><ol><li><p>基本类型(8种)</p><ul><li>byte          1个字节</li><li>char          2个字节</li><li>short         2个字节</li><li>int             4个字节</li><li>long          8个字节</li><li>float          4个字节</li><li>double      8个字节</li><li>boolean    1个字节</li></ul><p>自动    小——》大</p><p>强制    大——》小</p><p>大小是根据占用字节判断</p><p>byte—》short—》int—》long—》float—》double</p><p>char——》int     自动</p><p>float——》int     强制    (int)12.3f</p></li><li><p>引用类型</p><p>String    数组    对象    除了八中基本类型之外的都属于引用数据类型</p></li></ol><ul><li>比较相等<ul><li>Java基本数据类型(8种)<ul><li>相等        ==</li><li>不相等    !=</li></ul></li><li>String<ul><li>相同        <code>字符串1.equals(字符串2)</code><ul><li>true</li></ul></li><li>不相同    <code>!字符串1.equals(字符串2)</code><ul><li>false</li></ul></li></ul></li></ul></li></ul><h4 id="变量的声明和使用"><a href="#变量的声明和使用" class="headerlink" title="变量的声明和使用"></a>变量的声明和使用</h4><ol><li>先声明后赋值<ol><li>声明变量    数据类型    变量名；</li><li>变量名 = 变量值；</li><li>使用</li></ol></li><li>声明并赋值<ol><li>声明变量    数据类型    变量名 = 变量值；</li><li>使用</li></ol></li></ol><h4 id="变量的命名规则"><a href="#变量的命名规则" class="headerlink" title="变量的命名规则"></a>变量的命名规则</h4><ol><li>字母,数字,下划线,$,但是不能以数字开头</li><li>不能与关键词重名</li><li>见名知义</li><li>多个单词组成时，第一个单词小写其余单词开头首字母大写。 如:myScore</li></ol><h4 id="键盘接收"><a href="#键盘接收" class="headerlink" title="键盘接收"></a>键盘接收</h4><ol><li><p>初始化Scanner对象</p><p><code>Scanner input=new Scanner(System.in);</code></p></li><li><p>在程序中导入Scanner类     </p><p>在类的外面写<code>import java.util.Scanner;</code></p></li><li><p>从键盘接收数据赋值给变量</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> name<span class="token operator">=</span>input<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//接收到String类型值</span><span class="token keyword">int</span> age<span class="token operator">=</span>input<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//接收到int类型的值</span><span class="token keyword">double</span> score<span class="token operator">=</span>input<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//接收到double类型的值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><h4 id="声明和使用步骤"><a href="#声明和使用步骤" class="headerlink" title="声明和使用步骤"></a>声明和使用步骤</h4><ol><li>声明</li><li>分配空间</li><li>赋值</li><li>使用</li><li>注意<ul><li>声明同时分配空间：`数据类型 [] 数组名=new 数据类型[数组长度];</li><li>数组下标从0开始        数组元素最大下标值是 <code>length-1</code></li><li>声明的时候赋值<ul><li>数据类型 [] 数组名 = new 数据类型[]{值1,值2,…}//后面的括号中不能写长度</li><li>数据类型 [] 数组名 = {值1,值2,…}//不可拆分</li></ul></li></ul></li></ol><h4 id="遍历数组元素"><a href="#遍历数组元素" class="headerlink" title="遍历数组元素"></a>遍历数组元素</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>数组名<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>数组名<span class="token punctuation">[</span>下标<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="数组的应用"><a href="#数组的应用" class="headerlink" title="数组的应用"></a>数组的应用</h4><ol><li><p>数组排序</p><p>​    使用Arrays类sort方法排序,默认升序排序</p><ul><li>步骤<ol><li>Arrays类导入    <code>import java.util.Arrays</code></li><li><code>Arrays.sort(要排序的数组);</code></li></ol></li></ul></li><li><p>求最大值(打擂台思想)</p><ul><li><p>思想</p><ol><li>设置数组第一个元素为默认最大值</li></ol></li></ul><ol start="2"><li>循环数组依次与最大值比较</li></ol><ul><li><p>关键代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> max<span class="token operator">=</span>数组<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>数组名<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>数组名<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">></span>max<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>max<span class="token operator">=</span>数组名<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>向数组中添加元素</p><p>实现思路</p><ol><li>找到待插入元素的下标<ul><li>循环数组,当满足  待插入元素大于当前数组元素的时候,终止循环,并用变量保存当前下标</li></ul></li><li>给待插入元素腾位置<ul><li>从后往前移动元素  否则会元素覆盖,丢失  i=length-1;i&gt;找到的下标值;i–前一个元素的值  赋值给  后一个</li></ul></li><li>插入元素<ul><li>数组名[下标]=元素值;</li></ul></li></ol></li></ol><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><p>符号:  =  </p><p>把等号右边的值赋给左边</p><blockquote><p> sum+=i;//sum=sum+i;</p></blockquote><h4 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h4><blockquote><p>\ + - * /(求商)  %(求余数)  ++(自增)  –(自减)</p></blockquote><h4 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h4><blockquote><p>&lt;,&gt; ,&gt;=,&lt;=,  == (比较两个数是否相等)  !=（比较两数是否不等）</p></blockquote><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><blockquote><p>||或    &amp;&amp;与    !非</p></blockquote><h4 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h4><blockquote><p> ！＞算术运算符＞关系运算符＞＆＆＞｜｜</p><p>​        最高小括号,最低赋值运算符</p></blockquote><h3 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h3><h5 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h5><p>表示程序的运行流程</p><ul><li>◇ (菱形)表示判断</li><li>矩形 表示代码块</li><li>平行四边形  输出语句</li><li>圆角矩形   开始或者结束</li></ul><h3 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h3><ol><li><p>简单的if选择结构</p><p>语法结构：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token keyword">boolean</span>类型的值 <span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//代码块</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>if-else 选择结构—–用于两种分支判断的情形</p><p>语法结构：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//代码块1</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token comment">//代码块2</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>多重if语句 :用于区间连续情形</p><p>语法结构：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//代码块1</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//代码块2</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token comment">//代码块3</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>嵌套if语句 :一个完整的 里面嵌套另一个完整的结构</p><p>语法结构：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//代码块1</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token comment">//代码块2</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//代码块3</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token comment">//代码块4</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>switch选择结构—-用于等值判断</p><p>语法结构：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">switch</span><span class="token punctuation">(</span>变量<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">case</span> 常量<span class="token number">1</span><span class="token operator">:</span><span class="token comment">//代码块1</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> 常量<span class="token number">2</span><span class="token operator">:</span><span class="token comment">//代码块2</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token comment">//代码块3</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>switch小括号里的变量  —&gt;整型和字符型,jdk版本1.7以上 支持String</li><li>break可以省略,但是省略之后case之间会贯穿执行,直到遇到break才结束</li><li>各个case之间常量值不能重复的</li><li>default 总是在最后执行的,当前面所有的case都匹配不上时,位置不固定    </li></ul></li></ol><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><ol><li><p>while循环—–先判断再执行</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//初始化循环变量</span><span class="token keyword">while</span><span class="token punctuation">(</span>判断条件<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//循环操作   </span>更新循环变量<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>do-while—先执行再判断</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//定义循环变量</span><span class="token keyword">do</span><span class="token punctuation">&#123;</span><span class="token comment">//循环体</span><span class="token comment">//循环变量的更新</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span>判断条件<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>for循环—用于固定循环次数</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span><span class="token punctuation">(</span>循环变量初始化<span class="token punctuation">;</span>条件判断<span class="token punctuation">;</span>循环变量更新<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//循环体</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>执行顺序:同while  1.变量初始化  2条件判断  3循环体  4变量更新</p><p><font color=red>for循环中3个表达式均可省略,但是一般不要省略</font></p></li><li><p>三种循环比较</p><p>顺序：</p><ul><li><p>先判断后执行：while for</p></li><li><p>先执行后判断：do-while</p></li><li><p>for循环主要用于循环次数固定</p></li><li><p>在循环条件不成立的时候，do-while至少执行一次</p></li></ul></li><li><p>二重循环</p><p>一个完整的循环结构  再嵌套另一个</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token comment">//循环体</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//循环体</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>外层循环变化一次,内层循环变化一遍</p></li></ol><h3 id="流程控制语句-1"><a href="#流程控制语句-1" class="headerlink" title="流程控制语句"></a>流程控制语句</h3><ul><li>break<ul><li>单层循环中: 终止循环，执行循环外的语句</li><li>二重循环中:用在内层循环中,只能结束内层循环,执行外层剩下的代码</li></ul></li><li>continue<ul><li>单层循环:跳过本次循环，执行下一次循环</li><li>结束本层的本次循环 执行本层下一次</li></ul></li></ul><h3 id="解决代码中的异常"><a href="#解决代码中的异常" class="headerlink" title="解决代码中的异常"></a>解决代码中的异常</h3><ul><li><p>常见的错误信息</p><ul><li>The local(局部的) variable(变量) num may not have been(可能还没有被) initialized(初始化)===&gt;变量尚未赋值就已经使用</li><li>num cannot be resolved to a variable===&gt;变量没有声明</li><li>java.util.InputMismatchException  ===&gt;输入类型不匹配</li><li>数组下标越界  java.lang.ArrayIndexOutOfBoundsException   当访问超出了数组下标范围<ul><li>Array 数组     </li><li>index 下标   </li><li>outof 超出了   </li><li>bounds 边界  </li><li>Exception 异常</li></ul></li></ul></li><li><p>简单的异常处理</p><ul><li>input.hasNextInt()  判断用户输入的内容是否是合法整数,合法为true,    否则为false<ul><li>要在变量赋值之前判断</li></ul></li></ul></li><li><p>程序调试</p><p>程序在我们的控制下一步一步执行</p><ul><li>调试代码之前,要先分析可能出错的位置</li><li>在可能出错的地方  打断点—代码执行到断点处会暂停   行号前双击</li><li>以debug模式启动程序  debug as—java application</li><li>单步执行,查找错误(F6) {程序运行到断点处才会启动调试模式}</li><li>找到错误,修改代码</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础</title>
      <link href="posts/53226.html"/>
      <url>posts/53226.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript基础"><a href="#JavaScript基础" class="headerlink" title="JavaScript基础"></a>JavaScript基础</h1><h2 id="JavaScript特点"><a href="#JavaScript特点" class="headerlink" title="JavaScript特点"></a>JavaScript特点</h2><ol><li>用于完成html网页交互</li><li>脚本语言</li><li>弱类型的</li><li>客户端的脚本</li><li>解释性的，边解释边执行</li><li>区分大小写</li></ol><h2 id="JavaScript组成"><a href="#JavaScript组成" class="headerlink" title="JavaScript组成"></a>JavaScript组成</h2><p>ECMAScript、浏览器对象模型(BOM)、文档对象模型(DOM)</p><h2 id="网页上引入js脚本三种形式"><a href="#网页上引入js脚本三种形式" class="headerlink" title="网页上引入js脚本三种形式"></a>网页上引入js脚本三种形式</h2><h4 id="1-网页内部使用"><a href="#1-网页内部使用" class="headerlink" title="1. 网页内部使用"></a>1. 网页内部使用</h4><p><code>&lt;script&gt;</code>标签添加—-&gt;<code>&lt;body&gt;&lt;/body&gt;</code>后面</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span>//js代码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="2-引入外部js脚本"><a href="#2-引入外部js脚本" class="headerlink" title="2. 引入外部js脚本"></a>2. 引入外部js脚本</h4><ol><li><p>添加JavaScript文件，在里面编写代码</p></li><li><p>在html页面中添加标签,引入外部文件</p><p><code>&lt;script type=&quot;text/javascript&quot; src=&quot;要引入文件的相对路径&quot; &gt;&lt;/script&gt;</code></p></li></ol><h4 id="3-在网页标签元素的属性中添加"><a href="#3-在网页标签元素的属性中添加" class="headerlink" title="3. 在网页标签元素的属性中添加"></a>3. 在网页标签元素的属性中添加</h4><p><code>&lt;input type=&quot;button&quot; name=&quot;btn&quot; value=&quot;请点击&quot;  onclick=&quot;alert(&#39;hello world!!!&#39;)&quot;/&gt;</code></p><h4 id="三种引入JavaScript脚本的方式分别适合在什么时候用呢？"><a href="#三种引入JavaScript脚本的方式分别适合在什么时候用呢？" class="headerlink" title="三种引入JavaScript脚本的方式分别适合在什么时候用呢？"></a>三种引入JavaScript脚本的方式分别适合在什么时候用呢？</h4><ul><li>如果在标签属性中添加，只能作用于本标签，不能实现效果的重用</li><li>如果在页面内部通过Script标签引入，可以实现本页面的效果共享</li><li>引入外部js文件，可以实现页面间的代码共享，保证网页结构代码和效果代码相分离</li></ul><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><p>变量名，函数名，属性以及函数中的参数都属于标识符</p><h3 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h3><ol><li>只能包含数字，字母，下划线和$ ，但是不能以数字开头</li><li>不能包含其他符号</li><li>不能和js中关键字，保留字冲突</li></ol><h2 id="JavaScript注释"><a href="#JavaScript注释" class="headerlink" title="JavaScript注释"></a>JavaScript注释</h2><ul><li><p>单行  //</p><p><code>//注释内容</code></p></li><li><p>多行注释  /* */</p><p><code>/*注释内容*/</code></p></li></ul><h2 id="系统弹框"><a href="#系统弹框" class="headerlink" title="系统弹框"></a>系统弹框</h2><ol><li><p><code>alert(&quot;&quot;);</code>  警示框</p></li><li><p><code>confirm(&quot;&quot;);</code>  确认框,包含确认,取消按钮</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> n<span class="token operator">=</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">"-----？"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//得到的值是布尔类型的</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token comment">//点击了确定</span>  <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token comment">//点击了取消</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>可以让用户输入的提示框</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> 变量名<span class="token operator">=</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">"提示给用户的信息"</span><span class="token punctuation">,</span><span class="token string">"默认值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>用户点击确定，能够返回用户输入的值</li><li>用户点击取消，返回的值是null</li></ul></li></ol><h2 id="JavaScript下载解析"><a href="#JavaScript下载解析" class="headerlink" title="JavaScript下载解析"></a>JavaScript下载解析</h2><ul><li><p>head:  先下载js脚本，再显示页面—-》当网络不好时，用户只能看到空白页面并且一直等待网页显示</p></li><li><p>body: 先显示网页内容，然后遇到js脚本时再下载解析—》当网络不好时，用户可以先看到没有效果的页面</p></li><li><p>body后面  html2.0不支持</p><p>为了优化加载速度大多使用异步加载(放在body后面)，先加载页面后实现效果</p></li></ul><h2 id="变量与数据类型"><a href="#变量与数据类型" class="headerlink" title="变量与数据类型"></a>变量与数据类型</h2><ul><li>console.log(“”);  向控制台输出一句话（浏览器的控制台，f12可以打开）多用于程序调试，观察变量的值</li><li>javaScript是弱类型的，松散型的</li></ul><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ol><li><p>声明</p><ul><li><p>var关键字声明变量</p><ul><li>变量声明<ul><li>var 变量名；</li><li>同时定义多个变量： var 变量名1,变量名2,….;</li></ul></li><li>变量赋值：<ul><li>var 变量名=值；</li><li>同时定义多个变量赋值： var 变量名1=值,变量名2=值,….;</li></ul></li></ul></li><li><p>let关键字定义变量</p><ul><li><p>let定义的变量，只能在定义的代码块中使用</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">let</span> a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">var</span> b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"a="</span><span class="token operator">+</span>a<span class="token operator">+</span><span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//可以输出</span><span class="token punctuation">&#125;</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"a="</span><span class="token operator">+</span>a<span class="token operator">+</span><span class="token string">"&lt;br/>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//提示变量尚未定义</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"b="</span><span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//可以正常输出</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>let不存在变量提升(var存在变量提升)—-&gt;必须声明赋值之后才能使用</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//不会报错</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token operator">+</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//变量尚未定义</span><span class="token keyword">var</span> name<span class="token operator">=</span><span class="token string">"张三"</span><span class="token punctuation">;</span><span class="token keyword">let</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>let 定义的变量会有暂时性死区</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> num1<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">let</span> num1<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"num1="</span><span class="token operator">+</span>num1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//此处输出10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>不允许重复的声明变量(在相同作用域中)</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">let</span> a<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span><span class="token comment">//报错</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li></ul></li><li><p>赋值</p><p>JavaScript语言是弱类型的</p><ol><li><p>先声明再赋值</p></li><li><p>不用声明直接赋值  x=10;//ok</p></li></ol></li><li><p>常量</p><p>使用const关键字</p><p>语法:<code>const PI=3.14;</code></p><p>注意：</p><ul><li><p>常量值是只读的，不能修改</p></li><li><p>和let的作用域是一样的</p></li></ul></li></ol><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><h4 id="undefined"><a href="#undefined" class="headerlink" title="undefined"></a>undefined</h4><p>表示:变量声明了，但是没有初始化</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> x<span class="token punctuation">;</span><span class="token comment">//声明但是没有初始化</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//undefined</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//没有定义   y is not defined</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>注意：变量未初始化和变量没有定义是不同的概念</p><h4 id="null"><a href="#null" class="headerlink" title="null"></a>null</h4><p>表示空的值</p><p>跟undefined的区别是：undefined变量定义了 但是跟本就没有赋值</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">如<span class="token operator">:</span><span class="token keyword">var</span> x<span class="token punctuation">;</span> 此时x的值就是<span class="token keyword">undefined</span> <span class="token keyword">null</span>，变量定义了，有值，并且是值就是<span class="token keyword">null</span>如<span class="token operator">:</span><span class="token keyword">var</span> z<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>  一般用于对象的初始值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="String-字符串"><a href="#String-字符串" class="headerlink" title="String 字符串"></a>String 字符串</h4><p>语法:定义 时可以用“” 或者’  ‘，但是前后必须匹配</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> str1<span class="token operator">=</span><span class="token string">"bbb"</span><span class="token punctuation">;</span><span class="token keyword">var</span> str2<span class="token operator">=</span><span class="token string">' aaa'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>注意：</p><ul><li><p><font color=red>字符串的值不能更改</font></p></li><li><p>toString()方法，可以将  数值，对象，布尔，字符串 转换成字符串</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> num<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//以十进制的形式转换成字符串</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//以二进制的形式转换成字符串</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//以八进制的形式转换成字符串</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//以十六进制的形式转换成字符串</span>注意：<span class="token keyword">null</span>和<span class="token keyword">undefined</span> 不能调用这个方法<span class="token punctuation">,</span>会报错<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以使用 String()来进行判断一个变量的值是否为null或undefined</p></li><li><p>String（）函数</p><p>可以将任意类型转换成String字符串，包括null和undefined</p></li></ul><h4 id="number"><a href="#number" class="headerlink" title="number"></a>number</h4><p>可以存储任何数字，整型和浮点型</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> n1<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">;</span><span class="token keyword">var</span> n2<span class="token operator">=</span><span class="token number">90.99</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>注意:浮点数值的最高精度是17位小数，但在进行算数计算时其精确度远远不如整型。</p><h4 id="特殊值和方法"><a href="#特殊值和方法" class="headerlink" title="特殊值和方法"></a>特殊值和方法</h4><ul><li><p>infinity  :当大于或小于某个界限时，该值会被自动转换为特殊值——Infinity。</p></li><li><p>isFinite()函数可以判断一个数值是否无穷大。</p><ul><li>它会把参数转换为数值，如果得到的结果是NaN、Infinity或-Infinity，函数返回false（假），其他情况返回true（真）。</li></ul></li><li><p>NaN:非数值（Not a Number）</p><ul><li>任何涉及NaN的操作（例如NaN/5）都会返回NaN。</li><li>NaN与任何值都不相等，包括NaN本身</li></ul></li><li><p>isNaN():检测一个值是否为NaN</p><p>规则:</p><ul><li>isNaN方法会把参数转换为数值，若不能转换为数值则函数返回false。</li><li>任何不能被转换为数值的值都会导致这个函数返回true。</li></ul></li><li><p>parseInt()  解析字符串并返回一个整数或NaN,可以解析二进制，八进制和十六进制的数值.</p></li><li><p>parseFloat():解析字符串并返回一个浮点数</p><ul><li>parseFloat()函数始终都会忽略前导的零，且不具备传入基数的能力</li></ul></li></ul><h4 id="Boolean"><a href="#Boolean" class="headerlink" title="Boolean"></a>Boolean</h4><p>值: true false</p><p>转型函数Boolean()</p><p>规则:</p><ol><li>String类型：任何非空字符串转换为true，空字符串（””）转换为false；</li><li>Number类型：任何非零数值（包括无穷大）转换为true，0和NaN转换为false；</li></ol><h4 id="Object类型"><a href="#Object类型" class="headerlink" title="Object类型"></a>Object类型</h4><p>任何对象转换为true，null转换为false；</p><p>注意:当遇到流程控制语句（如if语句）也会对数据自动执行相应的Boolean转换</p><h4 id="typeof"><a href="#typeof" class="headerlink" title="typeof"></a>typeof</h4><p>来判断一个值或变量究竟属于哪种数据类型。</p><p>typeof操作符返回的数据类型有以下几种：</p><ul><li>undefined</li><li>boolean</li><li>string</li><li>number</li><li>object</li><li>function</li></ul><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>表达式:JavaScript中短语,包括变量,字面量和运算符，简单表达式可以使用运算符组合成复杂表达式</p><h3 id="一元运算符"><a href="#一元运算符" class="headerlink" title="一元运算符"></a>一元运算符</h3><p>只有一个操作数</p><p><code>如:a++  a--  ++b  --b</code></p><p><strong>注意:在javascript可以对任何值使用, 包括字符串,布尔值,浮点值和对象</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">'89'</span><span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">;</span>   <span class="token comment">//90，数值字符串自动转换成数值</span><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token string">'ab'</span><span class="token punctuation">;</span> b<span class="token operator">++</span><span class="token punctuation">;</span>   <span class="token comment">//NaN，字符串包含非数值转成NaN</span><span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  c<span class="token operator">++</span><span class="token punctuation">;</span>   <span class="token comment">//1，false转成数值是0，累加就是1</span><span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token number">2.3</span><span class="token punctuation">;</span>   d<span class="token operator">++</span><span class="token punctuation">;</span>   <span class="token comment">//3.3，直接加1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>执行顺序</p><ul><li>++i:先自增再运算<ul><li>i=i+1</li><li>其他</li></ul></li><li>i++;先运算再自增<ul><li>其他运算</li><li> i=i+1</li></ul></li></ul><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><ol><li><p>加法</p><p>运算:</p><ol><li>求和 </li><li>连接(跟字符串运算)</li><li>注意:NAN和任何类型运算都是NAN</li></ol><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> result1 <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">//3</span><span class="token keyword">var</span> result2 <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">NaN</span><span class="token punctuation">;</span>  <span class="token comment">//NaNvar result3 = 100 + "100";  //100100</span><span class="token keyword">var</span> result4 <span class="token operator">=</span> <span class="token string">"10+20="</span> <span class="token operator">+</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">;</span>  <span class="token comment">//10+20=1020</span><span class="token keyword">var</span> result5 <span class="token operator">=</span> <span class="token string">"10+20="</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//10+20=30</span><span class="token keyword">var</span> result6 <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token number">20</span> <span class="token operator">+</span> <span class="token string">"=10+20"</span><span class="token punctuation">;</span>  <span class="token comment">//30=10+20</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>减法</p><p>求差时遇到字符串,布尔类型,NAN,null等非数字类型时,先按规则转换成数字,再进行减法运算</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> result1 <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">-</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment">//4,因为true被转换成了1</span><span class="token keyword">var</span> result2 <span class="token operator">=</span> <span class="token number">NaN</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">//NaN</span><span class="token keyword">var</span> result3 <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">;</span>  <span class="token comment">//2</span><span class="token keyword">var</span> result4 <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">-</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token comment">//5,因为""被转换成了0</span><span class="token keyword">var</span> result5 <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">-</span> <span class="token string">"2"</span><span class="token punctuation">;</span>  <span class="token comment">//3,因为"2"被转换成了2</span><span class="token keyword">var</span> result6 <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">-</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token comment">//5,因为null被转换成了0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>乘法</p><p>求积时遇到字符串,布尔类型,NAN,null等非数字类型时,先按规则转换成数字,再进行减法运算</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> result1 <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token number">70</span><span class="token punctuation">;</span>    <span class="token comment">//7000</span><span class="token keyword">var</span> result2 <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token number">NaN</span><span class="token punctuation">;</span>  <span class="token comment">//NaN,只要有一个操作数为NaN即为NaN</span><span class="token keyword">var</span> result3 <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment">//100,因为true被转换成了1</span><span class="token keyword">var</span> result4 <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token comment">//0,因为""被转换成了0</span><span class="token keyword">var</span> result5 <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token string">"70"</span><span class="token punctuation">;</span>  <span class="token comment">//7000,因为"70"被转换成了70</span><span class="token keyword">var</span> result6 <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token comment">//0,因为null被转换成了0</span><span class="token keyword">var</span> result7 <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token string">"hello"</span><span class="token punctuation">;</span> <span class="token comment">//NaN,因为"hello"被转换成了NaN</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>除法</p><p>运算符由斜杠符号（/）表示,遇到非数字类型时先转换为数字再运算</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> result1 <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token number">50</span><span class="token punctuation">;</span>  <span class="token comment">// 2</span><span class="token keyword">var</span> result2 <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token number">NaN</span><span class="token punctuation">;</span>  <span class="token comment">//NaN,只要有一个操作数为NaN即为NaN  </span><span class="token keyword">var</span> result3 <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment">//100,因为true被转换成了1</span><span class="token keyword">var</span> result4 <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token comment">//Infinity,因为""被转换成了0 </span><span class="token keyword">var</span> result5 <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token string">"50"</span><span class="token punctuation">;</span>  <span class="token comment">//2,因为"50"被转换成了50</span><span class="token keyword">var</span> result6 <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token comment">//Infinity,因为null被转换成了0</span><span class="token keyword">var</span> result7 <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token string">"hello"</span><span class="token punctuation">;</span> <span class="token comment">//NaN,因为"hello"被转换成了NaN</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>取模(求余)</p><p>%–à求余数</p></li></ol><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><p><code>相等（==）、不相等（!=）、全等（===）和不全等（!==）</code></p><ul><li><p>== 和 === 的区别</p><ul><li>==会进行类型转换</li><li>===不会转换类型</li></ul></li><li><p>运算规则</p><ul><li>如果操作数都是数值，则按照数值比较</li><li>如果两个操作数都是字符串，则比较两个字符对应的字符编码值</li><li>如果一个操作数是数值，则将另一个操作数转换为数值，然后进行数值比较</li><li>如果一个操作数是一个布尔值，则先将其转换为数值，然后再执行比较</li></ul></li></ul><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><ol><li><p>&amp;&amp;(并且)</p><p>两边不全是boolean类型</p><ol><li>第一个表达式转换为false,最终的结果为第一个操作数</li><li>第一个表达式转换为true,最终的结果为第二个操作数</li></ol></li><li><p> || (或者)</p></li></ol><p>   两边不全是boolean类型</p><ol><li>第一个表达式转换为false,最终的结果为第二个操作数</li><li>第一个表达式转换为true,最终的结果为第一个操作数</li></ol><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token string">"1234"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true 非空字符串</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false  空字符串</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// false  0</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token number">8888</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true  非0</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// false 对象是null </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//  true 对象不是空</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>右边赋值给左边<code>+= -= *= /= %=</code></p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="定义调用"><a href="#定义调用" class="headerlink" title="定义调用"></a>定义调用</h3><ul><li>方式一</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function-variable function">定义</span><span class="token operator">:</span><span class="token keyword">function</span> <span class="token function">函数名</span><span class="token punctuation">(</span><span class="token parameter">形参<span class="token number">1</span><span class="token punctuation">,</span>形参<span class="token number">2</span><span class="token punctuation">,</span>形参<span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">...</span></span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>调用<span class="token operator">:</span><span class="token function">函数名</span><span class="token punctuation">(</span>实参<span class="token number">1</span><span class="token punctuation">,</span>实参<span class="token number">2</span><span class="token punctuation">,</span>实参<span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//通过函数名调用</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>方式二</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">定义<span class="token operator">:</span>函数定义表达式<span class="token operator">:</span><span class="token punctuation">(</span>定义的函数是匿名函数<span class="token punctuation">,</span>赋值给了一个变量<span class="token punctuation">)</span><span class="token keyword">var</span> <span class="token function-variable function">变量名</span><span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">形参<span class="token number">1</span><span class="token punctuation">,</span>形参<span class="token number">2</span><span class="token punctuation">,</span>形参<span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">...</span></span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>调用<span class="token operator">:</span>    <span class="token punctuation">&#125;</span>   <span class="token function">变量名</span><span class="token punctuation">(</span>实参<span class="token number">1</span><span class="token punctuation">,</span>实参<span class="token number">2</span><span class="token punctuation">,</span>实参<span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//通过变量名调用</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h3><ol><li>定义函数是传入的参数是形参</li><li>调用函数时传入的参数是实参</li><li>形参和实参没有必然联系,形参只是占位符,并且方便函数内使用</li><li>javaScript中,形参和实参的个数可以不一致,但是注意java中必须保持一致</li><li>获取参数的方式:argument对象<ul><li>argument[0]:获得调用函数时传入的第一个实参</li><li>argument[1]:获得调用函数时传入的第二个实参…以此类推</li><li>argument.length属性可以获得实参个数</li></ul></li></ol><p>例子:求最大值</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">getMax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> max<span class="token operator">=</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>max <span class="token operator">&lt;</span> arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            max<span class="token operator">=</span>arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"最大值是"</span><span class="token operator">+</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>   <span class="token function">getMax</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">函数名</span><span class="token punctuation">(</span><span class="token parameter">形参</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span>   返回值<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">var</span>  变量<span class="token operator">=</span><span class="token function">函数名</span><span class="token punctuation">(</span>实参<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用函数之后,返回值保存在变量里面</span><span class="token comment">//可以返回任何类型的值,包括函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h3><ul><li><p>全局作用域</p></li><li><p>局部作用域</p><p>如:在函数中定义的变量局部作用域</p></li><li><p>注意:如果在函数内部定义变量没有用var声明,直接赋值,那么将是一个全局变量</p><ul><li>全局变量声明了之后,在程序的各个部分都可以使用,包括在函数里面</li><li>但是在函数内定义的局部变量,只能在函数内部使用</li></ul></li></ul><h3 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h3><p>在函数内部没有定义,就会在上一级作用域里面找</p><p>由内向外的作用域中寻找变量，直到找到为止</p><p>如果找到全局作用域也没找到，那么该变量的值为undefined</p><h3 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h3><p><font color=red>可以读取一个函数内部变量函数</font></p><p>因为变量作用域的关系，导致内部可以读取全局变量，但是外部却不能访问内部变量</p><ul><li><p>如何能从外部读取内部变量？</p><p>可以在函数内部再定义一个函数</p></li></ul><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">function f1()&#123;var n&#x3D;999;function f2()&#123;alert(n);&#x2F;&#x2F;99在f2函数里面访问了f1内部的局部变量&#125;return f2;&#x2F;&#x2F;JavaScript返回值可以返回任何数据类型，包括函数&#125;var rel&#x3D;f1();&#x2F;&#x2F;调用f1并接收返回值rel();&#x2F;&#x2F;做到了在函数外部访问内部的局部变量<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>作用<ul><li>读取到函数内部的变量</li><li>函数内部变量的作用范围扩大，常驻内存不会被回收</li></ul></li></ul><p>不用太纠结到底怎样才算闭包，其实我们每一个写的函数都是一个简单的闭包</p><h3 id="立即执行函数"><a href="#立即执行函数" class="headerlink" title="立即执行函数"></a>立即执行函数</h3><p>把函数的定义和调用合在一起</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="块级作用域与函数的声明"><a href="#块级作用域与函数的声明" class="headerlink" title="块级作用域与函数的声明"></a>块级作用域与函数的声明</h3><p>ES6之前    函数不能声明在块级作用域里的，函数的声明是会全部提升至顶部</p><p>ES6块级作用域里可以声明函数，但是函数声明的行为类似于let，在块级外部是不能访问的</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>现如今:</p><ol><li>允许在块级中声明函数】</li><li>函数的生命类似于var,会有提升</li><li>函数的生命是会提升至头部</li></ol><h3 id="函数参数的默认值"><a href="#函数参数的默认值" class="headerlink" title="函数参数的默认值"></a>函数参数的默认值</h3><p>在ES6之后，允许为参数指定默认值</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">18</span></span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol><li><p>不允许有同名参数</p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">function f2(x,x,y&#x3D;18)&#123;&#x2F;&#x2F;报错console.log(x,x,y);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>参数默认值是不能传值，每次都重新计算表达式默认的值，惰性求值</p></li><li><p>参数默认值的位置</p><ul><li>一般来说，定义了默认值的参数，应该是尾参数，如果为非尾参数设置默认值，实际上并没有办法省略</li><li>如果不是尾参数，可以显示输入undefined但是null不行</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML笔记</title>
      <link href="posts/47785.html"/>
      <url>posts/47785.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML的笔记-上"><a href="#HTML的笔记-上" class="headerlink" title="HTML的笔记(上)"></a>HTML的笔记(上)</h1><h2 id="什么是HTML"><a href="#什么是HTML" class="headerlink" title="什么是HTML"></a>什么是HTML</h2><p>HTML：Hyper  Text  Markup  Language(超级文本标签语言)</p><h2 id="HTML页面结构"><a href="#HTML页面结构" class="headerlink" title="HTML页面结构"></a>HTML页面结构</h2><p>有两部分组成：</p><h3 id="文档类型声明"><a href="#文档类型声明" class="headerlink" title="文档类型声明"></a>文档类型声明</h3><p>作用：告诉浏览器使用的是HTML的哪个版本<br><code>语法：在网页的最顶端编写：</code><br><code>&lt;!doctype  html&gt;</code></p><h3 id="HTML页面部分"><a href="#HTML页面部分" class="headerlink" title="HTML页面部分"></a>HTML页面部分</h3><p>作用：表示页面的开始和结束<br><code>语法：在文档类型声明的下面编写一对&lt;html&gt;标记</code><br><code>&lt;html&gt;&lt;/html&gt;</code><br>Html标签里面有两个标签，分别是</p><ul><li><code>&lt;head&gt;&lt;/head&gt;</code><br>作用：表示网页的头部</li><li><code>&lt;body&gt;&lt;/body&gt;</code><br>作用：表示网页的身体，以后页面中所有的要显示的内容，都要写在body标签里<h2 id="HTML语法"><a href="#HTML语法" class="headerlink" title="HTML语法"></a>HTML语法</h2><h3 id="标记语法"><a href="#标记语法" class="headerlink" title="标记语法"></a>标记语法</h3>标记又叫标签或者元素，在网页中表示一些功能，必须使用&lt;&gt;括起来，标记分为两大类<h4 id="封闭类型标记"><a href="#封闭类型标记" class="headerlink" title="封闭类型标记"></a>封闭类型标记</h4>也叫双标记，必须成对出现，有开始和结束标签。<br><code>语法：&lt;标记&gt;内容&lt;/标记&gt;</code><br>eg:<code>&lt;html&gt;</code> <code>&lt;head&gt;</code> <code>&lt;body&gt;</code> <code>&lt;title&gt;</code> <code>&lt;p&gt;</code> <code>&lt;b&gt;</code> <code>&lt;s&gt;</code><br><code>&lt;u&gt;</code> <code>&lt;i&gt;</code> <code>&lt;sup&gt;</code> <code>&lt;sub&gt;</code> <code>&lt;h1&gt;~&lt;h6&gt;</code> <code>&lt;pre&gt;</code><h4 id="非封闭标记"><a href="#非封闭标记" class="headerlink" title="非封闭标记"></a>非封闭标记</h4>也叫单标记，或空标记，只有一个标记组成，即表示开始也表示结束。<br><code>语法：&lt;标记&gt;或者&lt;标记/&gt;</code><br>eg:<code>&lt;!doctype html&gt;</code> <code>&lt;meta&gt;</code> <code>&lt;br&gt;</code> <code>&lt;hr&gt;</code><h3 id="标签的嵌套"><a href="#标签的嵌套" class="headerlink" title="标签的嵌套"></a>标签的嵌套</h3>在一个标签中，出现另外一个标签，从而形成层叠关系，里面的标签又称为“子标签”，外面的标签又称为“父标签”<br>推荐写法：<br>  在子元素前，使用一个Tab缩进，表示层级关系<h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3>不会在页面中显示，只是让程序员方便读代码<br><code>语法：&lt;!--注释的内容--&gt;</code></li></ul><p><font color=red>注意：注释标签不能嵌套，也不能出现在其他标记结构中</font>&gt;</p><p>eg:<code>&lt;head   &lt;--错误的注释  --&gt;&gt;</code></p><h3 id="lt-head-gt-中的内容"><a href="#lt-head-gt-中的内容" class="headerlink" title="&lt;head&gt; 中的内容"></a><code>&lt;head&gt;</code> 中的内容</h3><ul><li>指定网页的编码格式<br><code>&lt;meta  charset=”utf-8”&gt;</code></li><li>指定网页的标题<br><code>&lt;title&gt;捞月亮的渔夫&lt;/title&gt;</code><h2 id="网页中的文本："><a href="#网页中的文本：" class="headerlink" title="网页中的文本："></a>网页中的文本：</h2><h3 id="特殊字符的处理"><a href="#特殊字符的处理" class="headerlink" title="特殊字符的处理"></a>特殊字符的处理</h3>需要一些<font color=red>转义字符</font>来表示特殊的符号<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span> 表示一个空格<span class="token entity named-entity" title="&lt;">&amp;lt;</span>    表示一个&lt;<span class="token entity named-entity" title="&gt;">&amp;gt;</span>   表示一个><span class="token entity named-entity" title="&copy;">&amp;copy;</span>  表示©<span class="token entity named-entity" title="&yen;">&amp;yen;</span>  表示 ¥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>表示回车或换行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="文本的样式"><a href="#文本的样式" class="headerlink" title="文本的样式"></a>文本的样式</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span> 加粗<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>   斜体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u</span><span class="token punctuation">></span></span>下划线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s</span><span class="token punctuation">></span></span>删除线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sub</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sub</span><span class="token punctuation">></span></span> 下标<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sup</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sup</span><span class="token punctuation">></span></span>上标<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="标题元素"><a href="#标题元素" class="headerlink" title="标题元素"></a>标题元素</h2>作用：在页面中以醒目的方式显示文本<br><code>&lt;h1&gt;这是一级标签&lt;/h1&gt;</code><h1>这是一级标签</h1><br><code>&lt;h2&gt;这是二级标签&lt;/h2&gt;</code><h2>这是二级标签</h2><br><code>&lt;h3&gt;这是三级标签&lt;/h3&gt;</code><h3>这是三级标签</h3><br><code>&lt;h4&gt;这是四级标签&lt;/h4&gt;</code><h4>这是四级标签</h4><br><code>&lt;h5&gt;这是五级标签&lt;/h5&gt;</code><h5>这是五级标签</h5><br><code>&lt;h6&gt;这是六级标签&lt;/h6&gt;</code><h6>这是六级标签</h6><h2 id="标签的属性和值"><a href="#标签的属性和值" class="headerlink" title="标签的属性和值"></a>标签的属性和值</h2>允许通过属性对标签进行修饰</li></ul><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><ul><li>align<br>作用：标记内容的水平对齐方式</li></ul><p><code>语法：</code></p><p>属性必须声明在开始标签中</p><p><code>&lt;标签 属性名=”属性值”&gt;&lt;/标记&gt;</code></p><p>多个属性之间用空格隔开</p><p><code>&lt;标签属性名=”属性值”属性名=”属性值”&gt;&lt;/标记&gt;</code><br><code>eg:&lt;h1&gt;~&lt;h6&gt;、&lt;p&gt;</code></p><h4 id="取值"><a href="#取值" class="headerlink" title="取值"></a>取值</h4><ul><li>left 左对齐</li><li>center居中对齐</li><li>right右对齐<br>eg:<code>&lt;h1 align=&quot;center&quot;&gt;骆驼祥子&lt;/h1&gt;</code><h1 align="center">骆驼祥子</h1></li></ul><h3 id="段落元素"><a href="#段落元素" class="headerlink" title="段落元素"></a>段落元素</h3><p>表示一段文字,独占一行</p><p><code>标签：&lt;p&gt;&lt;/p&gt;</code></p><h3 id="预格式化"><a href="#预格式化" class="headerlink" title="预格式化"></a>预格式化</h3><p>保留HTML代码中的回车和空格</p><p><code>语法：&lt;pre&gt;&lt;/pre&gt;</code></p><h3 id="网页中的图像"><a href="#网页中的图像" class="headerlink" title="网页中的图像"></a>网页中的图像</h3><p>用于表示网络中任意资源(图片、视频、音频、文件)的位置（或路径）</p><p>URL：统一资源定位符(Uniform Resource Locator)</p><h4 id="路径的表现形式："><a href="#路径的表现形式：" class="headerlink" title="路径的表现形式："></a>路径的表现形式：</h4><h5 id="1-绝对路径：从文件所在的最高级目录开始查找所经过的路径"><a href="#1-绝对路径：从文件所在的最高级目录开始查找所经过的路径" class="headerlink" title="1.绝对路径：从文件所在的最高级目录开始查找所经过的路径"></a>1.绝对路径：从文件所在的最高级目录开始查找所经过的路径</h5><h5 id="2-相对路径从当前文件位置出开始查找所经过的路径"><a href="#2-相对路径从当前文件位置出开始查找所经过的路径" class="headerlink" title="2.相对路径从当前文件位置出开始查找所经过的路径"></a>2.相对路径从当前文件位置出开始查找所经过的路径</h5><pre class="line-numbers language-none"><code class="language-none">相对路径口诀：同目录，直接用（直接填写图片名）子目录，先进入，再使用&lt;img src&#x3D;&quot;1&#x2F;1.jpg&quot; &gt;父目录，先返回，再使用..&#x2F;表示返回上一级目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="图像的标签："><a href="#图像的标签：" class="headerlink" title="图像的标签："></a>图像的标签：</h4><p><code>&lt;img&gt;</code></p><ol><li>src(必须属性)：要显示的图片的url（相对/绝对）</li><li>width：设置图片宽度，单位是px或%</li><li>height：设置图片高度，单位是px或%</li><li>alt：鼠标移至图片时显示的文字</li><li>title：图片加载不出来时显示的文字<h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><code>语法：&lt;a&gt;&lt;/a&gt;</code><h4 id="属性："><a href="#属性：" class="headerlink" title="属性："></a>属性：</h4></li></ol><ul><li>href：<br>  链接到那个地址<br>  此属性，必须有，如果没有此属性：<code>&lt;a&gt;标签将不具有超链接的功能&lt;a href=&quot;http://www.baidu.com&quot;&gt;百度一下&lt;/a&gt;</code></li><li>target：<br>指定打开新网页的方式</li></ul><p>取值：<br>    1._self：默认值，在当前的标签页中打开新网页<br>    2._blank：在新标签页中打开新网页</p><h4 id="超链接的其他用法："><a href="#超链接的其他用法：" class="headerlink" title="超链接的其他用法："></a>超链接的其他用法：</h4><h5 id="1-资源下载"><a href="#1-资源下载" class="headerlink" title="1.资源下载"></a>1.资源下载</h5><p>让链接的href等于.rar或者.zip即可<br><code>&lt;a  href=”1.zip”&gt;点我下载&lt;/a&gt;</code></p><h5 id="2-电子邮件链接"><a href="#2-电子邮件链接" class="headerlink" title="2.电子邮件链接"></a>2.电子邮件链接</h5><p><code>&lt;a  href=”mailto:邮箱地址”&gt;联系我们&lt;/a&gt;</code><br><code>&lt;a href=&quot;mailto:2831843232@qq.com&quot;&gt;</code></p><h5 id="3-锚点就是网页中的一个记号，通过超链接可以迅速到达记号所在的位置"><a href="#3-锚点就是网页中的一个记号，通过超链接可以迅速到达记号所在的位置" class="headerlink" title="3.锚点就是网页中的一个记号，通过超链接可以迅速到达记号所在的位置."></a>3.锚点就是网页中的一个记号，通过超链接可以迅速到达记号所在的位置.</h5><p>实现步骤：</p><blockquote><p>第一步：定义锚点</p><blockquote><p>方式一：使用任意标签的id属性定义锚点</p><blockquote><p><code>&lt;h1  id=”锚点名字”&gt;化妆品区域&lt;/h1&gt;</code></p></blockquote></blockquote><blockquote><p>方式二：使用a标签的name属性，定义锚点</p><blockquote><p><code>&lt;a  name=”锚点名字”&gt;化妆品区域&lt;/a&gt;</code></p></blockquote></blockquote><p>第二步：链接到锚点</p><blockquote><p><code>&lt;a  href=”#锚点名字”&gt;化妆品&lt;/a&gt;</code></p></blockquote></blockquote><h5 id="4、返回顶部"><a href="#4、返回顶部" class="headerlink" title="4、返回顶部"></a>4、返回顶部</h5><p><code>&lt;a  href=”#”&gt;返回顶部&lt;/a&gt;</code></p><h3 id="块级元素和行内元素"><a href="#块级元素和行内元素" class="headerlink" title="块级元素和行内元素"></a>块级元素和行内元素</h3><h4 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h4><p>在网页中独占一行，可以设置宽高</p><p><code>比如&lt;h1&gt;~&lt;h6&gt;,&lt;p&gt;，&lt;hr&gt;，&lt;table&gt;、div、ul、ol、li、pre、tr、td、form</code></p><h4 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h4><p>和其他元素在一行显示,大部分行内元素不可以设置宽高</p><p><code>&lt;a&gt;,&lt;img&gt;&lt;b&gt;&lt;s&gt;&lt;u&gt;&lt;i&gt;&lt;sub&gt;&lt;sup&gt;,&lt;span&gt;</code><br><code>可以设置宽高的行内元素有：&lt;img&gt;  input;</code><br><code>&lt;span&gt;:处理同一行文本的不同形式</code></p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>作用：按照从上到下的方式来显示所有的数据，并且在数据前添加一些标识</p><h4 id="列表的组成"><a href="#列表的组成" class="headerlink" title="列表的组成"></a>列表的组成</h4><p>由列表类型和列表项组成</p><h5 id="1-列表类型："><a href="#1-列表类型：" class="headerlink" title="1.列表类型："></a>1.列表类型：</h5><p>有序列表:<code>&lt;ol&gt;&lt;/ol&gt;</code>    —Order list<br>无序列表：<code>&lt;ul&gt;&lt;/ul&gt;</code>   —Unorder list</p><h5 id="2-列表项："><a href="#2-列表项：" class="headerlink" title="2.列表项："></a>2.列表项：</h5><p>用于表示列表中的数据：<code>&lt;li&gt;&lt;/li&gt;</code>     —List  item</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">语法：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>篮球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>足球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>排球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>台球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="列表属性："><a href="#列表属性：" class="headerlink" title="列表属性："></a>列表属性：</h4><h5 id="有序列表在属性："><a href="#有序列表在属性：" class="headerlink" title="有序列表在属性："></a>有序列表在属性：</h5><ul><li><p>type<br>作用：指定列表标识的类型</p></li><li><p>取值：</p><ul><li>1：按数字排列，默认值</li><li>a:按小写字母排列</li><li>A：按大写字母排列</li><li>i:按小写罗马数字排列</li><li>I：按大些罗马字母排列</li></ul></li><li><p>start<br>  作用：指定起始编号从几开始，是数字</p><h5 id="无序列表的属性："><a href="#无序列表的属性：" class="headerlink" title="无序列表的属性："></a>无序列表的属性：</h5></li><li><p>type：<br>作用：指定列表标识的类型</p></li><li><p>取值：</p><ul><li>disc  默认值，实心圆</li><li>circle  空心圆</li><li>square  实心方块</li><li>none   不显示标识（最常用）<h5 id="列表的嵌套"><a href="#列表的嵌套" class="headerlink" title="列表的嵌套"></a>列表的嵌套</h5>在一个列表项中又出现了一个列表</li></ul></li></ul><p>被嵌套的列表只能出现在<code>&lt;li&gt;</code>中，不能乱放<br><img src="https://files.islu.cn/detail/load.gif" data-original="https://cdn.jsdelivr.net/gh/isome/ialoe-article@master/HTML笔记/li嵌套.png"></p><h5 id="定义列表："><a href="#定义列表：" class="headerlink" title="定义列表："></a>定义列表：</h5><p>通常用对某个名词的解释</p><p>语法：</p><p><code>&lt;dl&gt;&lt;/dl&gt;</code>  —–definition  list(定义列表)</p><p><code>&lt;dt&gt;&lt;/dt&gt;</code> 定义要解释的名词</p><p><code>&lt;dd&gt;&lt;/dd&gt;</code> 表示定义列表中对名字的解释内容</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">格式：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>《水浒传》<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>中国四大名著<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="结构标记"><a href="#结构标记" class="headerlink" title="结构标记"></a>结构标记</h3><p>作用：用于描述整个网页的结构，提升标记的语义性</p><h4 id="常用的语义标记"><a href="#常用的语义标记" class="headerlink" title="常用的语义标记"></a>常用的语义标记</h4><ol><li><code>&lt;header&gt;&lt;/header&gt;</code><br>作用：定义网页或某部分内容的头部</li><li><code>&lt;nav&gt;&lt;/nav&gt;</code><br>作用：定义网页的导航链接部分</li><li><code>&lt;section&gt;&lt;/section&gt;</code><br>作用：表示网页的主体内容</li><li><code>&lt;article&gt;&lt;/article&gt;</code><br>作用：定义与文字描述相关的内容</li><li><code>&lt;aside&gt;&lt;/aside&gt;</code><br>作用：定义页面中侧边栏的信息</li><li><code>&lt;footer&gt;&lt;/footer&gt;</code><br>作用：定义某区域的底部信息<h6 id="他们的本质都是div标签-lt-div-gt-lt-div-gt-：表示块区元素，独占一行，用于表示一个区域。是H5新增的语义化新标签"><a href="#他们的本质都是div标签-lt-div-gt-lt-div-gt-：表示块区元素，独占一行，用于表示一个区域。是H5新增的语义化新标签" class="headerlink" title="他们的本质都是div标签&lt;div&gt;&lt;/div&gt;：表示块区元素，独占一行，用于表示一个区域。是H5新增的语义化新标签"></a>他们的本质都是div标签<code>&lt;div&gt;&lt;/div&gt;</code>：表示块区元素，独占一行，用于表示一个区域。是H5新增的语义化新标签</h6><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3>表格是由单元格按照从左到右，从上到下的顺序排列而成的。<h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4>表格：<code>&lt;table&gt;&lt;/table&gt; 行：</code><tr></tr>` —-table  row 表示一行<br>列或单元格：<td></td> —-table   data  表示一个单元格<pre class="line-numbers language-html" data-language="html"><code class="language-html">表格的写法：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>行必须写在表里面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>单元格必须写在row里面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="表格的属性："><a href="#表格的属性：" class="headerlink" title="表格的属性："></a>表格的属性：</h4></li></ol><ul><li><p>table的属性:</p><ul><li>width<br>设置表格的宽度，单位是px或%</li><li>height<br>设置表格的高度，单位是px或%</li><li>align<br>设置表格的水平对齐方式<br>left/center/right</li><li>border<br>设置表格的边框宽度，默认值是0，没有单位</li><li>bgcolor<br>设置背景颜色，取值为对应颜色的英文</li><li>cellspacing<br>表示单元格的外边距，就是单元格与单元格之间的距离</li><li>cellpadding<br>设置单元格的内边距，就是单元格与内容的距离</li></ul></li><li><p>tr的属性：</p><ul><li>align<br>设置当前行里面内容的水平对齐方式<ul><li>取值：left/center/right</li></ul></li><li>valign<br>设置当前行里面内容的垂直对齐方式<ul><li>取值：top(顶部)middle(居中)/bottom（底部）</li></ul></li><li>bgcolor：<br>设置该行的背景颜色</li></ul></li><li><p>td的属性：</p><ul><li>width,设置单元格的宽度</li><li>height</li><li>align</li><li>valign</li><li>bgcolor</li><li>colspan:  跨列</li><li>rowspan：跨行<h6 id="被跨掉的单元格必须删除"><a href="#被跨掉的单元格必须删除" class="headerlink" title="被跨掉的单元格必须删除"></a>被跨掉的单元格必须删除</h6><h4 id="可选标记"><a href="#可选标记" class="headerlink" title="可选标记"></a>可选标记</h4></li></ul></li><li><p>表格的标题：<code>&lt;caption&gt;&lt;/caption&gt;</code>必须写在<code>&lt;table&gt;</code>标签的第一行，一个表格只能有一个标题</p></li><li><p>所有的<code>&lt;td&gt;</code>标签都可以被<code>&lt;th&gt;</code>标签替换，table header内容的标题</p></li><li><p>行分组可以将连续的几个行，划分到一个组中，进行统一的管理。</p><ul><li>表头行分组<code>&lt;thead&gt;&lt;/thead&gt;</code>表格中最上面的一行或几行，进行分组，就可以将这一行放在<code>&lt;thead&gt;</code>标签里</li><li>表尾行分组<code>&lt;tfoot&gt;&lt;/tfoot&gt;</code>表格中最后一行进行分组的话，可以放在<code>&lt;tfoot&gt;</code>标签中</li><li>表主体行分组<code>&lt;tbody&gt;&lt;/tbody&gt;</code>可以将若干个行，放在<code>&lt;tbody&gt;</code>中,进行统一设置<h6 id="注意：若不对table中的数据进行分组，默认都在中"><a href="#注意：若不对table中的数据进行分组，默认都在中" class="headerlink" title="注意：若不对table中的数据进行分组，默认都在中"></a>注意：若不对table中的数据进行分组，默认都在<tbody>中</h6></li><li>表格的嵌套被嵌套的表格必须写在<code>&lt;td&gt;</code>里面.</li></ul></li></ul><h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><ol><li>提供可以与用户****交互****的可视化界面</li><li>收集用户信息并提交给服务器</li></ol><h4 id="标签-1"><a href="#标签-1" class="headerlink" title="标签"></a>标签</h4><p><code>&lt;table&gt;&lt;/table&gt;</code></p><h4 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h4><ol><li>action    作用：定义表单内容被提交到哪个服务器里，后面跟url    </li><li>method  作用：定义表单数据的提交方式<ul><li>作用：定义表单数据的提交方式</li><li>取值：<ol><li>get默认是get</li><li>post</li></ol></li></ul></li></ol><h4 id="可视化控件"><a href="#可视化控件" class="headerlink" title="可视化控件"></a>可视化控件</h4><ul><li><p>分类</p><ol><li>input元素</li><li>textarea 多行文本域元素</li><li>select和option选项框元素</li><li>其他元素</li></ol></li><li><p>Input元素</p><ul><li><p>作用：在页面中提供各种各样的输入控件</p></li><li><p>语法：<code>&lt;input&gt;或者&lt;input /&gt;</code></p></li><li><p>属性：</p><ol><li><p>type    指定创建输入控件的类型</p><ul><li><p>取值</p><ol><li><p>text  文本框</p></li><li><p>password 密码框</p></li><li><p>submit  提交按钮</p></li><li><p>reset  重置按钮</p></li><li><p>radio  单选框(单选框需要分组才能使用</p><p>使用name属性分组，让两个单选框的name值一致即可)</p></li><li><p>checkbox 多选框</p></li><li><p>file  文件选择框(用于上传文件)</p></li></ol></li></ul></li><li><p>value    指定控件的值</p></li><li><p>placeholder    占位符，默认显示在控件上的文本</p></li><li><p>readonly    只能看，不能改，没有值</p></li><li><p>disabled    禁用控件，没有值</p></li></ol></li><li><p>表单辅助标签</p><ul><li><code>&lt;input type=”checkbox” id=”login”&gt;</code></li><li><code>&lt;label  for=”login”&gt;下次自动登录&lt;/label&gt;</code></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> 常用HTML标签解释及应用 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
